[INFO ] 2021-04-25 10:06:05.381 [main] CampApiApplication - Hello this is an info message
[ERROR] 2021-04-25 10:06:05.427 [main] CampApiApplication - Error Message Logged !!!
java.lang.NullPointerException: NullError
	at com.camp.campApi.CampApiApplication.main(CampApiApplication.java:21) [classes/:?]
[INFO ] 2021-04-25 10:06:06.592 [restartedMain] CampApiApplication - Hello this is an info message
[ERROR] 2021-04-25 10:06:06.592 [restartedMain] CampApiApplication - Error Message Logged !!!
java.lang.NullPointerException: NullError
	at com.camp.campApi.CampApiApplication.main(CampApiApplication.java:21) [classes/:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:567) ~[?:?]
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49) [spring-boot-devtools-2.4.2.jar:2.4.2]
[INFO ] 2021-04-25 10:06:07.271 [restartedMain] CampApiApplication - Starting CampApiApplication using Java 12.0.1 on network4 with PID 12428 (J:\jav\campApi\target\classes started by m.bandpey in J:\jav\campApi)
[INFO ] 2021-04-25 10:06:07.271 [restartedMain] CampApiApplication - No active profile set, falling back to default profiles: default
[INFO ] 2021-04-25 10:06:07.324 [restartedMain] DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
[INFO ] 2021-04-25 10:06:07.324 [restartedMain] DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
[INFO ] 2021-04-25 10:06:08.310 [restartedMain] RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
[INFO ] 2021-04-25 10:06:08.310 [restartedMain] RepositoryConfigurationDelegate - Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
[INFO ] 2021-04-25 10:06:08.351 [restartedMain] RepositoryConfigurationExtensionSupport - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.camp.campApi.repository.ChildPlaceRepo. If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
[INFO ] 2021-04-25 10:06:08.353 [restartedMain] RepositoryConfigurationExtensionSupport - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.camp.campApi.repository.PlaceRepo. If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
[INFO ] 2021-04-25 10:06:08.353 [restartedMain] RepositoryConfigurationExtensionSupport - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.camp.campApi.repository.ResponseRepo. If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
[INFO ] 2021-04-25 10:06:08.353 [restartedMain] RepositoryConfigurationExtensionSupport - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.camp.campApi.repository.RoleRepo. If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
[INFO ] 2021-04-25 10:06:08.361 [restartedMain] RepositoryConfigurationExtensionSupport - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.camp.campApi.repository.UserRepo. If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
[INFO ] 2021-04-25 10:06:08.363 [restartedMain] RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 47 ms. Found 0 JDBC repository interfaces.
[INFO ] 2021-04-25 10:06:08.371 [restartedMain] RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
[INFO ] 2021-04-25 10:06:08.373 [restartedMain] RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
[INFO ] 2021-04-25 10:06:08.437 [restartedMain] RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 66 ms. Found 5 JPA repository interfaces.
[INFO ] 2021-04-25 10:06:08.860 [restartedMain] PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@2b3708a7' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[INFO ] 2021-04-25 10:06:08.868 [restartedMain] PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[INFO ] 2021-04-25 10:06:09.141 [restartedMain] TomcatWebServer - Tomcat initialized with port(s): 8085 (http)
[INFO ] 2021-04-25 10:06:09.151 [restartedMain] Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8085"]
[INFO ] 2021-04-25 10:06:09.151 [restartedMain] StandardService - Starting service [Tomcat]
[INFO ] 2021-04-25 10:06:09.151 [restartedMain] StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.41]
[INFO ] 2021-04-25 10:06:09.327 [restartedMain] [/] - Initializing Spring embedded WebApplicationContext
[INFO ] 2021-04-25 10:06:09.327 [restartedMain] ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1987 ms
[INFO ] 2021-04-25 10:06:09.553 [restartedMain] LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
[INFO ] 2021-04-25 10:06:09.614 [restartedMain] Version - HHH000412: Hibernate ORM core version 5.4.27.Final
[INFO ] 2021-04-25 10:06:09.754 [restartedMain] Version - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
[INFO ] 2021-04-25 10:06:09.865 [restartedMain] HikariDataSource - HikariPool-1 - Starting...
[INFO ] 2021-04-25 10:06:09.923 [restartedMain] HikariDataSource - HikariPool-1 - Start completed.
[INFO ] 2021-04-25 10:06:09.939 [restartedMain] Dialect - HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
[INFO ] 2021-04-25 10:06:10.930 [restartedMain] JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[INFO ] 2021-04-25 10:06:10.945 [restartedMain] LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
[INFO ] 2021-04-25 10:06:10.983 [restartedMain] OptionalLiveReloadServer - LiveReload server is running on port 35729
[WARN ] 2021-04-25 10:06:11.716 [restartedMain] JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
[INFO ] 2021-04-25 10:06:11.986 [restartedMain] DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@3622ba5a, org.springframework.security.web.context.SecurityContextPersistenceFilter@4c0b9100, org.springframework.security.web.header.HeaderWriterFilter@47d9495d, org.springframework.security.web.authentication.logout.LogoutFilter@59ba0950, com.camp.campApi.security.JwtAuthorization@702b8a88, com.camp.campApi.security.JwtAuthentication@6b61ea70, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@7320e16e, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@12996831, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@2e395ef1, org.springframework.security.web.session.SessionManagementFilter@7fdc6ff0, org.springframework.security.web.access.ExceptionTranslationFilter@5ccbebfe, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@3af2d0fc]
[INFO ] 2021-04-25 10:06:12.064 [restartedMain] ThreadPoolTaskExecutor - Initializing ExecutorService 'applicationTaskExecutor'
[INFO ] 2021-04-25 10:06:12.449 [restartedMain] Http11NioProtocol - Starting ProtocolHandler ["http-nio-8085"]
[INFO ] 2021-04-25 10:06:12.634 [restartedMain] TomcatWebServer - Tomcat started on port(s): 8085 (http) with context path ''
[INFO ] 2021-04-25 10:06:12.650 [restartedMain] CampApiApplication - Started CampApiApplication in 5.981 seconds (JVM running for 10.521)
[INFO ] 2021-04-25 10:52:42.454 [main] CampApiApplication - Hello this is an info message
[ERROR] 2021-04-25 10:52:42.454 [main] CampApiApplication - Error Message Logged !!!
java.lang.NullPointerException: NullError
	at com.camp.campApi.CampApiApplication.main(CampApiApplication.java:21) [classes/:?]
[INFO ] 2021-04-25 10:52:43.310 [restartedMain] CampApiApplication - Hello this is an info message
[ERROR] 2021-04-25 10:52:43.310 [restartedMain] CampApiApplication - Error Message Logged !!!
java.lang.NullPointerException: NullError
	at com.camp.campApi.CampApiApplication.main(CampApiApplication.java:21) [classes/:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:567) ~[?:?]
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49) [spring-boot-devtools-2.4.2.jar:2.4.2]
[INFO ] 2021-04-25 10:52:43.815 [restartedMain] CampApiApplication - Starting CampApiApplication using Java 12.0.1 on network4 with PID 704 (J:\jav\campApi\target\classes started by m.bandpey in J:\jav\campApi)
[INFO ] 2021-04-25 10:52:43.815 [restartedMain] CampApiApplication - No active profile set, falling back to default profiles: default
[INFO ] 2021-04-25 10:52:43.862 [restartedMain] DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
[INFO ] 2021-04-25 10:52:43.862 [restartedMain] DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
[INFO ] 2021-04-25 10:52:44.763 [restartedMain] RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
[INFO ] 2021-04-25 10:52:44.763 [restartedMain] RepositoryConfigurationDelegate - Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
[INFO ] 2021-04-25 10:52:44.795 [restartedMain] RepositoryConfigurationExtensionSupport - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.camp.campApi.repository.ChildPlaceRepo. If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
[INFO ] 2021-04-25 10:52:44.810 [restartedMain] RepositoryConfigurationExtensionSupport - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.camp.campApi.repository.PlaceRepo. If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
[INFO ] 2021-04-25 10:52:44.810 [restartedMain] RepositoryConfigurationExtensionSupport - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.camp.campApi.repository.ResponseRepo. If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
[INFO ] 2021-04-25 10:52:44.810 [restartedMain] RepositoryConfigurationExtensionSupport - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.camp.campApi.repository.RoleRepo. If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
[INFO ] 2021-04-25 10:52:44.810 [restartedMain] RepositoryConfigurationExtensionSupport - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.camp.campApi.repository.UserRepo. If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
[INFO ] 2021-04-25 10:52:44.810 [restartedMain] RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 48 ms. Found 0 JDBC repository interfaces.
[INFO ] 2021-04-25 10:52:44.810 [restartedMain] RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
[INFO ] 2021-04-25 10:52:44.810 [restartedMain] RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
[INFO ] 2021-04-25 10:52:44.879 [restartedMain] RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 50 ms. Found 5 JPA repository interfaces.
[INFO ] 2021-04-25 10:52:45.227 [restartedMain] PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@12f4cfff' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[INFO ] 2021-04-25 10:52:45.227 [restartedMain] PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[INFO ] 2021-04-25 10:52:45.528 [restartedMain] TomcatWebServer - Tomcat initialized with port(s): 8085 (http)
[INFO ] 2021-04-25 10:52:45.528 [restartedMain] Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8085"]
[INFO ] 2021-04-25 10:52:45.528 [restartedMain] StandardService - Starting service [Tomcat]
[INFO ] 2021-04-25 10:52:45.528 [restartedMain] StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.41]
[INFO ] 2021-04-25 10:52:45.695 [restartedMain] [/] - Initializing Spring embedded WebApplicationContext
[INFO ] 2021-04-25 10:52:45.695 [restartedMain] ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1833 ms
[INFO ] 2021-04-25 10:52:45.880 [restartedMain] LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
[INFO ] 2021-04-25 10:52:45.927 [restartedMain] Version - HHH000412: Hibernate ORM core version 5.4.27.Final
[INFO ] 2021-04-25 10:52:46.042 [restartedMain] Version - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
[INFO ] 2021-04-25 10:52:46.143 [restartedMain] HikariDataSource - HikariPool-1 - Starting...
[INFO ] 2021-04-25 10:52:46.227 [restartedMain] HikariDataSource - HikariPool-1 - Start completed.
[INFO ] 2021-04-25 10:52:46.227 [restartedMain] Dialect - HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
[INFO ] 2021-04-25 10:52:48.024 [restartedMain] JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[INFO ] 2021-04-25 10:52:48.032 [restartedMain] LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
[INFO ] 2021-04-25 10:52:48.114 [restartedMain] OptionalLiveReloadServer - LiveReload server is running on port 35729
[WARN ] 2021-04-25 10:52:48.834 [restartedMain] JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
[INFO ] 2021-04-25 10:52:49.066 [restartedMain] DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@447b081, org.springframework.security.web.context.SecurityContextPersistenceFilter@538e3a21, org.springframework.security.web.header.HeaderWriterFilter@1264a4ca, org.springframework.security.web.authentication.logout.LogoutFilter@19910a62, com.camp.campApi.security.JwtAuthorization@6db6f692, com.camp.campApi.security.JwtAuthentication@4d899245, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@57766fd2, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@4fb3295f, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@6a9f890f, org.springframework.security.web.session.SessionManagementFilter@4ddfa83f, org.springframework.security.web.access.ExceptionTranslationFilter@12e4cacf, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@56f1d824]
[INFO ] 2021-04-25 10:52:49.172 [restartedMain] ThreadPoolTaskExecutor - Initializing ExecutorService 'applicationTaskExecutor'
[INFO ] 2021-04-25 10:52:49.607 [restartedMain] Http11NioProtocol - Starting ProtocolHandler ["http-nio-8085"]
[INFO ] 2021-04-25 10:52:49.749 [restartedMain] TomcatWebServer - Tomcat started on port(s): 8085 (http) with context path ''
[INFO ] 2021-04-25 10:52:49.764 [restartedMain] CampApiApplication - Started CampApiApplication in 6.334 seconds (JVM running for 10.214)
[INFO ] 2021-04-25 10:59:45.710 [http-nio-8085-exec-1] [/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
[INFO ] 2021-04-25 10:59:45.710 [http-nio-8085-exec-1] DispatcherServlet - Initializing Servlet 'dispatcherServlet'
[INFO ] 2021-04-25 10:59:45.710 [http-nio-8085-exec-1] DispatcherServlet - Completed initialization in 0 ms
[ERROR] 2021-04-25 10:59:45.732 [http-nio-8085-exec-1] [dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception
com.auth0.jwt.exceptions.JWTDecodeException: The token was expected to have 3 parts, but got 1.
	at com.auth0.jwt.TokenUtils.splitToken(TokenUtils.java:21) ~[java-jwt-3.7.0.jar:?]
	at com.auth0.jwt.JWTDecoder.<init>(JWTDecoder.java:31) ~[java-jwt-3.7.0.jar:?]
	at com.auth0.jwt.JWTDecoder.<init>(JWTDecoder.java:27) ~[java-jwt-3.7.0.jar:?]
	at com.auth0.jwt.JWT.decode(JWT.java:45) ~[java-jwt-3.7.0.jar:?]
	at com.camp.campApi.security.JwtAuthorization.doFilterInternal(JwtAuthorization.java:60) ~[classes/:?]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) ~[spring-web-5.3.3.jar:5.3.3]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336) ~[spring-security-web-5.4.2.jar:5.4.2]
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103) ~[spring-security-web-5.4.2.jar:5.4.2]
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89) ~[spring-security-web-5.4.2.jar:5.4.2]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336) ~[spring-security-web-5.4.2.jar:5.4.2]
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90) ~[spring-security-web-5.4.2.jar:5.4.2]
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75) ~[spring-security-web-5.4.2.jar:5.4.2]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) ~[spring-web-5.3.3.jar:5.3.3]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336) ~[spring-security-web-5.4.2.jar:5.4.2]
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:110) ~[spring-security-web-5.4.2.jar:5.4.2]
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:80) ~[spring-security-web-5.4.2.jar:5.4.2]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336) ~[spring-security-web-5.4.2.jar:5.4.2]
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55) ~[spring-security-web-5.4.2.jar:5.4.2]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) ~[spring-web-5.3.3.jar:5.3.3]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336) ~[spring-security-web-5.4.2.jar:5.4.2]
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:211) ~[spring-security-web-5.4.2.jar:5.4.2]
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:183) ~[spring-security-web-5.4.2.jar:5.4.2]
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358) ~[spring-web-5.3.3.jar:5.3.3]
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271) ~[spring-web-5.3.3.jar:5.3.3]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.41.jar:9.0.41]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.41.jar:9.0.41]
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100) ~[spring-web-5.3.3.jar:5.3.3]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) ~[spring-web-5.3.3.jar:5.3.3]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.41.jar:9.0.41]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.41.jar:9.0.41]
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93) ~[spring-web-5.3.3.jar:5.3.3]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) ~[spring-web-5.3.3.jar:5.3.3]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.41.jar:9.0.41]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.41.jar:9.0.41]
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201) ~[spring-web-5.3.3.jar:5.3.3]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) ~[spring-web-5.3.3.jar:5.3.3]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.41.jar:9.0.41]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.41.jar:9.0.41]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202) [tomcat-embed-core-9.0.41.jar:9.0.41]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97) [tomcat-embed-core-9.0.41.jar:9.0.41]
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542) [tomcat-embed-core-9.0.41.jar:9.0.41]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143) [tomcat-embed-core-9.0.41.jar:9.0.41]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92) [tomcat-embed-core-9.0.41.jar:9.0.41]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78) [tomcat-embed-core-9.0.41.jar:9.0.41]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343) [tomcat-embed-core-9.0.41.jar:9.0.41]
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374) [tomcat-embed-core-9.0.41.jar:9.0.41]
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65) [tomcat-embed-core-9.0.41.jar:9.0.41]
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:888) [tomcat-embed-core-9.0.41.jar:9.0.41]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1597) [tomcat-embed-core-9.0.41.jar:9.0.41]
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49) [tomcat-embed-core-9.0.41.jar:9.0.41]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128) [?:?]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628) [?:?]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61) [tomcat-embed-core-9.0.41.jar:9.0.41]
	at java.lang.Thread.run(Thread.java:835) [?:?]
[ERROR] 2021-04-25 10:59:45.910 [http-nio-8085-exec-1] JwtAuthEntryPoint - Unauthorized error. Message - Full authentication is required to access this resource
[WARN ] 2021-04-25 11:00:49.582 [http-nio-8085-exec-4] ExceptionHandlerExceptionResolver - Resolved [org.springframework.security.access.AccessDeniedException: Access is denied]
[WARN ] 2021-04-25 11:00:57.441 [http-nio-8085-exec-5] ExceptionHandlerExceptionResolver - Resolved [org.springframework.http.converter.HttpMessageNotWritableException: Could not write JSON: Infinite recursion (StackOverflowError); nested exception is com.fasterxml.jackson.databind.JsonMappingException: Infinite recursion (StackOverflowError) (through reference chain: org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"])]
[ERROR] 2021-04-25 11:40:32.088 [http-nio-8085-exec-8] [dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception
java.lang.RuntimeException: Unable to convert Json into Java Object: com.fasterxml.jackson.databind.exc.MismatchedInputException: No content to map due to end-of-input
 at [Source: (org.apache.catalina.connector.CoyoteInputStream); line: 1, column: 0]
	at com.camp.campApi.security.JwtAuthentication.attemptAuthentication(JwtAuthentication.java:44) ~[classes/:?]
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:222) ~[spring-security-web-5.4.2.jar:5.4.2]
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:212) ~[spring-security-web-5.4.2.jar:5.4.2]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336) ~[spring-security-web-5.4.2.jar:5.4.2]
	at com.camp.campApi.security.JwtAuthorization.doFilterInternal(JwtAuthorization.java:74) ~[classes/:?]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) ~[spring-web-5.3.3.jar:5.3.3]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336) ~[spring-security-web-5.4.2.jar:5.4.2]
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103) ~[spring-security-web-5.4.2.jar:5.4.2]
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89) ~[spring-security-web-5.4.2.jar:5.4.2]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336) ~[spring-security-web-5.4.2.jar:5.4.2]
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90) ~[spring-security-web-5.4.2.jar:5.4.2]
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75) ~[spring-security-web-5.4.2.jar:5.4.2]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) ~[spring-web-5.3.3.jar:5.3.3]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336) ~[spring-security-web-5.4.2.jar:5.4.2]
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:110) ~[spring-security-web-5.4.2.jar:5.4.2]
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:80) ~[spring-security-web-5.4.2.jar:5.4.2]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336) ~[spring-security-web-5.4.2.jar:5.4.2]
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55) ~[spring-security-web-5.4.2.jar:5.4.2]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) ~[spring-web-5.3.3.jar:5.3.3]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336) ~[spring-security-web-5.4.2.jar:5.4.2]
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:211) ~[spring-security-web-5.4.2.jar:5.4.2]
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:183) ~[spring-security-web-5.4.2.jar:5.4.2]
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358) ~[spring-web-5.3.3.jar:5.3.3]
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271) ~[spring-web-5.3.3.jar:5.3.3]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.41.jar:9.0.41]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.41.jar:9.0.41]
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100) ~[spring-web-5.3.3.jar:5.3.3]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) ~[spring-web-5.3.3.jar:5.3.3]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.41.jar:9.0.41]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.41.jar:9.0.41]
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93) ~[spring-web-5.3.3.jar:5.3.3]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) ~[spring-web-5.3.3.jar:5.3.3]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.41.jar:9.0.41]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.41.jar:9.0.41]
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201) ~[spring-web-5.3.3.jar:5.3.3]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) ~[spring-web-5.3.3.jar:5.3.3]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.41.jar:9.0.41]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.41.jar:9.0.41]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202) [tomcat-embed-core-9.0.41.jar:9.0.41]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97) [tomcat-embed-core-9.0.41.jar:9.0.41]
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542) [tomcat-embed-core-9.0.41.jar:9.0.41]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143) [tomcat-embed-core-9.0.41.jar:9.0.41]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92) [tomcat-embed-core-9.0.41.jar:9.0.41]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78) [tomcat-embed-core-9.0.41.jar:9.0.41]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343) [tomcat-embed-core-9.0.41.jar:9.0.41]
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374) [tomcat-embed-core-9.0.41.jar:9.0.41]
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65) [tomcat-embed-core-9.0.41.jar:9.0.41]
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:888) [tomcat-embed-core-9.0.41.jar:9.0.41]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1597) [tomcat-embed-core-9.0.41.jar:9.0.41]
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49) [tomcat-embed-core-9.0.41.jar:9.0.41]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128) [?:?]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628) [?:?]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61) [tomcat-embed-core-9.0.41.jar:9.0.41]
	at java.lang.Thread.run(Thread.java:835) [?:?]
[ERROR] 2021-04-25 11:40:32.270 [http-nio-8085-exec-8] JwtAuthEntryPoint - Unauthorized error. Message - Full authentication is required to access this resource
[WARN ] 2021-04-25 11:47:44.521 [http-nio-8085-exec-2] ExceptionHandlerExceptionResolver - Resolved [org.springframework.http.converter.HttpMessageNotWritableException: Could not write JSON: Infinite recursion (StackOverflowError); nested exception is com.fasterxml.jackson.databind.JsonMappingException: Infinite recursion (StackOverflowError) (through reference chain: org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"])]
[ERROR] 2021-04-25 11:48:09.066 [http-nio-8085-exec-3] JwtAuthEntryPoint - Unauthorized error. Message - Full authentication is required to access this resource
[WARN ] 2021-04-25 11:48:17.458 [http-nio-8085-exec-4] ExceptionHandlerExceptionResolver - Resolved [org.springframework.http.converter.HttpMessageNotWritableException: Could not write JSON: Infinite recursion (StackOverflowError); nested exception is com.fasterxml.jackson.databind.JsonMappingException: Infinite recursion (StackOverflowError) (through reference chain: org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"])]
[ERROR] 2021-04-25 11:49:23.447 [http-nio-8085-exec-6] [dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception
com.auth0.jwt.exceptions.JWTDecodeException: The token was expected to have 3 parts, but got 1.
	at com.auth0.jwt.TokenUtils.splitToken(TokenUtils.java:21) ~[java-jwt-3.7.0.jar:?]
	at com.auth0.jwt.JWTDecoder.<init>(JWTDecoder.java:31) ~[java-jwt-3.7.0.jar:?]
	at com.auth0.jwt.JWTDecoder.<init>(JWTDecoder.java:27) ~[java-jwt-3.7.0.jar:?]
	at com.auth0.jwt.JWT.decode(JWT.java:45) ~[java-jwt-3.7.0.jar:?]
	at com.camp.campApi.security.JwtAuthorization.doFilterInternal(JwtAuthorization.java:60) ~[classes/:?]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) ~[spring-web-5.3.3.jar:5.3.3]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336) ~[spring-security-web-5.4.2.jar:5.4.2]
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103) ~[spring-security-web-5.4.2.jar:5.4.2]
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89) ~[spring-security-web-5.4.2.jar:5.4.2]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336) ~[spring-security-web-5.4.2.jar:5.4.2]
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90) ~[spring-security-web-5.4.2.jar:5.4.2]
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75) ~[spring-security-web-5.4.2.jar:5.4.2]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) ~[spring-web-5.3.3.jar:5.3.3]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336) ~[spring-security-web-5.4.2.jar:5.4.2]
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:110) ~[spring-security-web-5.4.2.jar:5.4.2]
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:80) ~[spring-security-web-5.4.2.jar:5.4.2]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336) ~[spring-security-web-5.4.2.jar:5.4.2]
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55) ~[spring-security-web-5.4.2.jar:5.4.2]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) ~[spring-web-5.3.3.jar:5.3.3]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336) ~[spring-security-web-5.4.2.jar:5.4.2]
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:211) ~[spring-security-web-5.4.2.jar:5.4.2]
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:183) ~[spring-security-web-5.4.2.jar:5.4.2]
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358) ~[spring-web-5.3.3.jar:5.3.3]
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271) ~[spring-web-5.3.3.jar:5.3.3]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.41.jar:9.0.41]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.41.jar:9.0.41]
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100) ~[spring-web-5.3.3.jar:5.3.3]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) ~[spring-web-5.3.3.jar:5.3.3]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.41.jar:9.0.41]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.41.jar:9.0.41]
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93) ~[spring-web-5.3.3.jar:5.3.3]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) ~[spring-web-5.3.3.jar:5.3.3]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.41.jar:9.0.41]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.41.jar:9.0.41]
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201) ~[spring-web-5.3.3.jar:5.3.3]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) ~[spring-web-5.3.3.jar:5.3.3]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.41.jar:9.0.41]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.41.jar:9.0.41]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202) [tomcat-embed-core-9.0.41.jar:9.0.41]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97) [tomcat-embed-core-9.0.41.jar:9.0.41]
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542) [tomcat-embed-core-9.0.41.jar:9.0.41]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143) [tomcat-embed-core-9.0.41.jar:9.0.41]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92) [tomcat-embed-core-9.0.41.jar:9.0.41]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78) [tomcat-embed-core-9.0.41.jar:9.0.41]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343) [tomcat-embed-core-9.0.41.jar:9.0.41]
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374) [tomcat-embed-core-9.0.41.jar:9.0.41]
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65) [tomcat-embed-core-9.0.41.jar:9.0.41]
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:888) [tomcat-embed-core-9.0.41.jar:9.0.41]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1597) [tomcat-embed-core-9.0.41.jar:9.0.41]
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49) [tomcat-embed-core-9.0.41.jar:9.0.41]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128) [?:?]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628) [?:?]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61) [tomcat-embed-core-9.0.41.jar:9.0.41]
	at java.lang.Thread.run(Thread.java:835) [?:?]
[ERROR] 2021-04-25 11:49:23.557 [http-nio-8085-exec-6] JwtAuthEntryPoint - Unauthorized error. Message - Full authentication is required to access this resource
[WARN ] 2021-04-25 12:00:40.569 [http-nio-8085-exec-7] ExceptionHandlerExceptionResolver - Resolved [org.springframework.http.converter.HttpMessageNotWritableException: Could not write JSON: Infinite recursion (StackOverflowError); nested exception is com.fasterxml.jackson.databind.JsonMappingException: Infinite recursion (StackOverflowError) (through reference chain: org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"])]
[ERROR] 2021-04-25 12:02:55.028 [http-nio-8085-exec-9] [dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception
com.auth0.jwt.exceptions.JWTDecodeException: The token was expected to have 3 parts, but got 1.
	at com.auth0.jwt.TokenUtils.splitToken(TokenUtils.java:21) ~[java-jwt-3.7.0.jar:?]
	at com.auth0.jwt.JWTDecoder.<init>(JWTDecoder.java:31) ~[java-jwt-3.7.0.jar:?]
	at com.auth0.jwt.JWTDecoder.<init>(JWTDecoder.java:27) ~[java-jwt-3.7.0.jar:?]
	at com.auth0.jwt.JWT.decode(JWT.java:45) ~[java-jwt-3.7.0.jar:?]
	at com.camp.campApi.security.JwtAuthorization.doFilterInternal(JwtAuthorization.java:60) ~[classes/:?]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) ~[spring-web-5.3.3.jar:5.3.3]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336) ~[spring-security-web-5.4.2.jar:5.4.2]
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103) ~[spring-security-web-5.4.2.jar:5.4.2]
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89) ~[spring-security-web-5.4.2.jar:5.4.2]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336) ~[spring-security-web-5.4.2.jar:5.4.2]
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90) ~[spring-security-web-5.4.2.jar:5.4.2]
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75) ~[spring-security-web-5.4.2.jar:5.4.2]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) ~[spring-web-5.3.3.jar:5.3.3]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336) ~[spring-security-web-5.4.2.jar:5.4.2]
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:110) ~[spring-security-web-5.4.2.jar:5.4.2]
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:80) ~[spring-security-web-5.4.2.jar:5.4.2]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336) ~[spring-security-web-5.4.2.jar:5.4.2]
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55) ~[spring-security-web-5.4.2.jar:5.4.2]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) ~[spring-web-5.3.3.jar:5.3.3]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336) ~[spring-security-web-5.4.2.jar:5.4.2]
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:211) ~[spring-security-web-5.4.2.jar:5.4.2]
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:183) ~[spring-security-web-5.4.2.jar:5.4.2]
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358) ~[spring-web-5.3.3.jar:5.3.3]
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271) ~[spring-web-5.3.3.jar:5.3.3]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.41.jar:9.0.41]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.41.jar:9.0.41]
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100) ~[spring-web-5.3.3.jar:5.3.3]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) ~[spring-web-5.3.3.jar:5.3.3]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.41.jar:9.0.41]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.41.jar:9.0.41]
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93) ~[spring-web-5.3.3.jar:5.3.3]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) ~[spring-web-5.3.3.jar:5.3.3]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.41.jar:9.0.41]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.41.jar:9.0.41]
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201) ~[spring-web-5.3.3.jar:5.3.3]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) ~[spring-web-5.3.3.jar:5.3.3]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.41.jar:9.0.41]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.41.jar:9.0.41]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202) [tomcat-embed-core-9.0.41.jar:9.0.41]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97) [tomcat-embed-core-9.0.41.jar:9.0.41]
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542) [tomcat-embed-core-9.0.41.jar:9.0.41]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143) [tomcat-embed-core-9.0.41.jar:9.0.41]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92) [tomcat-embed-core-9.0.41.jar:9.0.41]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78) [tomcat-embed-core-9.0.41.jar:9.0.41]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343) [tomcat-embed-core-9.0.41.jar:9.0.41]
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374) [tomcat-embed-core-9.0.41.jar:9.0.41]
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65) [tomcat-embed-core-9.0.41.jar:9.0.41]
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:888) [tomcat-embed-core-9.0.41.jar:9.0.41]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1597) [tomcat-embed-core-9.0.41.jar:9.0.41]
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49) [tomcat-embed-core-9.0.41.jar:9.0.41]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128) [?:?]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628) [?:?]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61) [tomcat-embed-core-9.0.41.jar:9.0.41]
	at java.lang.Thread.run(Thread.java:835) [?:?]
[ERROR] 2021-04-25 12:02:55.168 [http-nio-8085-exec-9] JwtAuthEntryPoint - Unauthorized error. Message - Full authentication is required to access this resource
[WARN ] 2021-04-25 12:03:19.189 [http-nio-8085-exec-2] ExceptionHandlerExceptionResolver - Resolved [org.springframework.http.converter.HttpMessageNotWritableException: Could not write JSON: Infinite recursion (StackOverflowError); nested exception is com.fasterxml.jackson.databind.JsonMappingException: Infinite recursion (StackOverflowError) (through reference chain: org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"])]
[WARN ] 2021-04-25 12:20:18.678 [http-nio-8085-exec-5] ExceptionHandlerExceptionResolver - Resolved [org.springframework.http.converter.HttpMessageNotWritableException: Could not write JSON: Infinite recursion (StackOverflowError); nested exception is com.fasterxml.jackson.databind.JsonMappingException: Infinite recursion (StackOverflowError) (through reference chain: org.hibernate.collection.internal.PersistentSet[2]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[2]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[2]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[2]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[2]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[2]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[2]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[2]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[2]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[2]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[2]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[2]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[2]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[2]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[2]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[2]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[2]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[2]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[2]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[2]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[2]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[2]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[2]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[2]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[2]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[2]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[2]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[2]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[2]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[2]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[2]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[2]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[2]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[2]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[2]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[2]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[2]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[2]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[2]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[2]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[2]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[2]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[2]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[2]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[2]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[2]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[2]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[2]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[2]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[2]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[2]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[2]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[2]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[2]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[2]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[2]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[2]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[2]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[2]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[2]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[2]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[2]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[2]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[2]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[2]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[2]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[2]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[2]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[2]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[2]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[2]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[2]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[2]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[2]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[2]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[2]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[2]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[2]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[2]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[2]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[2]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[2]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[2]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[2]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[2]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[2]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[2]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[2]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[2]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[2]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[2]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[2]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[2]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[2]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[2]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[2]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[2]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[2]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[2]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[2]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[2]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[2]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[2]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[2]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[2]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[2]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[2]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[2]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[2]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[2]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[2]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[2]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[2]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[2]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[2]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[2]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[2]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[2]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[2]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[2]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[2]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[2]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[2]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[2]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[2]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[2]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[2]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[2]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[2]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[2]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[2]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[2]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[2]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[2]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[2]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[2]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[2]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[2]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[2]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[2]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[2]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[2]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[2]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[2]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[2]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[2]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[2]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[2]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[2]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[2]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[2]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[2]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[2]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[2]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[2]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[2]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[2]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[2]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[2]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[2]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[2]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[2]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[2]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[2]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[2]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[2]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[2]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[2]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[2]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[2]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[2]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[2]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[2]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[2]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[2]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[2]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[2]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[2]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[2]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[2]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[2]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[2]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[2]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[2]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[2]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[2]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[2]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[2]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[2]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[2]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[2]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[2]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[2]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[2]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[2]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[2]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[2]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[2]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[2]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[2]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[2]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[2]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[2]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[2]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[2]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[2]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[2]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[2]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[2]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[2]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[2]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[2]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[2]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[2]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[2]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[2]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[2]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[2]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[2]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[2]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[2]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[2]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[2]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[2]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[2]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[2]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[2]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[2]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[2]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[2]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[2]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[2]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[2]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[2]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[2]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[2]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[2]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[2]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[2]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[2]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[2]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[2]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[2]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[2]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[2]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[2]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[2]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[2]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[2]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[2]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[2]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[2]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[2]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[2]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[2]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[2]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[2]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[2]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[2]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[2]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[2]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[2]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[2]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[2]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[2]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[2]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[2]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[2]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[2]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[2]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[2]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[2]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[2]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[2]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[2]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[2]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[2]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[2]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[2]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[2]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[2]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[2]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[2]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[2]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[2]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[2]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[2]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[2]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[2]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[2]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[2]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[2]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[2]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[2]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[2]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[2]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[2]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[2]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[2]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[2]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[2]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[2]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[2]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[2]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[2]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[2]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[2]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[2]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[2]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[2]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[2]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[2]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[2]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[2]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[2]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[2]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[2]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[2]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[2]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[2]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[2]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[2]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[2]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[2]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[2]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[2]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[2]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[2]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[2]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[2]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[2]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[2]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[2]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[2]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[2]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[2]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[2]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[2]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[2]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[2]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[2]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[2]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[2]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[2]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[2]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[2]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[2]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[2]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[2]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[2]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[2]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[2]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[2]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[2]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[2]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[2]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[2]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[2]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[2]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[2]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[2]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[2]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[2]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[2]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[2]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[2]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[2]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[2]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[2]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[2]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[2]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[2]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[2]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[2]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[2]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[2]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[2]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[2]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[2]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[2]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[2]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[2]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[2]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[2]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[2]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[2]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[2]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[2]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[2]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[2]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[2]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[2]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[2]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[2]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[2]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[2]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[2]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[2]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[2]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[2]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[2]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[2]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[2]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[2]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[2]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[2]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[2]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[2]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[2]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[2]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[2]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[2]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[2]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[2]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[2]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[2]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[2]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[2]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[2]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[2]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[2]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[2]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[2]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[2]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[2]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[2]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[2]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[2]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[2]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[2]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[2]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[2]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[2]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[2]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[2]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[2]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[2]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[2]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[2]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[2]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[2]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[2]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[2]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[2]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[2]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[2]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[2]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[2]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[2]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[2]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[2]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[2]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[2]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[2]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[2]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[2]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[2]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[2]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[2]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[2]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[2]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[2]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[2]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[2]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[2]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[2]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[2]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[2]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[2]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[2]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[2]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[2]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[2]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[2]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[2]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[2]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[2]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[2]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[2]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[2]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[2]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[2]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[2]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[2]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[2]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[2]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[2]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[2]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[2]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[2]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[2]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[2]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[2]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[2]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[2]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[2]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[2]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[2]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[2]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"])]
[WARN ] 2021-04-25 12:29:18.484 [http-nio-8085-exec-8] ExceptionHandlerExceptionResolver - Resolved [org.springframework.http.converter.HttpMessageNotWritableException: Could not write JSON: Infinite recursion (StackOverflowError); nested exception is com.fasterxml.jackson.databind.JsonMappingException: Infinite recursion (StackOverflowError) (through reference chain: org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"])]
[WARN ] 2021-04-25 12:32:38.089 [http-nio-8085-exec-2] ExceptionHandlerExceptionResolver - Resolved [org.springframework.http.converter.HttpMessageNotWritableException: Could not write JSON: Infinite recursion (StackOverflowError); nested exception is com.fasterxml.jackson.databind.JsonMappingException: Infinite recursion (StackOverflowError) (through reference chain: org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[0]->com.camp.campApi.entity.Place["parent"])]
[WARN ] 2021-04-25 12:34:46.093 [http-nio-8085-exec-5] ExceptionHandlerExceptionResolver - Resolved [org.springframework.http.converter.HttpMessageNotWritableException: Could not write JSON: Infinite recursion (StackOverflowError); nested exception is com.fasterxml.jackson.databind.JsonMappingException: Infinite recursion (StackOverflowError) (through reference chain: org.hibernate.collection.internal.PersistentSet[1]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[1]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[1]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[1]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[1]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[1]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[1]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[1]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[1]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[1]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[1]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[1]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[1]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[1]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[1]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[1]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[1]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[1]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[1]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[1]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[1]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[1]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[1]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[1]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[1]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[1]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[1]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[1]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[1]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[1]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[1]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[1]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[1]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[1]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[1]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[1]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[1]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[1]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[1]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[1]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[1]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[1]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[1]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[1]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[1]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[1]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[1]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[1]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[1]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[1]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[1]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[1]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[1]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[1]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[1]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[1]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[1]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[1]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[1]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[1]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[1]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[1]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[1]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[1]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[1]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[1]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[1]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[1]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[1]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[1]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[1]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[1]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[1]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[1]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[1]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[1]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[1]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[1]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[1]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[1]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[1]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[1]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[1]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[1]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[1]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[1]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[1]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[1]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[1]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[1]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[1]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[1]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[1]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[1]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[1]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[1]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[1]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[1]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[1]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[1]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[1]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[1]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[1]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[1]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[1]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[1]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[1]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[1]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[1]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[1]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[1]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[1]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[1]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[1]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[1]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[1]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[1]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[1]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[1]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[1]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[1]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[1]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[1]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[1]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[1]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[1]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[1]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[1]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[1]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[1]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[1]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[1]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[1]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[1]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[1]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[1]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[1]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[1]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[1]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[1]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[1]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[1]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[1]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[1]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[1]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[1]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[1]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[1]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[1]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[1]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[1]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[1]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[1]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[1]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[1]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[1]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[1]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[1]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[1]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[1]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[1]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[1]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[1]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[1]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[1]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[1]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[1]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[1]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[1]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[1]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[1]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[1]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[1]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[1]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[1]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[1]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[1]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[1]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[1]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[1]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[1]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[1]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[1]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[1]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[1]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[1]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[1]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[1]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[1]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[1]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[1]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[1]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[1]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[1]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[1]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[1]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[1]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[1]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[1]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[1]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[1]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[1]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[1]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[1]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[1]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[1]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[1]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[1]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[1]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[1]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[1]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[1]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[1]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[1]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[1]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[1]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[1]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[1]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[1]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[1]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[1]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[1]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[1]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[1]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[1]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[1]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[1]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[1]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[1]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[1]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[1]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[1]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[1]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[1]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[1]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[1]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[1]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[1]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[1]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[1]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[1]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[1]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[1]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[1]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[1]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[1]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[1]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[1]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[1]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[1]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[1]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[1]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[1]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[1]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[1]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[1]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[1]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[1]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[1]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[1]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[1]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[1]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[1]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[1]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[1]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[1]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[1]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[1]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[1]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[1]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[1]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[1]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[1]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[1]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[1]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[1]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[1]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[1]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[1]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[1]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[1]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[1]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[1]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[1]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[1]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[1]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[1]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[1]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[1]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[1]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[1]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[1]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[1]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[1]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[1]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[1]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[1]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[1]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[1]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[1]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[1]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[1]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[1]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[1]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[1]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[1]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[1]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[1]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[1]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[1]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[1]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[1]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[1]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[1]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[1]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[1]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[1]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[1]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[1]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[1]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[1]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[1]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[1]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[1]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[1]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[1]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[1]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[1]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[1]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[1]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[1]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[1]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[1]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[1]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[1]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[1]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[1]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[1]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[1]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[1]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[1]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[1]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[1]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[1]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[1]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[1]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[1]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[1]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[1]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[1]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[1]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[1]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[1]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[1]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[1]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[1]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[1]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[1]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[1]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[1]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[1]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[1]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[1]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[1]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[1]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[1]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[1]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[1]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[1]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[1]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[1]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[1]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[1]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[1]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[1]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[1]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[1]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[1]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[1]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[1]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[1]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[1]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[1]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[1]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[1]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[1]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[1]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[1]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[1]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[1]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[1]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[1]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[1]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[1]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[1]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[1]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[1]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[1]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[1]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[1]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[1]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[1]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[1]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[1]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[1]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[1]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[1]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[1]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[1]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[1]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[1]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[1]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[1]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[1]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[1]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[1]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[1]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[1]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[1]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[1]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[1]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[1]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[1]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[1]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[1]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[1]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[1]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[1]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[1]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[1]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[1]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[1]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[1]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[1]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[1]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[1]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[1]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[1]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[1]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[1]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[1]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[1]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[1]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[1]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[1]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[1]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[1]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[1]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[1]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[1]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[1]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[1]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[1]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[1]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[1]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[1]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[1]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[1]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[1]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[1]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[1]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[1]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[1]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[1]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[1]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[1]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[1]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[1]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[1]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[1]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[1]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[1]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[1]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[1]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[1]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[1]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[1]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[1]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[1]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[1]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[1]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[1]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[1]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[1]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[1]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[1]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[1]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[1]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[1]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[1]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[1]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[1]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[1]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[1]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[1]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[1]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[1]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[1]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[1]->com.camp.campApi.entity.Place["parent"]->org.hibernate.collection.internal.PersistentSet[1]->com.camp.campApi.entity.Place["parent"])]
[INFO ] 2021-04-25 12:51:40.722 [main] CampApiApplication - Hello this is an info message
[ERROR] 2021-04-25 12:51:40.722 [main] CampApiApplication - Error Message Logged !!!
java.lang.NullPointerException: NullError
	at com.camp.campApi.CampApiApplication.main(CampApiApplication.java:21) [classes/:?]
[INFO ] 2021-04-25 12:51:41.681 [restartedMain] CampApiApplication - Hello this is an info message
[ERROR] 2021-04-25 12:51:41.689 [restartedMain] CampApiApplication - Error Message Logged !!!
java.lang.NullPointerException: NullError
	at com.camp.campApi.CampApiApplication.main(CampApiApplication.java:21) [classes/:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:567) ~[?:?]
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49) [spring-boot-devtools-2.4.2.jar:2.4.2]
[INFO ] 2021-04-25 12:51:42.100 [restartedMain] CampApiApplication - Starting CampApiApplication using Java 12.0.1 on network4 with PID 1876 (J:\jav\campApi\target\classes started by m.bandpey in J:\jav\campApi)
[INFO ] 2021-04-25 12:51:42.100 [restartedMain] CampApiApplication - No active profile set, falling back to default profiles: default
[INFO ] 2021-04-25 12:51:42.147 [restartedMain] DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
[INFO ] 2021-04-25 12:51:42.147 [restartedMain] DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
[INFO ] 2021-04-25 12:51:43.114 [restartedMain] RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
[INFO ] 2021-04-25 12:51:43.114 [restartedMain] RepositoryConfigurationDelegate - Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
[INFO ] 2021-04-25 12:51:43.161 [restartedMain] RepositoryConfigurationExtensionSupport - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.camp.campApi.repository.ChildPlaceRepo. If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
[INFO ] 2021-04-25 12:51:43.161 [restartedMain] RepositoryConfigurationExtensionSupport - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.camp.campApi.repository.PlaceRepo. If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
[INFO ] 2021-04-25 12:51:43.161 [restartedMain] RepositoryConfigurationExtensionSupport - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.camp.campApi.repository.ResponseRepo. If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
[INFO ] 2021-04-25 12:51:43.161 [restartedMain] RepositoryConfigurationExtensionSupport - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.camp.campApi.repository.RoleRepo. If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
[INFO ] 2021-04-25 12:51:43.161 [restartedMain] RepositoryConfigurationExtensionSupport - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.camp.campApi.repository.UserRepo. If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
[INFO ] 2021-04-25 12:51:43.161 [restartedMain] RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 42 ms. Found 0 JDBC repository interfaces.
[INFO ] 2021-04-25 12:51:43.176 [restartedMain] RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
[INFO ] 2021-04-25 12:51:43.176 [restartedMain] RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
[INFO ] 2021-04-25 12:51:43.230 [restartedMain] RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 50 ms. Found 5 JPA repository interfaces.
[INFO ] 2021-04-25 12:51:43.562 [restartedMain] PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@67145f50' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[INFO ] 2021-04-25 12:51:43.577 [restartedMain] PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[INFO ] 2021-04-25 12:51:43.878 [restartedMain] TomcatWebServer - Tomcat initialized with port(s): 8085 (http)
[INFO ] 2021-04-25 12:51:43.894 [restartedMain] Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8085"]
[INFO ] 2021-04-25 12:51:43.894 [restartedMain] StandardService - Starting service [Tomcat]
[INFO ] 2021-04-25 12:51:43.894 [restartedMain] StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.41]
[INFO ] 2021-04-25 12:51:44.063 [restartedMain] [/] - Initializing Spring embedded WebApplicationContext
[INFO ] 2021-04-25 12:51:44.063 [restartedMain] ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1916 ms
[INFO ] 2021-04-25 12:51:44.217 [restartedMain] LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
[INFO ] 2021-04-25 12:51:44.279 [restartedMain] Version - HHH000412: Hibernate ORM core version 5.4.27.Final
[INFO ] 2021-04-25 12:51:44.379 [restartedMain] Version - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
[INFO ] 2021-04-25 12:51:44.464 [restartedMain] HikariDataSource - HikariPool-1 - Starting...
[INFO ] 2021-04-25 12:51:44.555 [restartedMain] HikariDataSource - HikariPool-1 - Start completed.
[INFO ] 2021-04-25 12:51:44.570 [restartedMain] Dialect - HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
[INFO ] 2021-04-25 12:51:46.226 [restartedMain] JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[INFO ] 2021-04-25 12:51:46.239 [restartedMain] LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
[INFO ] 2021-04-25 12:51:46.300 [restartedMain] OptionalLiveReloadServer - LiveReload server is running on port 35729
[WARN ] 2021-04-25 12:51:46.876 [restartedMain] AnnotationConfigServletWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'childPlaceController': Unsatisfied dependency expressed through field 'childPlaceService'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'childPlaceServiceImpl': Unsatisfied dependency expressed through field 'placeRepo'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'placeRepo' defined in com.camp.campApi.repository.PlaceRepo defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration: Invocation of init method failed; nested exception is java.lang.IllegalArgumentException: Validation failed for query for method public abstract java.util.List com.camp.campApi.repository.PlaceRepo.findAllPlaceName()!
[INFO ] 2021-04-25 12:51:46.967 [restartedMain] LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
[INFO ] 2021-04-25 12:51:46.980 [restartedMain] HikariDataSource - HikariPool-1 - Shutdown initiated...
[INFO ] 2021-04-25 12:51:47.264 [restartedMain] HikariDataSource - HikariPool-1 - Shutdown completed.
[INFO ] 2021-04-25 12:51:47.268 [restartedMain] StandardService - Stopping service [Tomcat]
[INFO ] 2021-04-25 12:51:47.289 [restartedMain] ConditionEvaluationReportLoggingListener - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
[ERROR] 2021-04-25 12:51:47.344 [restartedMain] SpringApplication - Application run failed
org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'childPlaceController': Unsatisfied dependency expressed through field 'childPlaceService'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'childPlaceServiceImpl': Unsatisfied dependency expressed through field 'placeRepo'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'placeRepo' defined in com.camp.campApi.repository.PlaceRepo defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration: Invocation of init method failed; nested exception is java.lang.IllegalArgumentException: Validation failed for query for method public abstract java.util.List com.camp.campApi.repository.PlaceRepo.findAllPlaceName()!
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:643) ~[spring-beans-5.3.3.jar:5.3.3]
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:119) ~[spring-beans-5.3.3.jar:5.3.3]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:399) ~[spring-beans-5.3.3.jar:5.3.3]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1415) ~[spring-beans-5.3.3.jar:5.3.3]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:608) ~[spring-beans-5.3.3.jar:5.3.3]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:531) ~[spring-beans-5.3.3.jar:5.3.3]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335) ~[spring-beans-5.3.3.jar:5.3.3]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-5.3.3.jar:5.3.3]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333) ~[spring-beans-5.3.3.jar:5.3.3]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208) ~[spring-beans-5.3.3.jar:5.3.3]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:944) ~[spring-beans-5.3.3.jar:5.3.3]
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:923) ~[spring-context-5.3.3.jar:5.3.3]
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:588) ~[spring-context-5.3.3.jar:5.3.3]
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:144) ~[spring-boot-2.4.2.jar:2.4.2]
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:767) ~[spring-boot-2.4.2.jar:2.4.2]
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:759) [spring-boot-2.4.2.jar:2.4.2]
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:426) [spring-boot-2.4.2.jar:2.4.2]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:326) [spring-boot-2.4.2.jar:2.4.2]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1311) [spring-boot-2.4.2.jar:2.4.2]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1300) [spring-boot-2.4.2.jar:2.4.2]
	at com.camp.campApi.CampApiApplication.main(CampApiApplication.java:22) [classes/:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:567) ~[?:?]
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49) [spring-boot-devtools-2.4.2.jar:2.4.2]
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'childPlaceServiceImpl': Unsatisfied dependency expressed through field 'placeRepo'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'placeRepo' defined in com.camp.campApi.repository.PlaceRepo defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration: Invocation of init method failed; nested exception is java.lang.IllegalArgumentException: Validation failed for query for method public abstract java.util.List com.camp.campApi.repository.PlaceRepo.findAllPlaceName()!
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:643) ~[spring-beans-5.3.3.jar:5.3.3]
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:119) ~[spring-beans-5.3.3.jar:5.3.3]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:399) ~[spring-beans-5.3.3.jar:5.3.3]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1415) ~[spring-beans-5.3.3.jar:5.3.3]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:608) ~[spring-beans-5.3.3.jar:5.3.3]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:531) ~[spring-beans-5.3.3.jar:5.3.3]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335) ~[spring-beans-5.3.3.jar:5.3.3]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-5.3.3.jar:5.3.3]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333) ~[spring-beans-5.3.3.jar:5.3.3]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208) ~[spring-beans-5.3.3.jar:5.3.3]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276) ~[spring-beans-5.3.3.jar:5.3.3]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1380) ~[spring-beans-5.3.3.jar:5.3.3]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1300) ~[spring-beans-5.3.3.jar:5.3.3]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:640) ~[spring-beans-5.3.3.jar:5.3.3]
	... 25 more
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'placeRepo' defined in com.camp.campApi.repository.PlaceRepo defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration: Invocation of init method failed; nested exception is java.lang.IllegalArgumentException: Validation failed for query for method public abstract java.util.List com.camp.campApi.repository.PlaceRepo.findAllPlaceName()!
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1788) ~[spring-beans-5.3.3.jar:5.3.3]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:609) ~[spring-beans-5.3.3.jar:5.3.3]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:531) ~[spring-beans-5.3.3.jar:5.3.3]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335) ~[spring-beans-5.3.3.jar:5.3.3]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-5.3.3.jar:5.3.3]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333) ~[spring-beans-5.3.3.jar:5.3.3]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208) ~[spring-beans-5.3.3.jar:5.3.3]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276) ~[spring-beans-5.3.3.jar:5.3.3]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1380) ~[spring-beans-5.3.3.jar:5.3.3]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1300) ~[spring-beans-5.3.3.jar:5.3.3]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:640) ~[spring-beans-5.3.3.jar:5.3.3]
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:119) ~[spring-beans-5.3.3.jar:5.3.3]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:399) ~[spring-beans-5.3.3.jar:5.3.3]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1415) ~[spring-beans-5.3.3.jar:5.3.3]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:608) ~[spring-beans-5.3.3.jar:5.3.3]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:531) ~[spring-beans-5.3.3.jar:5.3.3]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335) ~[spring-beans-5.3.3.jar:5.3.3]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-5.3.3.jar:5.3.3]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333) ~[spring-beans-5.3.3.jar:5.3.3]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208) ~[spring-beans-5.3.3.jar:5.3.3]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276) ~[spring-beans-5.3.3.jar:5.3.3]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1380) ~[spring-beans-5.3.3.jar:5.3.3]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1300) ~[spring-beans-5.3.3.jar:5.3.3]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:640) ~[spring-beans-5.3.3.jar:5.3.3]
	... 25 more
Caused by: java.lang.IllegalArgumentException: Validation failed for query for method public abstract java.util.List com.camp.campApi.repository.PlaceRepo.findAllPlaceName()!
	at org.springframework.data.jpa.repository.query.SimpleJpaQuery.validateQuery(SimpleJpaQuery.java:93) ~[spring-data-jpa-2.4.3.jar:2.4.3]
	at org.springframework.data.jpa.repository.query.SimpleJpaQuery.<init>(SimpleJpaQuery.java:63) ~[spring-data-jpa-2.4.3.jar:2.4.3]
	at org.springframework.data.jpa.repository.query.JpaQueryFactory.fromMethodWithQueryString(JpaQueryFactory.java:76) ~[spring-data-jpa-2.4.3.jar:2.4.3]
	at org.springframework.data.jpa.repository.query.JpaQueryFactory.fromQueryAnnotation(JpaQueryFactory.java:56) ~[spring-data-jpa-2.4.3.jar:2.4.3]
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:146) ~[spring-data-jpa-2.4.3.jar:2.4.3]
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:216) ~[spring-data-jpa-2.4.3.jar:2.4.3]
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:81) ~[spring-data-jpa-2.4.3.jar:2.4.3]
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:100) ~[spring-data-commons-2.4.3.jar:2.4.3]
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$mapMethodsToQuery$1(QueryExecutorMethodInterceptor.java:93) ~[spring-data-commons-2.4.3.jar:2.4.3]
	at java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195) ~[?:?]
	at java.util.Iterator.forEachRemaining(Iterator.java:133) ~[?:?]
	at java.util.Collections$UnmodifiableCollection$1.forEachRemaining(Collections.java:1052) ~[?:?]
	at java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801) ~[?:?]
	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484) ~[?:?]
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474) ~[?:?]
	at java.util.stream.ReduceOps$ReduceOp.evaluateSequential(ReduceOps.java:913) ~[?:?]
	at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234) ~[?:?]
	at java.util.stream.ReferencePipeline.collect(ReferencePipeline.java:578) ~[?:?]
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:95) ~[spring-data-commons-2.4.3.jar:2.4.3]
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:85) ~[spring-data-commons-2.4.3.jar:2.4.3]
	at java.util.Optional.map(Optional.java:265) ~[?:?]
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:85) ~[spring-data-commons-2.4.3.jar:2.4.3]
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:303) ~[spring-data-commons-2.4.3.jar:2.4.3]
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$6(RepositoryFactoryBeanSupport.java:326) ~[spring-data-commons-2.4.3.jar:2.4.3]
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:230) ~[spring-data-commons-2.4.3.jar:2.4.3]
	at org.springframework.data.util.Lazy.get(Lazy.java:114) ~[spring-data-commons-2.4.3.jar:2.4.3]
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:329) ~[spring-data-commons-2.4.3.jar:2.4.3]
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:144) ~[spring-data-jpa-2.4.3.jar:2.4.3]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1847) ~[spring-beans-5.3.3.jar:5.3.3]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1784) ~[spring-beans-5.3.3.jar:5.3.3]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:609) ~[spring-beans-5.3.3.jar:5.3.3]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:531) ~[spring-beans-5.3.3.jar:5.3.3]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335) ~[spring-beans-5.3.3.jar:5.3.3]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-5.3.3.jar:5.3.3]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333) ~[spring-beans-5.3.3.jar:5.3.3]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208) ~[spring-beans-5.3.3.jar:5.3.3]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276) ~[spring-beans-5.3.3.jar:5.3.3]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1380) ~[spring-beans-5.3.3.jar:5.3.3]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1300) ~[spring-beans-5.3.3.jar:5.3.3]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:640) ~[spring-beans-5.3.3.jar:5.3.3]
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:119) ~[spring-beans-5.3.3.jar:5.3.3]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:399) ~[spring-beans-5.3.3.jar:5.3.3]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1415) ~[spring-beans-5.3.3.jar:5.3.3]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:608) ~[spring-beans-5.3.3.jar:5.3.3]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:531) ~[spring-beans-5.3.3.jar:5.3.3]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335) ~[spring-beans-5.3.3.jar:5.3.3]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-5.3.3.jar:5.3.3]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333) ~[spring-beans-5.3.3.jar:5.3.3]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208) ~[spring-beans-5.3.3.jar:5.3.3]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276) ~[spring-beans-5.3.3.jar:5.3.3]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1380) ~[spring-beans-5.3.3.jar:5.3.3]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1300) ~[spring-beans-5.3.3.jar:5.3.3]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:640) ~[spring-beans-5.3.3.jar:5.3.3]
	... 25 more
Caused by: java.lang.NullPointerException
	at java.lang.String$CaseInsensitiveComparator.compare(String.java:1233) ~[?:?]
	at java.lang.String$CaseInsensitiveComparator.compare(String.java:1227) ~[?:?]
	at java.util.TreeMap.getEntryUsingComparator(TreeMap.java:374) ~[?:?]
	at java.util.TreeMap.getEntry(TreeMap.java:343) ~[?:?]
	at java.util.TreeMap.get(TreeMap.java:277) ~[?:?]
	at org.hibernate.dialect.function.SQLFunctionRegistry.findSQLFunction(SQLFunctionRegistry.java:45) ~[hibernate-core-5.4.27.Final.jar:5.4.27.Final]
	at org.hibernate.hql.internal.ast.util.SessionFactoryHelper.findSQLFunction(SessionFactoryHelper.java:385) ~[hibernate-core-5.4.27.Final.jar:5.4.27.Final]
	at org.hibernate.hql.internal.ast.tree.IdentNode.getDataType(IdentNode.java:367) ~[hibernate-core-5.4.27.Final.jar:5.4.27.Final]
	at org.hibernate.hql.internal.ast.HqlSqlWalker.lookupProperty(HqlSqlWalker.java:667) ~[hibernate-core-5.4.27.Final.jar:5.4.27.Final]
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.propertyRef(HqlSqlBaseWalker.java:1154) ~[hibernate-core-5.4.27.Final.jar:5.4.27.Final]
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.selectExpr(HqlSqlBaseWalker.java:2315) ~[hibernate-core-5.4.27.Final.jar:5.4.27.Final]
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.selectExprList(HqlSqlBaseWalker.java:2256) ~[hibernate-core-5.4.27.Final.jar:5.4.27.Final]
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.selectClause(HqlSqlBaseWalker.java:1518) ~[hibernate-core-5.4.27.Final.jar:5.4.27.Final]
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.query(HqlSqlBaseWalker.java:597) ~[hibernate-core-5.4.27.Final.jar:5.4.27.Final]
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.selectStatement(HqlSqlBaseWalker.java:325) ~[hibernate-core-5.4.27.Final.jar:5.4.27.Final]
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.statement(HqlSqlBaseWalker.java:273) ~[hibernate-core-5.4.27.Final.jar:5.4.27.Final]
	at org.hibernate.hql.internal.ast.QueryTranslatorImpl.analyze(QueryTranslatorImpl.java:276) ~[hibernate-core-5.4.27.Final.jar:5.4.27.Final]
	at org.hibernate.hql.internal.ast.QueryTranslatorImpl.doCompile(QueryTranslatorImpl.java:192) ~[hibernate-core-5.4.27.Final.jar:5.4.27.Final]
	at org.hibernate.hql.internal.ast.QueryTranslatorImpl.compile(QueryTranslatorImpl.java:144) ~[hibernate-core-5.4.27.Final.jar:5.4.27.Final]
	at org.hibernate.engine.query.spi.HQLQueryPlan.<init>(HQLQueryPlan.java:113) ~[hibernate-core-5.4.27.Final.jar:5.4.27.Final]
	at org.hibernate.engine.query.spi.HQLQueryPlan.<init>(HQLQueryPlan.java:73) ~[hibernate-core-5.4.27.Final.jar:5.4.27.Final]
	at org.hibernate.engine.query.spi.QueryPlanCache.getHQLQueryPlan(QueryPlanCache.java:162) ~[hibernate-core-5.4.27.Final.jar:5.4.27.Final]
	at org.hibernate.internal.AbstractSharedSessionContract.getQueryPlan(AbstractSharedSessionContract.java:604) ~[hibernate-core-5.4.27.Final.jar:5.4.27.Final]
	at org.hibernate.internal.AbstractSharedSessionContract.createQuery(AbstractSharedSessionContract.java:716) ~[hibernate-core-5.4.27.Final.jar:5.4.27.Final]
	at org.hibernate.internal.AbstractSharedSessionContract.createQuery(AbstractSharedSessionContract.java:113) ~[hibernate-core-5.4.27.Final.jar:5.4.27.Final]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:567) ~[?:?]
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:362) ~[spring-orm-5.3.3.jar:5.3.3]
	at com.sun.proxy.$Proxy112.createQuery(Unknown Source) ~[?:?]
	at org.springframework.data.jpa.repository.query.SimpleJpaQuery.validateQuery(SimpleJpaQuery.java:87) ~[spring-data-jpa-2.4.3.jar:2.4.3]
	at org.springframework.data.jpa.repository.query.SimpleJpaQuery.<init>(SimpleJpaQuery.java:63) ~[spring-data-jpa-2.4.3.jar:2.4.3]
	at org.springframework.data.jpa.repository.query.JpaQueryFactory.fromMethodWithQueryString(JpaQueryFactory.java:76) ~[spring-data-jpa-2.4.3.jar:2.4.3]
	at org.springframework.data.jpa.repository.query.JpaQueryFactory.fromQueryAnnotation(JpaQueryFactory.java:56) ~[spring-data-jpa-2.4.3.jar:2.4.3]
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:146) ~[spring-data-jpa-2.4.3.jar:2.4.3]
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:216) ~[spring-data-jpa-2.4.3.jar:2.4.3]
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:81) ~[spring-data-jpa-2.4.3.jar:2.4.3]
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:100) ~[spring-data-commons-2.4.3.jar:2.4.3]
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$mapMethodsToQuery$1(QueryExecutorMethodInterceptor.java:93) ~[spring-data-commons-2.4.3.jar:2.4.3]
	at java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195) ~[?:?]
	at java.util.Iterator.forEachRemaining(Iterator.java:133) ~[?:?]
	at java.util.Collections$UnmodifiableCollection$1.forEachRemaining(Collections.java:1052) ~[?:?]
	at java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801) ~[?:?]
	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484) ~[?:?]
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474) ~[?:?]
	at java.util.stream.ReduceOps$ReduceOp.evaluateSequential(ReduceOps.java:913) ~[?:?]
	at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234) ~[?:?]
	at java.util.stream.ReferencePipeline.collect(ReferencePipeline.java:578) ~[?:?]
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:95) ~[spring-data-commons-2.4.3.jar:2.4.3]
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:85) ~[spring-data-commons-2.4.3.jar:2.4.3]
	at java.util.Optional.map(Optional.java:265) ~[?:?]
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:85) ~[spring-data-commons-2.4.3.jar:2.4.3]
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:303) ~[spring-data-commons-2.4.3.jar:2.4.3]
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$6(RepositoryFactoryBeanSupport.java:326) ~[spring-data-commons-2.4.3.jar:2.4.3]
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:230) ~[spring-data-commons-2.4.3.jar:2.4.3]
	at org.springframework.data.util.Lazy.get(Lazy.java:114) ~[spring-data-commons-2.4.3.jar:2.4.3]
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:329) ~[spring-data-commons-2.4.3.jar:2.4.3]
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:144) ~[spring-data-jpa-2.4.3.jar:2.4.3]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1847) ~[spring-beans-5.3.3.jar:5.3.3]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1784) ~[spring-beans-5.3.3.jar:5.3.3]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:609) ~[spring-beans-5.3.3.jar:5.3.3]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:531) ~[spring-beans-5.3.3.jar:5.3.3]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335) ~[spring-beans-5.3.3.jar:5.3.3]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-5.3.3.jar:5.3.3]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333) ~[spring-beans-5.3.3.jar:5.3.3]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208) ~[spring-beans-5.3.3.jar:5.3.3]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276) ~[spring-beans-5.3.3.jar:5.3.3]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1380) ~[spring-beans-5.3.3.jar:5.3.3]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1300) ~[spring-beans-5.3.3.jar:5.3.3]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:640) ~[spring-beans-5.3.3.jar:5.3.3]
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:119) ~[spring-beans-5.3.3.jar:5.3.3]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:399) ~[spring-beans-5.3.3.jar:5.3.3]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1415) ~[spring-beans-5.3.3.jar:5.3.3]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:608) ~[spring-beans-5.3.3.jar:5.3.3]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:531) ~[spring-beans-5.3.3.jar:5.3.3]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335) ~[spring-beans-5.3.3.jar:5.3.3]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-5.3.3.jar:5.3.3]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333) ~[spring-beans-5.3.3.jar:5.3.3]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208) ~[spring-beans-5.3.3.jar:5.3.3]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276) ~[spring-beans-5.3.3.jar:5.3.3]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1380) ~[spring-beans-5.3.3.jar:5.3.3]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1300) ~[spring-beans-5.3.3.jar:5.3.3]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:640) ~[spring-beans-5.3.3.jar:5.3.3]
	... 25 more
[INFO ] 2021-04-25 12:57:02.671 [main] CampApiApplication - Hello this is an info message
[ERROR] 2021-04-25 12:57:02.671 [main] CampApiApplication - Error Message Logged !!!
java.lang.NullPointerException: NullError
	at com.camp.campApi.CampApiApplication.main(CampApiApplication.java:21) [classes/:?]
[INFO ] 2021-04-25 12:57:03.536 [restartedMain] CampApiApplication - Hello this is an info message
[ERROR] 2021-04-25 12:57:03.536 [restartedMain] CampApiApplication - Error Message Logged !!!
java.lang.NullPointerException: NullError
	at com.camp.campApi.CampApiApplication.main(CampApiApplication.java:21) [classes/:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:567) ~[?:?]
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49) [spring-boot-devtools-2.4.2.jar:2.4.2]
[INFO ] 2021-04-25 12:57:03.990 [restartedMain] CampApiApplication - Starting CampApiApplication using Java 12.0.1 on network4 with PID 18364 (J:\jav\campApi\target\classes started by m.bandpey in J:\jav\campApi)
[INFO ] 2021-04-25 12:57:04.006 [restartedMain] CampApiApplication - No active profile set, falling back to default profiles: default
[INFO ] 2021-04-25 12:57:04.044 [restartedMain] DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
[INFO ] 2021-04-25 12:57:04.044 [restartedMain] DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
[INFO ] 2021-04-25 12:57:05.020 [restartedMain] RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
[INFO ] 2021-04-25 12:57:05.020 [restartedMain] RepositoryConfigurationDelegate - Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
[INFO ] 2021-04-25 12:57:05.080 [restartedMain] RepositoryConfigurationExtensionSupport - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.camp.campApi.repository.ChildPlaceRepo. If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
[INFO ] 2021-04-25 12:57:05.080 [restartedMain] RepositoryConfigurationExtensionSupport - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.camp.campApi.repository.PlaceRepo. If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
[INFO ] 2021-04-25 12:57:05.090 [restartedMain] RepositoryConfigurationExtensionSupport - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.camp.campApi.repository.ResponseRepo. If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
[INFO ] 2021-04-25 12:57:05.090 [restartedMain] RepositoryConfigurationExtensionSupport - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.camp.campApi.repository.RoleRepo. If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
[INFO ] 2021-04-25 12:57:05.090 [restartedMain] RepositoryConfigurationExtensionSupport - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.camp.campApi.repository.UserRepo. If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
[INFO ] 2021-04-25 12:57:05.098 [restartedMain] RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 69 ms. Found 0 JDBC repository interfaces.
[INFO ] 2021-04-25 12:57:05.110 [restartedMain] RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
[INFO ] 2021-04-25 12:57:05.110 [restartedMain] RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
[INFO ] 2021-04-25 12:57:05.219 [restartedMain] RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 101 ms. Found 5 JPA repository interfaces.
[INFO ] 2021-04-25 12:57:05.623 [restartedMain] PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@5a88107' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[INFO ] 2021-04-25 12:57:05.623 [restartedMain] PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[INFO ] 2021-04-25 12:57:05.994 [restartedMain] TomcatWebServer - Tomcat initialized with port(s): 8085 (http)
[INFO ] 2021-04-25 12:57:06.006 [restartedMain] Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8085"]
[INFO ] 2021-04-25 12:57:06.006 [restartedMain] StandardService - Starting service [Tomcat]
[INFO ] 2021-04-25 12:57:06.006 [restartedMain] StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.41]
[INFO ] 2021-04-25 12:57:06.217 [restartedMain] [/] - Initializing Spring embedded WebApplicationContext
[INFO ] 2021-04-25 12:57:06.217 [restartedMain] ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 2173 ms
[INFO ] 2021-04-25 12:57:06.456 [restartedMain] LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
[INFO ] 2021-04-25 12:57:06.517 [restartedMain] Version - HHH000412: Hibernate ORM core version 5.4.27.Final
[INFO ] 2021-04-25 12:57:06.647 [restartedMain] Version - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
[INFO ] 2021-04-25 12:57:06.768 [restartedMain] HikariDataSource - HikariPool-1 - Starting...
[INFO ] 2021-04-25 12:57:06.862 [restartedMain] HikariDataSource - HikariPool-1 - Start completed.
[INFO ] 2021-04-25 12:57:06.884 [restartedMain] Dialect - HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
[INFO ] 2021-04-25 12:57:08.139 [restartedMain] JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[INFO ] 2021-04-25 12:57:08.149 [restartedMain] LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
[INFO ] 2021-04-25 12:57:08.229 [restartedMain] OptionalLiveReloadServer - LiveReload server is running on port 35729
[WARN ] 2021-04-25 12:57:08.831 [restartedMain] AnnotationConfigServletWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'childPlaceController': Unsatisfied dependency expressed through field 'childPlaceService'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'childPlaceServiceImpl': Unsatisfied dependency expressed through field 'placeRepo'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'placeRepo' defined in com.camp.campApi.repository.PlaceRepo defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration: Invocation of init method failed; nested exception is java.lang.IllegalArgumentException: Validation failed for query for method public abstract java.util.List com.camp.campApi.repository.PlaceRepo.findAllPlaceName()!
[INFO ] 2021-04-25 12:57:08.947 [restartedMain] LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
[INFO ] 2021-04-25 12:57:08.953 [restartedMain] HikariDataSource - HikariPool-1 - Shutdown initiated...
[INFO ] 2021-04-25 12:57:09.196 [restartedMain] HikariDataSource - HikariPool-1 - Shutdown completed.
[INFO ] 2021-04-25 12:57:09.200 [restartedMain] StandardService - Stopping service [Tomcat]
[INFO ] 2021-04-25 12:57:09.218 [restartedMain] ConditionEvaluationReportLoggingListener - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
[ERROR] 2021-04-25 12:57:09.247 [restartedMain] SpringApplication - Application run failed
org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'childPlaceController': Unsatisfied dependency expressed through field 'childPlaceService'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'childPlaceServiceImpl': Unsatisfied dependency expressed through field 'placeRepo'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'placeRepo' defined in com.camp.campApi.repository.PlaceRepo defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration: Invocation of init method failed; nested exception is java.lang.IllegalArgumentException: Validation failed for query for method public abstract java.util.List com.camp.campApi.repository.PlaceRepo.findAllPlaceName()!
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:643) ~[spring-beans-5.3.3.jar:5.3.3]
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:119) ~[spring-beans-5.3.3.jar:5.3.3]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:399) ~[spring-beans-5.3.3.jar:5.3.3]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1415) ~[spring-beans-5.3.3.jar:5.3.3]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:608) ~[spring-beans-5.3.3.jar:5.3.3]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:531) ~[spring-beans-5.3.3.jar:5.3.3]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335) ~[spring-beans-5.3.3.jar:5.3.3]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-5.3.3.jar:5.3.3]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333) ~[spring-beans-5.3.3.jar:5.3.3]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208) ~[spring-beans-5.3.3.jar:5.3.3]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:944) ~[spring-beans-5.3.3.jar:5.3.3]
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:923) ~[spring-context-5.3.3.jar:5.3.3]
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:588) ~[spring-context-5.3.3.jar:5.3.3]
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:144) ~[spring-boot-2.4.2.jar:2.4.2]
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:767) ~[spring-boot-2.4.2.jar:2.4.2]
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:759) [spring-boot-2.4.2.jar:2.4.2]
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:426) [spring-boot-2.4.2.jar:2.4.2]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:326) [spring-boot-2.4.2.jar:2.4.2]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1311) [spring-boot-2.4.2.jar:2.4.2]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1300) [spring-boot-2.4.2.jar:2.4.2]
	at com.camp.campApi.CampApiApplication.main(CampApiApplication.java:22) [classes/:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:567) ~[?:?]
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49) [spring-boot-devtools-2.4.2.jar:2.4.2]
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'childPlaceServiceImpl': Unsatisfied dependency expressed through field 'placeRepo'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'placeRepo' defined in com.camp.campApi.repository.PlaceRepo defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration: Invocation of init method failed; nested exception is java.lang.IllegalArgumentException: Validation failed for query for method public abstract java.util.List com.camp.campApi.repository.PlaceRepo.findAllPlaceName()!
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:643) ~[spring-beans-5.3.3.jar:5.3.3]
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:119) ~[spring-beans-5.3.3.jar:5.3.3]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:399) ~[spring-beans-5.3.3.jar:5.3.3]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1415) ~[spring-beans-5.3.3.jar:5.3.3]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:608) ~[spring-beans-5.3.3.jar:5.3.3]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:531) ~[spring-beans-5.3.3.jar:5.3.3]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335) ~[spring-beans-5.3.3.jar:5.3.3]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-5.3.3.jar:5.3.3]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333) ~[spring-beans-5.3.3.jar:5.3.3]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208) ~[spring-beans-5.3.3.jar:5.3.3]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276) ~[spring-beans-5.3.3.jar:5.3.3]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1380) ~[spring-beans-5.3.3.jar:5.3.3]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1300) ~[spring-beans-5.3.3.jar:5.3.3]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:640) ~[spring-beans-5.3.3.jar:5.3.3]
	... 25 more
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'placeRepo' defined in com.camp.campApi.repository.PlaceRepo defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration: Invocation of init method failed; nested exception is java.lang.IllegalArgumentException: Validation failed for query for method public abstract java.util.List com.camp.campApi.repository.PlaceRepo.findAllPlaceName()!
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1788) ~[spring-beans-5.3.3.jar:5.3.3]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:609) ~[spring-beans-5.3.3.jar:5.3.3]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:531) ~[spring-beans-5.3.3.jar:5.3.3]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335) ~[spring-beans-5.3.3.jar:5.3.3]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-5.3.3.jar:5.3.3]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333) ~[spring-beans-5.3.3.jar:5.3.3]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208) ~[spring-beans-5.3.3.jar:5.3.3]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276) ~[spring-beans-5.3.3.jar:5.3.3]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1380) ~[spring-beans-5.3.3.jar:5.3.3]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1300) ~[spring-beans-5.3.3.jar:5.3.3]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:640) ~[spring-beans-5.3.3.jar:5.3.3]
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:119) ~[spring-beans-5.3.3.jar:5.3.3]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:399) ~[spring-beans-5.3.3.jar:5.3.3]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1415) ~[spring-beans-5.3.3.jar:5.3.3]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:608) ~[spring-beans-5.3.3.jar:5.3.3]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:531) ~[spring-beans-5.3.3.jar:5.3.3]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335) ~[spring-beans-5.3.3.jar:5.3.3]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-5.3.3.jar:5.3.3]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333) ~[spring-beans-5.3.3.jar:5.3.3]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208) ~[spring-beans-5.3.3.jar:5.3.3]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276) ~[spring-beans-5.3.3.jar:5.3.3]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1380) ~[spring-beans-5.3.3.jar:5.3.3]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1300) ~[spring-beans-5.3.3.jar:5.3.3]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:640) ~[spring-beans-5.3.3.jar:5.3.3]
	... 25 more
Caused by: java.lang.IllegalArgumentException: Validation failed for query for method public abstract java.util.List com.camp.campApi.repository.PlaceRepo.findAllPlaceName()!
	at org.springframework.data.jpa.repository.query.SimpleJpaQuery.validateQuery(SimpleJpaQuery.java:93) ~[spring-data-jpa-2.4.3.jar:2.4.3]
	at org.springframework.data.jpa.repository.query.SimpleJpaQuery.<init>(SimpleJpaQuery.java:63) ~[spring-data-jpa-2.4.3.jar:2.4.3]
	at org.springframework.data.jpa.repository.query.JpaQueryFactory.fromMethodWithQueryString(JpaQueryFactory.java:76) ~[spring-data-jpa-2.4.3.jar:2.4.3]
	at org.springframework.data.jpa.repository.query.JpaQueryFactory.fromQueryAnnotation(JpaQueryFactory.java:56) ~[spring-data-jpa-2.4.3.jar:2.4.3]
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:146) ~[spring-data-jpa-2.4.3.jar:2.4.3]
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:216) ~[spring-data-jpa-2.4.3.jar:2.4.3]
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:81) ~[spring-data-jpa-2.4.3.jar:2.4.3]
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:100) ~[spring-data-commons-2.4.3.jar:2.4.3]
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$mapMethodsToQuery$1(QueryExecutorMethodInterceptor.java:93) ~[spring-data-commons-2.4.3.jar:2.4.3]
	at java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195) ~[?:?]
	at java.util.Iterator.forEachRemaining(Iterator.java:133) ~[?:?]
	at java.util.Collections$UnmodifiableCollection$1.forEachRemaining(Collections.java:1052) ~[?:?]
	at java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801) ~[?:?]
	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484) ~[?:?]
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474) ~[?:?]
	at java.util.stream.ReduceOps$ReduceOp.evaluateSequential(ReduceOps.java:913) ~[?:?]
	at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234) ~[?:?]
	at java.util.stream.ReferencePipeline.collect(ReferencePipeline.java:578) ~[?:?]
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:95) ~[spring-data-commons-2.4.3.jar:2.4.3]
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:85) ~[spring-data-commons-2.4.3.jar:2.4.3]
	at java.util.Optional.map(Optional.java:265) ~[?:?]
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:85) ~[spring-data-commons-2.4.3.jar:2.4.3]
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:303) ~[spring-data-commons-2.4.3.jar:2.4.3]
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$6(RepositoryFactoryBeanSupport.java:326) ~[spring-data-commons-2.4.3.jar:2.4.3]
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:230) ~[spring-data-commons-2.4.3.jar:2.4.3]
	at org.springframework.data.util.Lazy.get(Lazy.java:114) ~[spring-data-commons-2.4.3.jar:2.4.3]
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:329) ~[spring-data-commons-2.4.3.jar:2.4.3]
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:144) ~[spring-data-jpa-2.4.3.jar:2.4.3]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1847) ~[spring-beans-5.3.3.jar:5.3.3]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1784) ~[spring-beans-5.3.3.jar:5.3.3]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:609) ~[spring-beans-5.3.3.jar:5.3.3]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:531) ~[spring-beans-5.3.3.jar:5.3.3]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335) ~[spring-beans-5.3.3.jar:5.3.3]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-5.3.3.jar:5.3.3]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333) ~[spring-beans-5.3.3.jar:5.3.3]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208) ~[spring-beans-5.3.3.jar:5.3.3]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276) ~[spring-beans-5.3.3.jar:5.3.3]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1380) ~[spring-beans-5.3.3.jar:5.3.3]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1300) ~[spring-beans-5.3.3.jar:5.3.3]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:640) ~[spring-beans-5.3.3.jar:5.3.3]
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:119) ~[spring-beans-5.3.3.jar:5.3.3]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:399) ~[spring-beans-5.3.3.jar:5.3.3]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1415) ~[spring-beans-5.3.3.jar:5.3.3]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:608) ~[spring-beans-5.3.3.jar:5.3.3]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:531) ~[spring-beans-5.3.3.jar:5.3.3]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335) ~[spring-beans-5.3.3.jar:5.3.3]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-5.3.3.jar:5.3.3]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333) ~[spring-beans-5.3.3.jar:5.3.3]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208) ~[spring-beans-5.3.3.jar:5.3.3]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276) ~[spring-beans-5.3.3.jar:5.3.3]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1380) ~[spring-beans-5.3.3.jar:5.3.3]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1300) ~[spring-beans-5.3.3.jar:5.3.3]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:640) ~[spring-beans-5.3.3.jar:5.3.3]
	... 25 more
Caused by: java.lang.NullPointerException
	at java.lang.String$CaseInsensitiveComparator.compare(String.java:1233) ~[?:?]
	at java.lang.String$CaseInsensitiveComparator.compare(String.java:1227) ~[?:?]
	at java.util.TreeMap.getEntryUsingComparator(TreeMap.java:374) ~[?:?]
	at java.util.TreeMap.getEntry(TreeMap.java:343) ~[?:?]
	at java.util.TreeMap.get(TreeMap.java:277) ~[?:?]
	at org.hibernate.dialect.function.SQLFunctionRegistry.findSQLFunction(SQLFunctionRegistry.java:45) ~[hibernate-core-5.4.27.Final.jar:5.4.27.Final]
	at org.hibernate.hql.internal.ast.util.SessionFactoryHelper.findSQLFunction(SessionFactoryHelper.java:385) ~[hibernate-core-5.4.27.Final.jar:5.4.27.Final]
	at org.hibernate.hql.internal.ast.tree.IdentNode.getDataType(IdentNode.java:367) ~[hibernate-core-5.4.27.Final.jar:5.4.27.Final]
	at org.hibernate.hql.internal.ast.HqlSqlWalker.lookupProperty(HqlSqlWalker.java:667) ~[hibernate-core-5.4.27.Final.jar:5.4.27.Final]
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.propertyRef(HqlSqlBaseWalker.java:1154) ~[hibernate-core-5.4.27.Final.jar:5.4.27.Final]
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.selectExpr(HqlSqlBaseWalker.java:2315) ~[hibernate-core-5.4.27.Final.jar:5.4.27.Final]
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.selectExprList(HqlSqlBaseWalker.java:2256) ~[hibernate-core-5.4.27.Final.jar:5.4.27.Final]
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.selectClause(HqlSqlBaseWalker.java:1518) ~[hibernate-core-5.4.27.Final.jar:5.4.27.Final]
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.query(HqlSqlBaseWalker.java:597) ~[hibernate-core-5.4.27.Final.jar:5.4.27.Final]
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.selectStatement(HqlSqlBaseWalker.java:325) ~[hibernate-core-5.4.27.Final.jar:5.4.27.Final]
	at org.hibernate.hql.internal.antlr.HqlSqlBaseWalker.statement(HqlSqlBaseWalker.java:273) ~[hibernate-core-5.4.27.Final.jar:5.4.27.Final]
	at org.hibernate.hql.internal.ast.QueryTranslatorImpl.analyze(QueryTranslatorImpl.java:276) ~[hibernate-core-5.4.27.Final.jar:5.4.27.Final]
	at org.hibernate.hql.internal.ast.QueryTranslatorImpl.doCompile(QueryTranslatorImpl.java:192) ~[hibernate-core-5.4.27.Final.jar:5.4.27.Final]
	at org.hibernate.hql.internal.ast.QueryTranslatorImpl.compile(QueryTranslatorImpl.java:144) ~[hibernate-core-5.4.27.Final.jar:5.4.27.Final]
	at org.hibernate.engine.query.spi.HQLQueryPlan.<init>(HQLQueryPlan.java:113) ~[hibernate-core-5.4.27.Final.jar:5.4.27.Final]
	at org.hibernate.engine.query.spi.HQLQueryPlan.<init>(HQLQueryPlan.java:73) ~[hibernate-core-5.4.27.Final.jar:5.4.27.Final]
	at org.hibernate.engine.query.spi.QueryPlanCache.getHQLQueryPlan(QueryPlanCache.java:162) ~[hibernate-core-5.4.27.Final.jar:5.4.27.Final]
	at org.hibernate.internal.AbstractSharedSessionContract.getQueryPlan(AbstractSharedSessionContract.java:604) ~[hibernate-core-5.4.27.Final.jar:5.4.27.Final]
	at org.hibernate.internal.AbstractSharedSessionContract.createQuery(AbstractSharedSessionContract.java:716) ~[hibernate-core-5.4.27.Final.jar:5.4.27.Final]
	at org.hibernate.internal.AbstractSharedSessionContract.createQuery(AbstractSharedSessionContract.java:113) ~[hibernate-core-5.4.27.Final.jar:5.4.27.Final]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:567) ~[?:?]
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:362) ~[spring-orm-5.3.3.jar:5.3.3]
	at com.sun.proxy.$Proxy112.createQuery(Unknown Source) ~[?:?]
	at org.springframework.data.jpa.repository.query.SimpleJpaQuery.validateQuery(SimpleJpaQuery.java:87) ~[spring-data-jpa-2.4.3.jar:2.4.3]
	at org.springframework.data.jpa.repository.query.SimpleJpaQuery.<init>(SimpleJpaQuery.java:63) ~[spring-data-jpa-2.4.3.jar:2.4.3]
	at org.springframework.data.jpa.repository.query.JpaQueryFactory.fromMethodWithQueryString(JpaQueryFactory.java:76) ~[spring-data-jpa-2.4.3.jar:2.4.3]
	at org.springframework.data.jpa.repository.query.JpaQueryFactory.fromQueryAnnotation(JpaQueryFactory.java:56) ~[spring-data-jpa-2.4.3.jar:2.4.3]
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:146) ~[spring-data-jpa-2.4.3.jar:2.4.3]
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:216) ~[spring-data-jpa-2.4.3.jar:2.4.3]
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:81) ~[spring-data-jpa-2.4.3.jar:2.4.3]
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:100) ~[spring-data-commons-2.4.3.jar:2.4.3]
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$mapMethodsToQuery$1(QueryExecutorMethodInterceptor.java:93) ~[spring-data-commons-2.4.3.jar:2.4.3]
	at java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195) ~[?:?]
	at java.util.Iterator.forEachRemaining(Iterator.java:133) ~[?:?]
	at java.util.Collections$UnmodifiableCollection$1.forEachRemaining(Collections.java:1052) ~[?:?]
	at java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801) ~[?:?]
	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484) ~[?:?]
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474) ~[?:?]
	at java.util.stream.ReduceOps$ReduceOp.evaluateSequential(ReduceOps.java:913) ~[?:?]
	at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234) ~[?:?]
	at java.util.stream.ReferencePipeline.collect(ReferencePipeline.java:578) ~[?:?]
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:95) ~[spring-data-commons-2.4.3.jar:2.4.3]
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:85) ~[spring-data-commons-2.4.3.jar:2.4.3]
	at java.util.Optional.map(Optional.java:265) ~[?:?]
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:85) ~[spring-data-commons-2.4.3.jar:2.4.3]
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:303) ~[spring-data-commons-2.4.3.jar:2.4.3]
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$6(RepositoryFactoryBeanSupport.java:326) ~[spring-data-commons-2.4.3.jar:2.4.3]
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:230) ~[spring-data-commons-2.4.3.jar:2.4.3]
	at org.springframework.data.util.Lazy.get(Lazy.java:114) ~[spring-data-commons-2.4.3.jar:2.4.3]
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:329) ~[spring-data-commons-2.4.3.jar:2.4.3]
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:144) ~[spring-data-jpa-2.4.3.jar:2.4.3]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1847) ~[spring-beans-5.3.3.jar:5.3.3]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1784) ~[spring-beans-5.3.3.jar:5.3.3]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:609) ~[spring-beans-5.3.3.jar:5.3.3]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:531) ~[spring-beans-5.3.3.jar:5.3.3]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335) ~[spring-beans-5.3.3.jar:5.3.3]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-5.3.3.jar:5.3.3]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333) ~[spring-beans-5.3.3.jar:5.3.3]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208) ~[spring-beans-5.3.3.jar:5.3.3]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276) ~[spring-beans-5.3.3.jar:5.3.3]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1380) ~[spring-beans-5.3.3.jar:5.3.3]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1300) ~[spring-beans-5.3.3.jar:5.3.3]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:640) ~[spring-beans-5.3.3.jar:5.3.3]
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:119) ~[spring-beans-5.3.3.jar:5.3.3]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:399) ~[spring-beans-5.3.3.jar:5.3.3]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1415) ~[spring-beans-5.3.3.jar:5.3.3]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:608) ~[spring-beans-5.3.3.jar:5.3.3]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:531) ~[spring-beans-5.3.3.jar:5.3.3]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335) ~[spring-beans-5.3.3.jar:5.3.3]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-5.3.3.jar:5.3.3]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333) ~[spring-beans-5.3.3.jar:5.3.3]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208) ~[spring-beans-5.3.3.jar:5.3.3]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276) ~[spring-beans-5.3.3.jar:5.3.3]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1380) ~[spring-beans-5.3.3.jar:5.3.3]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1300) ~[spring-beans-5.3.3.jar:5.3.3]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:640) ~[spring-beans-5.3.3.jar:5.3.3]
	... 25 more
[INFO ] 2021-04-25 13:02:11.558 [main] CampApiApplication - Hello this is an info message
[ERROR] 2021-04-25 13:02:11.573 [main] CampApiApplication - Error Message Logged !!!
java.lang.NullPointerException: NullError
	at com.camp.campApi.CampApiApplication.main(CampApiApplication.java:21) [classes/:?]
[INFO ] 2021-04-25 13:02:12.413 [restartedMain] CampApiApplication - Hello this is an info message
[ERROR] 2021-04-25 13:02:12.413 [restartedMain] CampApiApplication - Error Message Logged !!!
java.lang.NullPointerException: NullError
	at com.camp.campApi.CampApiApplication.main(CampApiApplication.java:21) [classes/:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:567) ~[?:?]
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49) [spring-boot-devtools-2.4.2.jar:2.4.2]
[INFO ] 2021-04-25 13:02:13.015 [restartedMain] CampApiApplication - Starting CampApiApplication using Java 12.0.1 on network4 with PID 22208 (J:\jav\campApi\target\classes started by m.bandpey in J:\jav\campApi)
[INFO ] 2021-04-25 13:02:13.015 [restartedMain] CampApiApplication - No active profile set, falling back to default profiles: default
[INFO ] 2021-04-25 13:02:13.062 [restartedMain] DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
[INFO ] 2021-04-25 13:02:13.062 [restartedMain] DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
[INFO ] 2021-04-25 13:02:13.848 [restartedMain] RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
[INFO ] 2021-04-25 13:02:13.848 [restartedMain] RepositoryConfigurationDelegate - Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
[INFO ] 2021-04-25 13:02:13.879 [restartedMain] RepositoryConfigurationExtensionSupport - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.camp.campApi.repository.ChildPlaceRepo. If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
[INFO ] 2021-04-25 13:02:13.879 [restartedMain] RepositoryConfigurationExtensionSupport - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.camp.campApi.repository.PlaceRepo. If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
[INFO ] 2021-04-25 13:02:13.895 [restartedMain] RepositoryConfigurationExtensionSupport - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.camp.campApi.repository.ResponseRepo. If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
[INFO ] 2021-04-25 13:02:13.895 [restartedMain] RepositoryConfigurationExtensionSupport - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.camp.campApi.repository.RoleRepo. If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
[INFO ] 2021-04-25 13:02:13.895 [restartedMain] RepositoryConfigurationExtensionSupport - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.camp.campApi.repository.UserRepo. If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
[INFO ] 2021-04-25 13:02:13.895 [restartedMain] RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 48 ms. Found 0 JDBC repository interfaces.
[INFO ] 2021-04-25 13:02:13.911 [restartedMain] RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
[INFO ] 2021-04-25 13:02:13.911 [restartedMain] RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
[INFO ] 2021-04-25 13:02:13.948 [restartedMain] RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 41 ms. Found 5 JPA repository interfaces.
[INFO ] 2021-04-25 13:02:14.249 [restartedMain] PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@721a3087' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[INFO ] 2021-04-25 13:02:14.265 [restartedMain] PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[INFO ] 2021-04-25 13:02:14.566 [restartedMain] TomcatWebServer - Tomcat initialized with port(s): 8085 (http)
[INFO ] 2021-04-25 13:02:14.566 [restartedMain] Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8085"]
[INFO ] 2021-04-25 13:02:14.566 [restartedMain] StandardService - Starting service [Tomcat]
[INFO ] 2021-04-25 13:02:14.566 [restartedMain] StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.41]
[INFO ] 2021-04-25 13:02:14.819 [restartedMain] [/] - Initializing Spring embedded WebApplicationContext
[INFO ] 2021-04-25 13:02:14.819 [restartedMain] ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1757 ms
[INFO ] 2021-04-25 13:02:14.982 [restartedMain] LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
[INFO ] 2021-04-25 13:02:15.020 [restartedMain] Version - HHH000412: Hibernate ORM core version 5.4.27.Final
[INFO ] 2021-04-25 13:02:15.120 [restartedMain] Version - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
[INFO ] 2021-04-25 13:02:15.214 [restartedMain] HikariDataSource - HikariPool-1 - Starting...
[INFO ] 2021-04-25 13:02:15.283 [restartedMain] HikariDataSource - HikariPool-1 - Start completed.
[INFO ] 2021-04-25 13:02:15.299 [restartedMain] Dialect - HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
[INFO ] 2021-04-25 13:02:16.134 [restartedMain] JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[INFO ] 2021-04-25 13:02:16.144 [restartedMain] LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
[INFO ] 2021-04-25 13:02:16.187 [restartedMain] OptionalLiveReloadServer - LiveReload server is running on port 35729
[WARN ] 2021-04-25 13:02:16.906 [restartedMain] JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
[INFO ] 2021-04-25 13:02:17.137 [restartedMain] DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@67be18ee, org.springframework.security.web.context.SecurityContextPersistenceFilter@7887a57d, org.springframework.security.web.header.HeaderWriterFilter@1e54fe96, org.springframework.security.web.authentication.logout.LogoutFilter@336c142d, com.camp.campApi.security.JwtAuthorization@2775016f, com.camp.campApi.security.JwtAuthentication@6be10c91, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@762e0b5d, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@60c8873a, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@77e500bc, org.springframework.security.web.session.SessionManagementFilter@31186156, org.springframework.security.web.access.ExceptionTranslationFilter@29100a9a, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@2d689da9]
[INFO ] 2021-04-25 13:02:17.233 [restartedMain] ThreadPoolTaskExecutor - Initializing ExecutorService 'applicationTaskExecutor'
[INFO ] 2021-04-25 13:02:17.665 [restartedMain] Http11NioProtocol - Starting ProtocolHandler ["http-nio-8085"]
[INFO ] 2021-04-25 13:02:17.865 [restartedMain] TomcatWebServer - Tomcat started on port(s): 8085 (http) with context path ''
[INFO ] 2021-04-25 13:02:17.873 [restartedMain] CampApiApplication - Started CampApiApplication in 5.323 seconds (JVM running for 9.173)
[INFO ] 2021-04-25 13:02:26.998 [http-nio-8085-exec-2] [/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
[INFO ] 2021-04-25 13:02:26.998 [http-nio-8085-exec-2] DispatcherServlet - Initializing Servlet 'dispatcherServlet'
[INFO ] 2021-04-25 13:02:27.001 [http-nio-8085-exec-2] DispatcherServlet - Completed initialization in 2 ms
[WARN ] 2021-04-25 13:02:27.281 [http-nio-8085-exec-2] SqlExceptionHelper - SQL Error: 0, SQLState: S0022
[ERROR] 2021-04-25 13:02:27.455 [http-nio-8085-exec-2] SqlExceptionHelper - Column 'id' not found.
[WARN ] 2021-04-25 13:02:27.893 [http-nio-8085-exec-2] ExceptionHandlerExceptionResolver - Resolved [org.springframework.dao.InvalidDataAccessResourceUsageException: could not execute query; SQL [SELECT place_name FROM place]; nested exception is org.hibernate.exception.SQLGrammarException: could not execute query]
[INFO ] 2021-04-25 13:07:23.381 [main] CampApiApplication - Hello this is an info message
[ERROR] 2021-04-25 13:07:23.381 [main] CampApiApplication - Error Message Logged !!!
java.lang.NullPointerException: NullError
	at com.camp.campApi.CampApiApplication.main(CampApiApplication.java:21) [classes/:?]
[INFO ] 2021-04-25 13:07:24.221 [restartedMain] CampApiApplication - Hello this is an info message
[ERROR] 2021-04-25 13:07:24.221 [restartedMain] CampApiApplication - Error Message Logged !!!
java.lang.NullPointerException: NullError
	at com.camp.campApi.CampApiApplication.main(CampApiApplication.java:21) [classes/:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:567) ~[?:?]
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49) [spring-boot-devtools-2.4.2.jar:2.4.2]
[INFO ] 2021-04-25 13:07:24.654 [restartedMain] CampApiApplication - Starting CampApiApplication using Java 12.0.1 on network4 with PID 2716 (J:\jav\campApi\target\classes started by m.bandpey in J:\jav\campApi)
[INFO ] 2021-04-25 13:07:24.654 [restartedMain] CampApiApplication - No active profile set, falling back to default profiles: default
[INFO ] 2021-04-25 13:07:24.707 [restartedMain] DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
[INFO ] 2021-04-25 13:07:24.707 [restartedMain] DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
[INFO ] 2021-04-25 13:07:25.471 [restartedMain] RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
[INFO ] 2021-04-25 13:07:25.471 [restartedMain] RepositoryConfigurationDelegate - Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
[INFO ] 2021-04-25 13:07:25.509 [restartedMain] RepositoryConfigurationExtensionSupport - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.camp.campApi.repository.ChildPlaceRepo. If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
[INFO ] 2021-04-25 13:07:25.509 [restartedMain] RepositoryConfigurationExtensionSupport - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.camp.campApi.repository.PlaceRepo. If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
[INFO ] 2021-04-25 13:07:25.509 [restartedMain] RepositoryConfigurationExtensionSupport - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.camp.campApi.repository.ResponseRepo. If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
[INFO ] 2021-04-25 13:07:25.509 [restartedMain] RepositoryConfigurationExtensionSupport - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.camp.campApi.repository.RoleRepo. If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
[INFO ] 2021-04-25 13:07:25.509 [restartedMain] RepositoryConfigurationExtensionSupport - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.camp.campApi.repository.UserRepo. If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
[INFO ] 2021-04-25 13:07:25.509 [restartedMain] RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 43 ms. Found 0 JDBC repository interfaces.
[INFO ] 2021-04-25 13:07:25.525 [restartedMain] RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
[INFO ] 2021-04-25 13:07:25.525 [restartedMain] RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
[INFO ] 2021-04-25 13:07:25.572 [restartedMain] RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 44 ms. Found 5 JPA repository interfaces.
[INFO ] 2021-04-25 13:07:25.872 [restartedMain] PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@7ce49ab7' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[INFO ] 2021-04-25 13:07:25.888 [restartedMain] PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[INFO ] 2021-04-25 13:07:26.142 [restartedMain] TomcatWebServer - Tomcat initialized with port(s): 8085 (http)
[INFO ] 2021-04-25 13:07:26.142 [restartedMain] Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8085"]
[INFO ] 2021-04-25 13:07:26.142 [restartedMain] StandardService - Starting service [Tomcat]
[INFO ] 2021-04-25 13:07:26.142 [restartedMain] StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.41]
[INFO ] 2021-04-25 13:07:26.327 [restartedMain] [/] - Initializing Spring embedded WebApplicationContext
[INFO ] 2021-04-25 13:07:26.327 [restartedMain] ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1620 ms
[INFO ] 2021-04-25 13:07:26.512 [restartedMain] LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
[INFO ] 2021-04-25 13:07:26.543 [restartedMain] Version - HHH000412: Hibernate ORM core version 5.4.27.Final
[INFO ] 2021-04-25 13:07:26.659 [restartedMain] Version - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
[INFO ] 2021-04-25 13:07:26.743 [restartedMain] HikariDataSource - HikariPool-1 - Starting...
[INFO ] 2021-04-25 13:07:26.812 [restartedMain] HikariDataSource - HikariPool-1 - Start completed.
[INFO ] 2021-04-25 13:07:26.828 [restartedMain] Dialect - HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
[INFO ] 2021-04-25 13:07:27.646 [restartedMain] JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[INFO ] 2021-04-25 13:07:27.646 [restartedMain] LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
[INFO ] 2021-04-25 13:07:27.699 [restartedMain] OptionalLiveReloadServer - LiveReload server is running on port 35729
[WARN ] 2021-04-25 13:07:28.363 [restartedMain] JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
[INFO ] 2021-04-25 13:07:28.595 [restartedMain] DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@19221547, org.springframework.security.web.context.SecurityContextPersistenceFilter@5dbea9aa, org.springframework.security.web.header.HeaderWriterFilter@69eed090, org.springframework.security.web.authentication.logout.LogoutFilter@6304f8a3, com.camp.campApi.security.JwtAuthorization@c65923e, com.camp.campApi.security.JwtAuthentication@362a3e5d, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@42e2f095, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@256cdab5, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@34197204, org.springframework.security.web.session.SessionManagementFilter@2c82e42f, org.springframework.security.web.access.ExceptionTranslationFilter@1ee12fcc, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@2e0c693c]
[INFO ] 2021-04-25 13:07:28.680 [restartedMain] ThreadPoolTaskExecutor - Initializing ExecutorService 'applicationTaskExecutor'
[INFO ] 2021-04-25 13:07:29.034 [restartedMain] Http11NioProtocol - Starting ProtocolHandler ["http-nio-8085"]
[INFO ] 2021-04-25 13:07:29.185 [restartedMain] TomcatWebServer - Tomcat started on port(s): 8085 (http) with context path ''
[INFO ] 2021-04-25 13:07:29.200 [restartedMain] CampApiApplication - Started CampApiApplication in 4.904 seconds (JVM running for 8.569)
[INFO ] 2021-04-25 13:07:34.194 [http-nio-8085-exec-2] [/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
[INFO ] 2021-04-25 13:07:34.195 [http-nio-8085-exec-2] DispatcherServlet - Initializing Servlet 'dispatcherServlet'
[INFO ] 2021-04-25 13:07:34.196 [http-nio-8085-exec-2] DispatcherServlet - Completed initialization in 1 ms
[ERROR] 2021-04-25 15:16:37.085 [http-nio-8085-exec-10] [dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception
com.auth0.jwt.exceptions.JWTDecodeException: The token was expected to have 3 parts, but got 1.
	at com.auth0.jwt.TokenUtils.splitToken(TokenUtils.java:21) ~[java-jwt-3.7.0.jar:?]
	at com.auth0.jwt.JWTDecoder.<init>(JWTDecoder.java:31) ~[java-jwt-3.7.0.jar:?]
	at com.auth0.jwt.JWTDecoder.<init>(JWTDecoder.java:27) ~[java-jwt-3.7.0.jar:?]
	at com.auth0.jwt.JWT.decode(JWT.java:45) ~[java-jwt-3.7.0.jar:?]
	at com.camp.campApi.security.JwtAuthorization.doFilterInternal(JwtAuthorization.java:60) ~[classes/:?]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) ~[spring-web-5.3.3.jar:5.3.3]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336) ~[spring-security-web-5.4.2.jar:5.4.2]
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103) ~[spring-security-web-5.4.2.jar:5.4.2]
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89) ~[spring-security-web-5.4.2.jar:5.4.2]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336) ~[spring-security-web-5.4.2.jar:5.4.2]
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90) ~[spring-security-web-5.4.2.jar:5.4.2]
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75) ~[spring-security-web-5.4.2.jar:5.4.2]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) ~[spring-web-5.3.3.jar:5.3.3]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336) ~[spring-security-web-5.4.2.jar:5.4.2]
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:110) ~[spring-security-web-5.4.2.jar:5.4.2]
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:80) ~[spring-security-web-5.4.2.jar:5.4.2]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336) ~[spring-security-web-5.4.2.jar:5.4.2]
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55) ~[spring-security-web-5.4.2.jar:5.4.2]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) ~[spring-web-5.3.3.jar:5.3.3]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336) ~[spring-security-web-5.4.2.jar:5.4.2]
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:211) ~[spring-security-web-5.4.2.jar:5.4.2]
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:183) ~[spring-security-web-5.4.2.jar:5.4.2]
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358) ~[spring-web-5.3.3.jar:5.3.3]
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271) ~[spring-web-5.3.3.jar:5.3.3]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.41.jar:9.0.41]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.41.jar:9.0.41]
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100) ~[spring-web-5.3.3.jar:5.3.3]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) ~[spring-web-5.3.3.jar:5.3.3]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.41.jar:9.0.41]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.41.jar:9.0.41]
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93) ~[spring-web-5.3.3.jar:5.3.3]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) ~[spring-web-5.3.3.jar:5.3.3]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.41.jar:9.0.41]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.41.jar:9.0.41]
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201) ~[spring-web-5.3.3.jar:5.3.3]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) ~[spring-web-5.3.3.jar:5.3.3]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.41.jar:9.0.41]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.41.jar:9.0.41]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202) [tomcat-embed-core-9.0.41.jar:9.0.41]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97) [tomcat-embed-core-9.0.41.jar:9.0.41]
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542) [tomcat-embed-core-9.0.41.jar:9.0.41]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143) [tomcat-embed-core-9.0.41.jar:9.0.41]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92) [tomcat-embed-core-9.0.41.jar:9.0.41]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78) [tomcat-embed-core-9.0.41.jar:9.0.41]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343) [tomcat-embed-core-9.0.41.jar:9.0.41]
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374) [tomcat-embed-core-9.0.41.jar:9.0.41]
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65) [tomcat-embed-core-9.0.41.jar:9.0.41]
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:888) [tomcat-embed-core-9.0.41.jar:9.0.41]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1597) [tomcat-embed-core-9.0.41.jar:9.0.41]
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49) [tomcat-embed-core-9.0.41.jar:9.0.41]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128) [?:?]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628) [?:?]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61) [tomcat-embed-core-9.0.41.jar:9.0.41]
	at java.lang.Thread.run(Thread.java:835) [?:?]
[ERROR] 2021-04-25 15:16:37.306 [http-nio-8085-exec-10] JwtAuthEntryPoint - Unauthorized error. Message - Full authentication is required to access this resource
[INFO ] 2021-04-25 15:32:39.790 [main] CampApiApplication - Hello this is an info message
[ERROR] 2021-04-25 15:32:39.790 [main] CampApiApplication - Error Message Logged !!!
java.lang.NullPointerException: NullError
	at com.camp.campApi.CampApiApplication.main(CampApiApplication.java:21) [classes/:?]
[INFO ] 2021-04-25 15:32:40.659 [restartedMain] CampApiApplication - Hello this is an info message
[ERROR] 2021-04-25 15:32:40.659 [restartedMain] CampApiApplication - Error Message Logged !!!
java.lang.NullPointerException: NullError
	at com.camp.campApi.CampApiApplication.main(CampApiApplication.java:21) [classes/:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:567) ~[?:?]
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49) [spring-boot-devtools-2.4.2.jar:2.4.2]
[INFO ] 2021-04-25 15:32:41.189 [restartedMain] CampApiApplication - Starting CampApiApplication using Java 12.0.1 on network4 with PID 7328 (J:\jav\campApi\target\classes started by m.bandpey in J:\jav\campApi)
[INFO ] 2021-04-25 15:32:41.189 [restartedMain] CampApiApplication - No active profile set, falling back to default profiles: default
[INFO ] 2021-04-25 15:32:41.239 [restartedMain] DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
[INFO ] 2021-04-25 15:32:41.239 [restartedMain] DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
[INFO ] 2021-04-25 15:32:41.999 [restartedMain] RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
[INFO ] 2021-04-25 15:32:41.999 [restartedMain] RepositoryConfigurationDelegate - Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
[INFO ] 2021-04-25 15:32:42.053 [restartedMain] RepositoryConfigurationExtensionSupport - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.camp.campApi.repository.ChildPlaceRepo. If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
[INFO ] 2021-04-25 15:32:42.053 [restartedMain] RepositoryConfigurationExtensionSupport - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.camp.campApi.repository.PlaceRepo. If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
[INFO ] 2021-04-25 15:32:42.053 [restartedMain] RepositoryConfigurationExtensionSupport - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.camp.campApi.repository.ResponseRepo. If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
[INFO ] 2021-04-25 15:32:42.053 [restartedMain] RepositoryConfigurationExtensionSupport - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.camp.campApi.repository.RoleRepo. If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
[INFO ] 2021-04-25 15:32:42.068 [restartedMain] RepositoryConfigurationExtensionSupport - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.camp.campApi.repository.UserRepo. If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
[INFO ] 2021-04-25 15:32:42.068 [restartedMain] RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 52 ms. Found 0 JDBC repository interfaces.
[INFO ] 2021-04-25 15:32:42.068 [restartedMain] RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
[INFO ] 2021-04-25 15:32:42.068 [restartedMain] RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
[INFO ] 2021-04-25 15:32:42.122 [restartedMain] RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 50 ms. Found 5 JPA repository interfaces.
[INFO ] 2021-04-25 15:32:42.469 [restartedMain] PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@4cb3a307' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[INFO ] 2021-04-25 15:32:42.485 [restartedMain] PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[INFO ] 2021-04-25 15:32:42.755 [restartedMain] TomcatWebServer - Tomcat initialized with port(s): 8085 (http)
[INFO ] 2021-04-25 15:32:42.770 [restartedMain] Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8085"]
[INFO ] 2021-04-25 15:32:42.770 [restartedMain] StandardService - Starting service [Tomcat]
[INFO ] 2021-04-25 15:32:42.770 [restartedMain] StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.41]
[INFO ] 2021-04-25 15:32:42.939 [restartedMain] [/] - Initializing Spring embedded WebApplicationContext
[INFO ] 2021-04-25 15:32:42.939 [restartedMain] ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1690 ms
[INFO ] 2021-04-25 15:32:43.102 [restartedMain] LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
[INFO ] 2021-04-25 15:32:43.171 [restartedMain] Version - HHH000412: Hibernate ORM core version 5.4.27.Final
[INFO ] 2021-04-25 15:32:43.271 [restartedMain] Version - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
[INFO ] 2021-04-25 15:32:43.356 [restartedMain] HikariDataSource - HikariPool-1 - Starting...
[INFO ] 2021-04-25 15:32:43.441 [restartedMain] HikariDataSource - HikariPool-1 - Start completed.
[INFO ] 2021-04-25 15:32:43.456 [restartedMain] Dialect - HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
[INFO ] 2021-04-25 15:32:44.395 [restartedMain] JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[INFO ] 2021-04-25 15:32:44.405 [restartedMain] LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
[INFO ] 2021-04-25 15:32:44.465 [restartedMain] OptionalLiveReloadServer - LiveReload server is running on port 35729
[WARN ] 2021-04-25 15:32:45.115 [restartedMain] JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
[INFO ] 2021-04-25 15:32:45.365 [restartedMain] DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@155e624, org.springframework.security.web.context.SecurityContextPersistenceFilter@3f8f3166, org.springframework.security.web.header.HeaderWriterFilter@70762611, org.springframework.security.web.authentication.logout.LogoutFilter@38b4420c, com.camp.campApi.security.JwtAuthorization@71b0bebb, com.camp.campApi.security.JwtAuthentication@4e689b53, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@3995e476, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@559a4854, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@30568018, org.springframework.security.web.session.SessionManagementFilter@48e1f72a, org.springframework.security.web.access.ExceptionTranslationFilter@574d64cb, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@305f9218]
[INFO ] 2021-04-25 15:32:45.475 [restartedMain] ThreadPoolTaskExecutor - Initializing ExecutorService 'applicationTaskExecutor'
[INFO ] 2021-04-25 15:32:45.845 [restartedMain] Http11NioProtocol - Starting ProtocolHandler ["http-nio-8085"]
[INFO ] 2021-04-25 15:32:46.075 [restartedMain] TomcatWebServer - Tomcat started on port(s): 8085 (http) with context path ''
[INFO ] 2021-04-25 15:32:46.095 [restartedMain] CampApiApplication - Started CampApiApplication in 5.335 seconds (JVM running for 9.245)
[INFO ] 2021-04-25 15:33:32.723 [http-nio-8085-exec-1] [/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
[INFO ] 2021-04-25 15:33:32.723 [http-nio-8085-exec-1] DispatcherServlet - Initializing Servlet 'dispatcherServlet'
[INFO ] 2021-04-25 15:33:32.725 [http-nio-8085-exec-1] DispatcherServlet - Completed initialization in 2 ms
[INFO ] 2021-04-25 15:43:34.124 [main] CampApiApplication - Hello this is an info message
[ERROR] 2021-04-25 15:43:34.124 [main] CampApiApplication - Error Message Logged !!!
java.lang.NullPointerException: NullError
	at com.camp.campApi.CampApiApplication.main(CampApiApplication.java:21) [classes/:?]
[INFO ] 2021-04-25 15:43:35.006 [restartedMain] CampApiApplication - Hello this is an info message
[ERROR] 2021-04-25 15:43:35.006 [restartedMain] CampApiApplication - Error Message Logged !!!
java.lang.NullPointerException: NullError
	at com.camp.campApi.CampApiApplication.main(CampApiApplication.java:21) [classes/:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:567) ~[?:?]
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49) [spring-boot-devtools-2.4.2.jar:2.4.2]
[INFO ] 2021-04-25 15:43:35.576 [restartedMain] CampApiApplication - Starting CampApiApplication using Java 12.0.1 on network4 with PID 18736 (J:\jav\campApi\target\classes started by m.bandpey in J:\jav\campApi)
[INFO ] 2021-04-25 15:43:35.592 [restartedMain] CampApiApplication - No active profile set, falling back to default profiles: default
[INFO ] 2021-04-25 15:43:35.638 [restartedMain] DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
[INFO ] 2021-04-25 15:43:35.638 [restartedMain] DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
[INFO ] 2021-04-25 15:43:36.506 [restartedMain] RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
[INFO ] 2021-04-25 15:43:36.506 [restartedMain] RepositoryConfigurationDelegate - Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
[INFO ] 2021-04-25 15:43:36.536 [restartedMain] RepositoryConfigurationExtensionSupport - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.camp.campApi.repository.ChildPlaceRepo. If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
[INFO ] 2021-04-25 15:43:36.536 [restartedMain] RepositoryConfigurationExtensionSupport - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.camp.campApi.repository.PlaceRepo. If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
[INFO ] 2021-04-25 15:43:36.551 [restartedMain] RepositoryConfigurationExtensionSupport - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.camp.campApi.repository.ResponseRepo. If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
[INFO ] 2021-04-25 15:43:36.551 [restartedMain] RepositoryConfigurationExtensionSupport - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.camp.campApi.repository.RoleRepo. If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
[INFO ] 2021-04-25 15:43:36.551 [restartedMain] RepositoryConfigurationExtensionSupport - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.camp.campApi.repository.UserRepo. If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
[INFO ] 2021-04-25 15:43:36.551 [restartedMain] RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 51 ms. Found 0 JDBC repository interfaces.
[INFO ] 2021-04-25 15:43:36.576 [restartedMain] RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
[INFO ] 2021-04-25 15:43:36.576 [restartedMain] RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
[INFO ] 2021-04-25 15:43:36.636 [restartedMain] RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 61 ms. Found 5 JPA repository interfaces.
[INFO ] 2021-04-25 15:43:36.991 [restartedMain] PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@27675471' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[INFO ] 2021-04-25 15:43:36.991 [restartedMain] PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[INFO ] 2021-04-25 15:43:37.276 [restartedMain] TomcatWebServer - Tomcat initialized with port(s): 8085 (http)
[INFO ] 2021-04-25 15:43:37.291 [restartedMain] Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8085"]
[INFO ] 2021-04-25 15:43:37.291 [restartedMain] StandardService - Starting service [Tomcat]
[INFO ] 2021-04-25 15:43:37.291 [restartedMain] StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.41]
[INFO ] 2021-04-25 15:43:37.466 [restartedMain] [/] - Initializing Spring embedded WebApplicationContext
[INFO ] 2021-04-25 15:43:37.466 [restartedMain] ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1828 ms
[INFO ] 2021-04-25 15:43:37.676 [restartedMain] LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
[INFO ] 2021-04-25 15:43:37.706 [restartedMain] Version - HHH000412: Hibernate ORM core version 5.4.27.Final
[INFO ] 2021-04-25 15:43:37.827 [restartedMain] Version - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
[INFO ] 2021-04-25 15:43:37.921 [restartedMain] HikariDataSource - HikariPool-1 - Starting...
[INFO ] 2021-04-25 15:43:38.005 [restartedMain] HikariDataSource - HikariPool-1 - Start completed.
[INFO ] 2021-04-25 15:43:38.021 [restartedMain] Dialect - HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
[INFO ] 2021-04-25 15:43:38.900 [restartedMain] JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[INFO ] 2021-04-25 15:43:38.910 [restartedMain] LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
[INFO ] 2021-04-25 15:43:38.960 [restartedMain] OptionalLiveReloadServer - LiveReload server is running on port 35729
[WARN ] 2021-04-25 15:43:39.714 [restartedMain] JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
[INFO ] 2021-04-25 15:43:39.955 [restartedMain] DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@66c305a7, org.springframework.security.web.context.SecurityContextPersistenceFilter@3a08cd98, org.springframework.security.web.header.HeaderWriterFilter@370135ef, org.springframework.security.web.authentication.logout.LogoutFilter@2db730c3, com.camp.campApi.security.JwtAuthorization@27ca16dd, com.camp.campApi.security.JwtAuthentication@1c450bad, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@44cbb71a, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@36a462a7, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@41adc1ab, org.springframework.security.web.session.SessionManagementFilter@1f7ee804, org.springframework.security.web.access.ExceptionTranslationFilter@56846414, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@16575d42]
[INFO ] 2021-04-25 15:43:40.034 [restartedMain] ThreadPoolTaskExecutor - Initializing ExecutorService 'applicationTaskExecutor'
[INFO ] 2021-04-25 15:43:40.446 [restartedMain] Http11NioProtocol - Starting ProtocolHandler ["http-nio-8085"]
[INFO ] 2021-04-25 15:43:40.606 [restartedMain] TomcatWebServer - Tomcat started on port(s): 8085 (http) with context path ''
[INFO ] 2021-04-25 15:43:40.616 [restartedMain] CampApiApplication - Started CampApiApplication in 5.475 seconds (JVM running for 9.262)
[INFO ] 2021-04-25 15:44:27.170 [http-nio-8085-exec-1] [/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
[INFO ] 2021-04-25 15:44:27.170 [http-nio-8085-exec-1] DispatcherServlet - Initializing Servlet 'dispatcherServlet'
[INFO ] 2021-04-25 15:44:27.170 [http-nio-8085-exec-1] DispatcherServlet - Completed initialization in 0 ms
[ERROR] 2021-04-25 15:46:21.251 [http-nio-8085-exec-4] [dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception
com.auth0.jwt.exceptions.JWTDecodeException: The token was expected to have 3 parts, but got 1.
	at com.auth0.jwt.TokenUtils.splitToken(TokenUtils.java:21) ~[java-jwt-3.7.0.jar:?]
	at com.auth0.jwt.JWTDecoder.<init>(JWTDecoder.java:31) ~[java-jwt-3.7.0.jar:?]
	at com.auth0.jwt.JWTDecoder.<init>(JWTDecoder.java:27) ~[java-jwt-3.7.0.jar:?]
	at com.auth0.jwt.JWT.decode(JWT.java:45) ~[java-jwt-3.7.0.jar:?]
	at com.camp.campApi.security.JwtAuthorization.doFilterInternal(JwtAuthorization.java:60) ~[classes/:?]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) ~[spring-web-5.3.3.jar:5.3.3]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336) ~[spring-security-web-5.4.2.jar:5.4.2]
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103) ~[spring-security-web-5.4.2.jar:5.4.2]
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89) ~[spring-security-web-5.4.2.jar:5.4.2]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336) ~[spring-security-web-5.4.2.jar:5.4.2]
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90) ~[spring-security-web-5.4.2.jar:5.4.2]
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75) ~[spring-security-web-5.4.2.jar:5.4.2]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) ~[spring-web-5.3.3.jar:5.3.3]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336) ~[spring-security-web-5.4.2.jar:5.4.2]
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:110) ~[spring-security-web-5.4.2.jar:5.4.2]
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:80) ~[spring-security-web-5.4.2.jar:5.4.2]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336) ~[spring-security-web-5.4.2.jar:5.4.2]
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55) ~[spring-security-web-5.4.2.jar:5.4.2]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) ~[spring-web-5.3.3.jar:5.3.3]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336) ~[spring-security-web-5.4.2.jar:5.4.2]
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:211) ~[spring-security-web-5.4.2.jar:5.4.2]
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:183) ~[spring-security-web-5.4.2.jar:5.4.2]
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358) ~[spring-web-5.3.3.jar:5.3.3]
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271) ~[spring-web-5.3.3.jar:5.3.3]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.41.jar:9.0.41]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.41.jar:9.0.41]
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100) ~[spring-web-5.3.3.jar:5.3.3]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) ~[spring-web-5.3.3.jar:5.3.3]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.41.jar:9.0.41]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.41.jar:9.0.41]
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93) ~[spring-web-5.3.3.jar:5.3.3]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) ~[spring-web-5.3.3.jar:5.3.3]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.41.jar:9.0.41]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.41.jar:9.0.41]
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201) ~[spring-web-5.3.3.jar:5.3.3]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) ~[spring-web-5.3.3.jar:5.3.3]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.41.jar:9.0.41]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.41.jar:9.0.41]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202) [tomcat-embed-core-9.0.41.jar:9.0.41]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97) [tomcat-embed-core-9.0.41.jar:9.0.41]
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542) [tomcat-embed-core-9.0.41.jar:9.0.41]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143) [tomcat-embed-core-9.0.41.jar:9.0.41]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92) [tomcat-embed-core-9.0.41.jar:9.0.41]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78) [tomcat-embed-core-9.0.41.jar:9.0.41]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343) [tomcat-embed-core-9.0.41.jar:9.0.41]
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374) [tomcat-embed-core-9.0.41.jar:9.0.41]
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65) [tomcat-embed-core-9.0.41.jar:9.0.41]
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:888) [tomcat-embed-core-9.0.41.jar:9.0.41]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1597) [tomcat-embed-core-9.0.41.jar:9.0.41]
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49) [tomcat-embed-core-9.0.41.jar:9.0.41]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128) [?:?]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628) [?:?]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61) [tomcat-embed-core-9.0.41.jar:9.0.41]
	at java.lang.Thread.run(Thread.java:835) [?:?]
[ERROR] 2021-04-25 15:46:21.372 [http-nio-8085-exec-4] JwtAuthEntryPoint - Unauthorized error. Message - Full authentication is required to access this resource
[INFO ] 2021-04-25 15:56:29.888 [main] CampApiApplication - Hello this is an info message
[ERROR] 2021-04-25 15:56:29.898 [main] CampApiApplication - Error Message Logged !!!
java.lang.NullPointerException: NullError
	at com.camp.campApi.CampApiApplication.main(CampApiApplication.java:21) [classes/:?]
[INFO ] 2021-04-25 15:56:30.741 [restartedMain] CampApiApplication - Hello this is an info message
[ERROR] 2021-04-25 15:56:30.741 [restartedMain] CampApiApplication - Error Message Logged !!!
java.lang.NullPointerException: NullError
	at com.camp.campApi.CampApiApplication.main(CampApiApplication.java:21) [classes/:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:567) ~[?:?]
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49) [spring-boot-devtools-2.4.2.jar:2.4.2]
[INFO ] 2021-04-25 15:56:31.238 [restartedMain] CampApiApplication - Starting CampApiApplication using Java 12.0.1 on network4 with PID 1000 (J:\jav\campApi\target\classes started by m.bandpey in J:\jav\campApi)
[INFO ] 2021-04-25 15:56:31.238 [restartedMain] CampApiApplication - No active profile set, falling back to default profiles: default
[INFO ] 2021-04-25 15:56:31.284 [restartedMain] DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
[INFO ] 2021-04-25 15:56:31.284 [restartedMain] DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
[INFO ] 2021-04-25 15:56:32.024 [restartedMain] RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
[INFO ] 2021-04-25 15:56:32.024 [restartedMain] RepositoryConfigurationDelegate - Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
[INFO ] 2021-04-25 15:56:32.071 [restartedMain] RepositoryConfigurationExtensionSupport - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.camp.campApi.repository.ChildPlaceRepo. If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
[INFO ] 2021-04-25 15:56:32.071 [restartedMain] RepositoryConfigurationExtensionSupport - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.camp.campApi.repository.PlaceRepo. If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
[INFO ] 2021-04-25 15:56:32.071 [restartedMain] RepositoryConfigurationExtensionSupport - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.camp.campApi.repository.ResponseRepo. If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
[INFO ] 2021-04-25 15:56:32.071 [restartedMain] RepositoryConfigurationExtensionSupport - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.camp.campApi.repository.RoleRepo. If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
[INFO ] 2021-04-25 15:56:32.071 [restartedMain] RepositoryConfigurationExtensionSupport - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.camp.campApi.repository.UserRepo. If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
[INFO ] 2021-04-25 15:56:32.086 [restartedMain] RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 50 ms. Found 0 JDBC repository interfaces.
[INFO ] 2021-04-25 15:56:32.086 [restartedMain] RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
[INFO ] 2021-04-25 15:56:32.086 [restartedMain] RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
[INFO ] 2021-04-25 15:56:32.140 [restartedMain] RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 50 ms. Found 5 JPA repository interfaces.
[INFO ] 2021-04-25 15:56:32.472 [restartedMain] PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@18afe6cf' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[INFO ] 2021-04-25 15:56:32.472 [restartedMain] PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[INFO ] 2021-04-25 15:56:32.773 [restartedMain] TomcatWebServer - Tomcat initialized with port(s): 8085 (http)
[INFO ] 2021-04-25 15:56:32.773 [restartedMain] Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8085"]
[INFO ] 2021-04-25 15:56:32.788 [restartedMain] StandardService - Starting service [Tomcat]
[INFO ] 2021-04-25 15:56:32.788 [restartedMain] StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.41]
[INFO ] 2021-04-25 15:56:32.936 [restartedMain] [/] - Initializing Spring embedded WebApplicationContext
[INFO ] 2021-04-25 15:56:32.936 [restartedMain] ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1652 ms
[INFO ] 2021-04-25 15:56:33.116 [restartedMain] LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
[INFO ] 2021-04-25 15:56:33.166 [restartedMain] Version - HHH000412: Hibernate ORM core version 5.4.27.Final
[INFO ] 2021-04-25 15:56:33.274 [restartedMain] Version - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
[INFO ] 2021-04-25 15:56:33.344 [restartedMain] HikariDataSource - HikariPool-1 - Starting...
[INFO ] 2021-04-25 15:56:33.434 [restartedMain] HikariDataSource - HikariPool-1 - Start completed.
[INFO ] 2021-04-25 15:56:33.444 [restartedMain] Dialect - HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
[INFO ] 2021-04-25 15:56:34.544 [restartedMain] JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[INFO ] 2021-04-25 15:56:34.554 [restartedMain] LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
[INFO ] 2021-04-25 15:56:34.602 [restartedMain] OptionalLiveReloadServer - LiveReload server is running on port 35729
[WARN ] 2021-04-25 15:56:35.383 [restartedMain] JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
[INFO ] 2021-04-25 15:56:35.822 [restartedMain] DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@24bfb19e, org.springframework.security.web.context.SecurityContextPersistenceFilter@77432901, org.springframework.security.web.header.HeaderWriterFilter@1f97205, org.springframework.security.web.authentication.logout.LogoutFilter@1146e00d, com.camp.campApi.security.JwtAuthorization@3478f31, com.camp.campApi.security.JwtAuthentication@55510792, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@6a5bc7da, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@22d218f5, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@7a99b97e, org.springframework.security.web.session.SessionManagementFilter@65dcbdc4, org.springframework.security.web.access.ExceptionTranslationFilter@1b3598e5, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@7f5164a8]
[INFO ] 2021-04-25 15:56:35.955 [restartedMain] ThreadPoolTaskExecutor - Initializing ExecutorService 'applicationTaskExecutor'
[INFO ] 2021-04-25 15:56:36.657 [restartedMain] Http11NioProtocol - Starting ProtocolHandler ["http-nio-8085"]
[INFO ] 2021-04-25 15:56:36.831 [restartedMain] TomcatWebServer - Tomcat started on port(s): 8085 (http) with context path ''
[INFO ] 2021-04-25 15:56:36.841 [restartedMain] CampApiApplication - Started CampApiApplication in 6.026 seconds (JVM running for 9.747)
[INFO ] 2021-04-25 15:57:43.695 [http-nio-8085-exec-1] [/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
[INFO ] 2021-04-25 15:57:43.695 [http-nio-8085-exec-1] DispatcherServlet - Initializing Servlet 'dispatcherServlet'
[INFO ] 2021-04-25 15:57:43.695 [http-nio-8085-exec-1] DispatcherServlet - Completed initialization in 0 ms
[INFO ] 2021-04-25 16:00:34.013 [main] CampApiApplication - Hello this is an info message
[ERROR] 2021-04-25 16:00:34.023 [main] CampApiApplication - Error Message Logged !!!
java.lang.NullPointerException: NullError
	at com.camp.campApi.CampApiApplication.main(CampApiApplication.java:21) [classes/:?]
[INFO ] 2021-04-25 16:00:35.043 [restartedMain] CampApiApplication - Hello this is an info message
[ERROR] 2021-04-25 16:00:35.043 [restartedMain] CampApiApplication - Error Message Logged !!!
java.lang.NullPointerException: NullError
	at com.camp.campApi.CampApiApplication.main(CampApiApplication.java:21) [classes/:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:567) ~[?:?]
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49) [spring-boot-devtools-2.4.2.jar:2.4.2]
[INFO ] 2021-04-25 16:00:35.533 [restartedMain] CampApiApplication - Starting CampApiApplication using Java 12.0.1 on network4 with PID 19716 (J:\jav\campApi\target\classes started by m.bandpey in J:\jav\campApi)
[INFO ] 2021-04-25 16:00:35.543 [restartedMain] CampApiApplication - No active profile set, falling back to default profiles: default
[INFO ] 2021-04-25 16:00:35.593 [restartedMain] DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
[INFO ] 2021-04-25 16:00:35.593 [restartedMain] DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
[INFO ] 2021-04-25 16:00:36.394 [restartedMain] RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
[INFO ] 2021-04-25 16:00:36.394 [restartedMain] RepositoryConfigurationDelegate - Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
[INFO ] 2021-04-25 16:00:36.429 [restartedMain] RepositoryConfigurationExtensionSupport - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.camp.campApi.repository.ChildPlaceRepo. If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
[INFO ] 2021-04-25 16:00:36.444 [restartedMain] RepositoryConfigurationExtensionSupport - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.camp.campApi.repository.PlaceRepo. If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
[INFO ] 2021-04-25 16:00:36.444 [restartedMain] RepositoryConfigurationExtensionSupport - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.camp.campApi.repository.ResponseRepo. If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
[INFO ] 2021-04-25 16:00:36.444 [restartedMain] RepositoryConfigurationExtensionSupport - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.camp.campApi.repository.RoleRepo. If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
[INFO ] 2021-04-25 16:00:36.444 [restartedMain] RepositoryConfigurationExtensionSupport - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.camp.campApi.repository.UserRepo. If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
[INFO ] 2021-04-25 16:00:36.444 [restartedMain] RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 46 ms. Found 0 JDBC repository interfaces.
[INFO ] 2021-04-25 16:00:36.460 [restartedMain] RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
[INFO ] 2021-04-25 16:00:36.460 [restartedMain] RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
[INFO ] 2021-04-25 16:00:36.529 [restartedMain] RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 60 ms. Found 5 JPA repository interfaces.
[INFO ] 2021-04-25 16:00:36.862 [restartedMain] PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@7abc979c' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[INFO ] 2021-04-25 16:00:36.862 [restartedMain] PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[INFO ] 2021-04-25 16:00:37.395 [restartedMain] TomcatWebServer - Tomcat initialized with port(s): 8085 (http)
[INFO ] 2021-04-25 16:00:37.405 [restartedMain] Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8085"]
[INFO ] 2021-04-25 16:00:37.405 [restartedMain] StandardService - Starting service [Tomcat]
[INFO ] 2021-04-25 16:00:37.405 [restartedMain] StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.41]
[INFO ] 2021-04-25 16:00:37.630 [restartedMain] [/] - Initializing Spring embedded WebApplicationContext
[INFO ] 2021-04-25 16:00:37.630 [restartedMain] ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 2037 ms
[INFO ] 2021-04-25 16:00:37.837 [restartedMain] LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
[INFO ] 2021-04-25 16:00:37.878 [restartedMain] Version - HHH000412: Hibernate ORM core version 5.4.27.Final
[INFO ] 2021-04-25 16:00:38.033 [restartedMain] Version - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
[INFO ] 2021-04-25 16:00:38.112 [restartedMain] HikariDataSource - HikariPool-1 - Starting...
[INFO ] 2021-04-25 16:00:38.252 [restartedMain] HikariDataSource - HikariPool-1 - Start completed.
[INFO ] 2021-04-25 16:00:38.272 [restartedMain] Dialect - HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
[INFO ] 2021-04-25 16:00:39.243 [restartedMain] JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[INFO ] 2021-04-25 16:00:39.251 [restartedMain] LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
[INFO ] 2021-04-25 16:00:39.295 [restartedMain] OptionalLiveReloadServer - LiveReload server is running on port 35729
[WARN ] 2021-04-25 16:00:40.043 [restartedMain] JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
[INFO ] 2021-04-25 16:00:40.293 [restartedMain] DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@15f742be, org.springframework.security.web.context.SecurityContextPersistenceFilter@6ca92546, org.springframework.security.web.header.HeaderWriterFilter@4bb76872, org.springframework.security.web.authentication.logout.LogoutFilter@34353bff, com.camp.campApi.security.JwtAuthorization@4ec48853, com.camp.campApi.security.JwtAuthentication@53f063ec, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@6d8fd7f3, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@4df7f256, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@46e6101f, org.springframework.security.web.session.SessionManagementFilter@2be73a07, org.springframework.security.web.access.ExceptionTranslationFilter@3f2c1d00, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@537e27ec]
[INFO ] 2021-04-25 16:00:40.383 [restartedMain] ThreadPoolTaskExecutor - Initializing ExecutorService 'applicationTaskExecutor'
[INFO ] 2021-04-25 16:00:40.762 [restartedMain] Http11NioProtocol - Starting ProtocolHandler ["http-nio-8085"]
[INFO ] 2021-04-25 16:00:40.915 [restartedMain] TomcatWebServer - Tomcat started on port(s): 8085 (http) with context path ''
[INFO ] 2021-04-25 16:00:40.931 [restartedMain] CampApiApplication - Started CampApiApplication in 5.784 seconds (JVM running for 9.81)
[INFO ] 2021-04-25 16:03:31.751 [http-nio-8085-exec-1] [/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
[INFO ] 2021-04-25 16:03:31.751 [http-nio-8085-exec-1] DispatcherServlet - Initializing Servlet 'dispatcherServlet'
[INFO ] 2021-04-25 16:03:31.751 [http-nio-8085-exec-1] DispatcherServlet - Completed initialization in 0 ms
[INFO ] 2021-04-25 16:06:13.243 [http-nio-8085-exec-5] Http11Processor - Error parsing HTTP request header
 Note: further occurrences of HTTP request parsing errors will be logged at DEBUG level.
java.lang.IllegalArgumentException: Invalid character found in the request target [/api/childPlace/savePlace/?placeName={MountainCamp}?username={ghadimi@gmail.com}]. The valid characters are defined in RFC 7230 and RFC 3986
	at org.apache.coyote.http11.Http11InputBuffer.parseRequestLine(Http11InputBuffer.java:490) ~[tomcat-embed-core-9.0.41.jar:9.0.41]
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:261) [tomcat-embed-core-9.0.41.jar:9.0.41]
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65) [tomcat-embed-core-9.0.41.jar:9.0.41]
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:888) [tomcat-embed-core-9.0.41.jar:9.0.41]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1597) [tomcat-embed-core-9.0.41.jar:9.0.41]
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49) [tomcat-embed-core-9.0.41.jar:9.0.41]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128) [?:?]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628) [?:?]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61) [tomcat-embed-core-9.0.41.jar:9.0.41]
	at java.lang.Thread.run(Thread.java:835) [?:?]
[INFO ] 2021-04-25 16:11:41.989 [main] CampApiApplication - Hello this is an info message
[ERROR] 2021-04-25 16:11:41.999 [main] CampApiApplication - Error Message Logged !!!
java.lang.NullPointerException: NullError
	at com.camp.campApi.CampApiApplication.main(CampApiApplication.java:21) [classes/:?]
[INFO ] 2021-04-25 16:11:42.849 [restartedMain] CampApiApplication - Hello this is an info message
[ERROR] 2021-04-25 16:11:42.849 [restartedMain] CampApiApplication - Error Message Logged !!!
java.lang.NullPointerException: NullError
	at com.camp.campApi.CampApiApplication.main(CampApiApplication.java:21) [classes/:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:567) ~[?:?]
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49) [spring-boot-devtools-2.4.2.jar:2.4.2]
[INFO ] 2021-04-25 16:11:43.339 [restartedMain] CampApiApplication - Starting CampApiApplication using Java 12.0.1 on network4 with PID 23352 (J:\jav\campApi\target\classes started by m.bandpey in J:\jav\campApi)
[INFO ] 2021-04-25 16:11:43.339 [restartedMain] CampApiApplication - No active profile set, falling back to default profiles: default
[INFO ] 2021-04-25 16:11:43.399 [restartedMain] DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
[INFO ] 2021-04-25 16:11:43.399 [restartedMain] DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
[INFO ] 2021-04-25 16:11:44.169 [restartedMain] RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
[INFO ] 2021-04-25 16:11:44.169 [restartedMain] RepositoryConfigurationDelegate - Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
[INFO ] 2021-04-25 16:11:44.229 [restartedMain] RepositoryConfigurationExtensionSupport - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.camp.campApi.repository.ChildPlaceRepo. If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
[INFO ] 2021-04-25 16:11:44.229 [restartedMain] RepositoryConfigurationExtensionSupport - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.camp.campApi.repository.PlaceRepo. If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
[INFO ] 2021-04-25 16:11:44.229 [restartedMain] RepositoryConfigurationExtensionSupport - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.camp.campApi.repository.ResponseRepo. If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
[INFO ] 2021-04-25 16:11:44.239 [restartedMain] RepositoryConfigurationExtensionSupport - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.camp.campApi.repository.RoleRepo. If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
[INFO ] 2021-04-25 16:11:44.239 [restartedMain] RepositoryConfigurationExtensionSupport - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.camp.campApi.repository.UserRepo. If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
[INFO ] 2021-04-25 16:11:44.239 [restartedMain] RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 65 ms. Found 0 JDBC repository interfaces.
[INFO ] 2021-04-25 16:11:44.259 [restartedMain] RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
[INFO ] 2021-04-25 16:11:44.259 [restartedMain] RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
[INFO ] 2021-04-25 16:11:44.319 [restartedMain] RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 50 ms. Found 5 JPA repository interfaces.
[INFO ] 2021-04-25 16:11:44.615 [restartedMain] PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@6228aa4a' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[INFO ] 2021-04-25 16:11:44.631 [restartedMain] PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[INFO ] 2021-04-25 16:11:44.932 [restartedMain] TomcatWebServer - Tomcat initialized with port(s): 8085 (http)
[INFO ] 2021-04-25 16:11:44.932 [restartedMain] Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8085"]
[INFO ] 2021-04-25 16:11:44.932 [restartedMain] StandardService - Starting service [Tomcat]
[INFO ] 2021-04-25 16:11:44.932 [restartedMain] StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.41]
[INFO ] 2021-04-25 16:11:45.101 [restartedMain] [/] - Initializing Spring embedded WebApplicationContext
[INFO ] 2021-04-25 16:11:45.101 [restartedMain] ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1702 ms
[INFO ] 2021-04-25 16:11:45.301 [restartedMain] LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
[INFO ] 2021-04-25 16:11:45.333 [restartedMain] Version - HHH000412: Hibernate ORM core version 5.4.27.Final
[INFO ] 2021-04-25 16:11:45.434 [restartedMain] Version - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
[INFO ] 2021-04-25 16:11:45.514 [restartedMain] HikariDataSource - HikariPool-1 - Starting...
[INFO ] 2021-04-25 16:11:45.583 [restartedMain] HikariDataSource - HikariPool-1 - Start completed.
[INFO ] 2021-04-25 16:11:45.598 [restartedMain] Dialect - HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
[INFO ] 2021-04-25 16:11:46.475 [restartedMain] JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[INFO ] 2021-04-25 16:11:46.485 [restartedMain] LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
[INFO ] 2021-04-25 16:11:46.535 [restartedMain] OptionalLiveReloadServer - LiveReload server is running on port 35729
[WARN ] 2021-04-25 16:11:47.333 [restartedMain] JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
[INFO ] 2021-04-25 16:11:47.563 [restartedMain] DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@1029c879, org.springframework.security.web.context.SecurityContextPersistenceFilter@2d604e9d, org.springframework.security.web.header.HeaderWriterFilter@2796a8be, org.springframework.security.web.authentication.logout.LogoutFilter@1678e029, com.camp.campApi.security.JwtAuthorization@5d80ca52, com.camp.campApi.security.JwtAuthentication@73832953, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@8fa9f38, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@22442bbe, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@14ccf152, org.springframework.security.web.session.SessionManagementFilter@59d80dad, org.springframework.security.web.access.ExceptionTranslationFilter@83c575b, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@13248449]
[INFO ] 2021-04-25 16:11:47.653 [restartedMain] ThreadPoolTaskExecutor - Initializing ExecutorService 'applicationTaskExecutor'
[INFO ] 2021-04-25 16:11:48.123 [restartedMain] Http11NioProtocol - Starting ProtocolHandler ["http-nio-8085"]
[INFO ] 2021-04-25 16:11:48.321 [restartedMain] TomcatWebServer - Tomcat started on port(s): 8085 (http) with context path ''
[INFO ] 2021-04-25 16:11:48.331 [restartedMain] CampApiApplication - Started CampApiApplication in 5.38 seconds (JVM running for 9.401)
[INFO ] 2021-04-25 16:11:54.711 [http-nio-8085-exec-2] [/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
[INFO ] 2021-04-25 16:11:54.712 [http-nio-8085-exec-2] DispatcherServlet - Initializing Servlet 'dispatcherServlet'
[INFO ] 2021-04-25 16:11:54.714 [http-nio-8085-exec-2] DispatcherServlet - Completed initialization in 2 ms
[WARN ] 2021-04-25 16:11:54.792 [http-nio-8085-exec-2] PageNotFound - Request method 'GET' not supported
[WARN ] 2021-04-25 16:11:54.988 [http-nio-8085-exec-2] ExceptionHandlerExceptionResolver - Resolved [org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'GET' not supported]
[WARN ] 2021-04-25 16:12:10.232 [http-nio-8085-exec-3] PageNotFound - Request method 'GET' not supported
[WARN ] 2021-04-25 16:12:10.351 [http-nio-8085-exec-3] ExceptionHandlerExceptionResolver - Resolved [org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'GET' not supported]
[WARN ] 2021-04-25 16:12:12.487 [http-nio-8085-exec-4] PageNotFound - Request method 'GET' not supported
[WARN ] 2021-04-25 16:12:12.592 [http-nio-8085-exec-4] ExceptionHandlerExceptionResolver - Resolved [org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'GET' not supported]
[INFO ] 2021-04-25 16:14:17.089 [main] CampApiApplication - Hello this is an info message
[ERROR] 2021-04-25 16:14:17.099 [main] CampApiApplication - Error Message Logged !!!
java.lang.NullPointerException: NullError
	at com.camp.campApi.CampApiApplication.main(CampApiApplication.java:21) [classes/:?]
[INFO ] 2021-04-25 16:14:18.028 [restartedMain] CampApiApplication - Hello this is an info message
[ERROR] 2021-04-25 16:14:18.028 [restartedMain] CampApiApplication - Error Message Logged !!!
java.lang.NullPointerException: NullError
	at com.camp.campApi.CampApiApplication.main(CampApiApplication.java:21) [classes/:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:567) ~[?:?]
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49) [spring-boot-devtools-2.4.2.jar:2.4.2]
[INFO ] 2021-04-25 16:14:18.499 [restartedMain] CampApiApplication - Starting CampApiApplication using Java 12.0.1 on network4 with PID 22800 (J:\jav\campApi\target\classes started by m.bandpey in J:\jav\campApi)
[INFO ] 2021-04-25 16:14:18.514 [restartedMain] CampApiApplication - No active profile set, falling back to default profiles: default
[INFO ] 2021-04-25 16:14:18.563 [restartedMain] DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
[INFO ] 2021-04-25 16:14:18.563 [restartedMain] DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
[INFO ] 2021-04-25 16:14:19.318 [restartedMain] RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
[INFO ] 2021-04-25 16:14:19.318 [restartedMain] RepositoryConfigurationDelegate - Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
[INFO ] 2021-04-25 16:14:19.356 [restartedMain] RepositoryConfigurationExtensionSupport - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.camp.campApi.repository.ChildPlaceRepo. If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
[INFO ] 2021-04-25 16:14:19.372 [restartedMain] RepositoryConfigurationExtensionSupport - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.camp.campApi.repository.PlaceRepo. If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
[INFO ] 2021-04-25 16:14:19.372 [restartedMain] RepositoryConfigurationExtensionSupport - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.camp.campApi.repository.ResponseRepo. If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
[INFO ] 2021-04-25 16:14:19.372 [restartedMain] RepositoryConfigurationExtensionSupport - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.camp.campApi.repository.RoleRepo. If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
[INFO ] 2021-04-25 16:14:19.372 [restartedMain] RepositoryConfigurationExtensionSupport - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.camp.campApi.repository.UserRepo. If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
[INFO ] 2021-04-25 16:14:19.372 [restartedMain] RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 50 ms. Found 0 JDBC repository interfaces.
[INFO ] 2021-04-25 16:14:19.387 [restartedMain] RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
[INFO ] 2021-04-25 16:14:19.387 [restartedMain] RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
[INFO ] 2021-04-25 16:14:19.453 [restartedMain] RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 59 ms. Found 5 JPA repository interfaces.
[INFO ] 2021-04-25 16:14:19.763 [restartedMain] PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@3c3bcf73' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[INFO ] 2021-04-25 16:14:19.763 [restartedMain] PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[INFO ] 2021-04-25 16:14:20.053 [restartedMain] TomcatWebServer - Tomcat initialized with port(s): 8085 (http)
[INFO ] 2021-04-25 16:14:20.053 [restartedMain] Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8085"]
[INFO ] 2021-04-25 16:14:20.053 [restartedMain] StandardService - Starting service [Tomcat]
[INFO ] 2021-04-25 16:14:20.053 [restartedMain] StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.41]
[INFO ] 2021-04-25 16:14:20.233 [restartedMain] [/] - Initializing Spring embedded WebApplicationContext
[INFO ] 2021-04-25 16:14:20.233 [restartedMain] ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1670 ms
[INFO ] 2021-04-25 16:14:20.433 [restartedMain] LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
[INFO ] 2021-04-25 16:14:20.473 [restartedMain] Version - HHH000412: Hibernate ORM core version 5.4.27.Final
[INFO ] 2021-04-25 16:14:20.543 [restartedMain] Version - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
[INFO ] 2021-04-25 16:14:20.623 [restartedMain] HikariDataSource - HikariPool-1 - Starting...
[INFO ] 2021-04-25 16:14:20.703 [restartedMain] HikariDataSource - HikariPool-1 - Start completed.
[INFO ] 2021-04-25 16:14:20.713 [restartedMain] Dialect - HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
[INFO ] 2021-04-25 16:14:21.602 [restartedMain] JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[INFO ] 2021-04-25 16:14:21.612 [restartedMain] LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
[INFO ] 2021-04-25 16:14:21.653 [restartedMain] OptionalLiveReloadServer - LiveReload server is running on port 35729
[WARN ] 2021-04-25 16:14:22.378 [restartedMain] JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
[INFO ] 2021-04-25 16:14:22.757 [restartedMain] DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@6095a8fb, org.springframework.security.web.context.SecurityContextPersistenceFilter@70762611, org.springframework.security.web.header.HeaderWriterFilter@2c88768a, org.springframework.security.web.authentication.logout.LogoutFilter@73a04e11, com.camp.campApi.security.JwtAuthorization@64c7a2b1, com.camp.campApi.security.JwtAuthentication@1b03316d, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@48e1f72a, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@69d2af0b, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@190bdc17, org.springframework.security.web.session.SessionManagementFilter@574d64cb, org.springframework.security.web.access.ExceptionTranslationFilter@60368fe8, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@1b37dde8]
[INFO ] 2021-04-25 16:14:22.837 [restartedMain] ThreadPoolTaskExecutor - Initializing ExecutorService 'applicationTaskExecutor'
[INFO ] 2021-04-25 16:14:23.212 [restartedMain] Http11NioProtocol - Starting ProtocolHandler ["http-nio-8085"]
[INFO ] 2021-04-25 16:14:23.391 [restartedMain] TomcatWebServer - Tomcat started on port(s): 8085 (http) with context path ''
[INFO ] 2021-04-25 16:14:23.406 [restartedMain] CampApiApplication - Started CampApiApplication in 5.308 seconds (JVM running for 9.299)
[INFO ] 2021-04-25 16:14:49.046 [http-nio-8085-exec-9] [/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
[INFO ] 2021-04-25 16:14:49.046 [http-nio-8085-exec-9] DispatcherServlet - Initializing Servlet 'dispatcherServlet'
[INFO ] 2021-04-25 16:14:49.048 [http-nio-8085-exec-9] DispatcherServlet - Completed initialization in 1 ms
[WARN ] 2021-04-25 16:14:49.121 [http-nio-8085-exec-9] PageNotFound - Request method 'GET' not supported
[WARN ] 2021-04-25 16:14:49.280 [http-nio-8085-exec-9] ExceptionHandlerExceptionResolver - Resolved [org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'GET' not supported]
[WARN ] 2021-04-25 16:15:52.661 [http-nio-8085-exec-6] PageNotFound - Request method 'GET' not supported
[WARN ] 2021-04-25 16:15:52.767 [http-nio-8085-exec-6] ExceptionHandlerExceptionResolver - Resolved [org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'GET' not supported]
[WARN ] 2021-04-25 16:16:24.508 [http-nio-8085-exec-4] ExceptionHandlerExceptionResolver - Resolved [org.springframework.security.access.AccessDeniedException: Access is denied]
[ERROR] 2021-04-25 16:57:29.561 [http-nio-8085-exec-4] [dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception
com.auth0.jwt.exceptions.JWTDecodeException: The token was expected to have 3 parts, but got 1.
	at com.auth0.jwt.TokenUtils.splitToken(TokenUtils.java:21) ~[java-jwt-3.7.0.jar:?]
	at com.auth0.jwt.JWTDecoder.<init>(JWTDecoder.java:31) ~[java-jwt-3.7.0.jar:?]
	at com.auth0.jwt.JWTDecoder.<init>(JWTDecoder.java:27) ~[java-jwt-3.7.0.jar:?]
	at com.auth0.jwt.JWT.decode(JWT.java:45) ~[java-jwt-3.7.0.jar:?]
	at com.camp.campApi.security.JwtAuthorization.doFilterInternal(JwtAuthorization.java:60) ~[classes/:?]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) ~[spring-web-5.3.3.jar:5.3.3]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336) ~[spring-security-web-5.4.2.jar:5.4.2]
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103) ~[spring-security-web-5.4.2.jar:5.4.2]
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89) ~[spring-security-web-5.4.2.jar:5.4.2]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336) ~[spring-security-web-5.4.2.jar:5.4.2]
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90) ~[spring-security-web-5.4.2.jar:5.4.2]
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75) ~[spring-security-web-5.4.2.jar:5.4.2]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) ~[spring-web-5.3.3.jar:5.3.3]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336) ~[spring-security-web-5.4.2.jar:5.4.2]
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:110) ~[spring-security-web-5.4.2.jar:5.4.2]
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:80) ~[spring-security-web-5.4.2.jar:5.4.2]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336) ~[spring-security-web-5.4.2.jar:5.4.2]
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55) ~[spring-security-web-5.4.2.jar:5.4.2]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) ~[spring-web-5.3.3.jar:5.3.3]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336) ~[spring-security-web-5.4.2.jar:5.4.2]
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:211) ~[spring-security-web-5.4.2.jar:5.4.2]
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:183) ~[spring-security-web-5.4.2.jar:5.4.2]
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358) ~[spring-web-5.3.3.jar:5.3.3]
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271) ~[spring-web-5.3.3.jar:5.3.3]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.41.jar:9.0.41]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.41.jar:9.0.41]
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100) ~[spring-web-5.3.3.jar:5.3.3]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) ~[spring-web-5.3.3.jar:5.3.3]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.41.jar:9.0.41]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.41.jar:9.0.41]
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93) ~[spring-web-5.3.3.jar:5.3.3]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) ~[spring-web-5.3.3.jar:5.3.3]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.41.jar:9.0.41]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.41.jar:9.0.41]
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201) ~[spring-web-5.3.3.jar:5.3.3]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) ~[spring-web-5.3.3.jar:5.3.3]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.41.jar:9.0.41]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.41.jar:9.0.41]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202) [tomcat-embed-core-9.0.41.jar:9.0.41]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97) [tomcat-embed-core-9.0.41.jar:9.0.41]
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542) [tomcat-embed-core-9.0.41.jar:9.0.41]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143) [tomcat-embed-core-9.0.41.jar:9.0.41]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92) [tomcat-embed-core-9.0.41.jar:9.0.41]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78) [tomcat-embed-core-9.0.41.jar:9.0.41]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343) [tomcat-embed-core-9.0.41.jar:9.0.41]
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374) [tomcat-embed-core-9.0.41.jar:9.0.41]
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65) [tomcat-embed-core-9.0.41.jar:9.0.41]
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:888) [tomcat-embed-core-9.0.41.jar:9.0.41]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1597) [tomcat-embed-core-9.0.41.jar:9.0.41]
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49) [tomcat-embed-core-9.0.41.jar:9.0.41]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128) [?:?]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628) [?:?]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61) [tomcat-embed-core-9.0.41.jar:9.0.41]
	at java.lang.Thread.run(Thread.java:835) [?:?]
[ERROR] 2021-04-25 16:57:29.690 [http-nio-8085-exec-4] JwtAuthEntryPoint - Unauthorized error. Message - Full authentication is required to access this resource
[ERROR] 2021-04-25 17:08:21.382 [http-nio-8085-exec-10] [dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception
com.auth0.jwt.exceptions.JWTDecodeException: The token was expected to have 3 parts, but got 1.
	at com.auth0.jwt.TokenUtils.splitToken(TokenUtils.java:21) ~[java-jwt-3.7.0.jar:?]
	at com.auth0.jwt.JWTDecoder.<init>(JWTDecoder.java:31) ~[java-jwt-3.7.0.jar:?]
	at com.auth0.jwt.JWTDecoder.<init>(JWTDecoder.java:27) ~[java-jwt-3.7.0.jar:?]
	at com.auth0.jwt.JWT.decode(JWT.java:45) ~[java-jwt-3.7.0.jar:?]
	at com.camp.campApi.security.JwtAuthorization.doFilterInternal(JwtAuthorization.java:60) ~[classes/:?]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) ~[spring-web-5.3.3.jar:5.3.3]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336) ~[spring-security-web-5.4.2.jar:5.4.2]
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103) ~[spring-security-web-5.4.2.jar:5.4.2]
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89) ~[spring-security-web-5.4.2.jar:5.4.2]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336) ~[spring-security-web-5.4.2.jar:5.4.2]
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90) ~[spring-security-web-5.4.2.jar:5.4.2]
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75) ~[spring-security-web-5.4.2.jar:5.4.2]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) ~[spring-web-5.3.3.jar:5.3.3]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336) ~[spring-security-web-5.4.2.jar:5.4.2]
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:110) ~[spring-security-web-5.4.2.jar:5.4.2]
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:80) ~[spring-security-web-5.4.2.jar:5.4.2]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336) ~[spring-security-web-5.4.2.jar:5.4.2]
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55) ~[spring-security-web-5.4.2.jar:5.4.2]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) ~[spring-web-5.3.3.jar:5.3.3]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336) ~[spring-security-web-5.4.2.jar:5.4.2]
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:211) ~[spring-security-web-5.4.2.jar:5.4.2]
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:183) ~[spring-security-web-5.4.2.jar:5.4.2]
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358) ~[spring-web-5.3.3.jar:5.3.3]
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271) ~[spring-web-5.3.3.jar:5.3.3]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.41.jar:9.0.41]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.41.jar:9.0.41]
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100) ~[spring-web-5.3.3.jar:5.3.3]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) ~[spring-web-5.3.3.jar:5.3.3]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.41.jar:9.0.41]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.41.jar:9.0.41]
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93) ~[spring-web-5.3.3.jar:5.3.3]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) ~[spring-web-5.3.3.jar:5.3.3]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.41.jar:9.0.41]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.41.jar:9.0.41]
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201) ~[spring-web-5.3.3.jar:5.3.3]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) ~[spring-web-5.3.3.jar:5.3.3]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.41.jar:9.0.41]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.41.jar:9.0.41]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202) [tomcat-embed-core-9.0.41.jar:9.0.41]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97) [tomcat-embed-core-9.0.41.jar:9.0.41]
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542) [tomcat-embed-core-9.0.41.jar:9.0.41]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143) [tomcat-embed-core-9.0.41.jar:9.0.41]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92) [tomcat-embed-core-9.0.41.jar:9.0.41]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78) [tomcat-embed-core-9.0.41.jar:9.0.41]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343) [tomcat-embed-core-9.0.41.jar:9.0.41]
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374) [tomcat-embed-core-9.0.41.jar:9.0.41]
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65) [tomcat-embed-core-9.0.41.jar:9.0.41]
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:888) [tomcat-embed-core-9.0.41.jar:9.0.41]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1597) [tomcat-embed-core-9.0.41.jar:9.0.41]
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49) [tomcat-embed-core-9.0.41.jar:9.0.41]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128) [?:?]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628) [?:?]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61) [tomcat-embed-core-9.0.41.jar:9.0.41]
	at java.lang.Thread.run(Thread.java:835) [?:?]
[ERROR] 2021-04-25 17:08:21.582 [http-nio-8085-exec-10] JwtAuthEntryPoint - Unauthorized error. Message - Full authentication is required to access this resource
[ERROR] 2021-04-25 17:18:49.375 [http-nio-8085-exec-5] [dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception
com.auth0.jwt.exceptions.JWTDecodeException: The token was expected to have 3 parts, but got 1.
	at com.auth0.jwt.TokenUtils.splitToken(TokenUtils.java:21) ~[java-jwt-3.7.0.jar:?]
	at com.auth0.jwt.JWTDecoder.<init>(JWTDecoder.java:31) ~[java-jwt-3.7.0.jar:?]
	at com.auth0.jwt.JWTDecoder.<init>(JWTDecoder.java:27) ~[java-jwt-3.7.0.jar:?]
	at com.auth0.jwt.JWT.decode(JWT.java:45) ~[java-jwt-3.7.0.jar:?]
	at com.camp.campApi.security.JwtAuthorization.doFilterInternal(JwtAuthorization.java:60) ~[classes/:?]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) ~[spring-web-5.3.3.jar:5.3.3]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336) ~[spring-security-web-5.4.2.jar:5.4.2]
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103) ~[spring-security-web-5.4.2.jar:5.4.2]
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89) ~[spring-security-web-5.4.2.jar:5.4.2]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336) ~[spring-security-web-5.4.2.jar:5.4.2]
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90) ~[spring-security-web-5.4.2.jar:5.4.2]
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75) ~[spring-security-web-5.4.2.jar:5.4.2]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) ~[spring-web-5.3.3.jar:5.3.3]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336) ~[spring-security-web-5.4.2.jar:5.4.2]
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:110) ~[spring-security-web-5.4.2.jar:5.4.2]
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:80) ~[spring-security-web-5.4.2.jar:5.4.2]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336) ~[spring-security-web-5.4.2.jar:5.4.2]
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55) ~[spring-security-web-5.4.2.jar:5.4.2]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) ~[spring-web-5.3.3.jar:5.3.3]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336) ~[spring-security-web-5.4.2.jar:5.4.2]
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:211) ~[spring-security-web-5.4.2.jar:5.4.2]
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:183) ~[spring-security-web-5.4.2.jar:5.4.2]
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358) ~[spring-web-5.3.3.jar:5.3.3]
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271) ~[spring-web-5.3.3.jar:5.3.3]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.41.jar:9.0.41]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.41.jar:9.0.41]
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100) ~[spring-web-5.3.3.jar:5.3.3]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) ~[spring-web-5.3.3.jar:5.3.3]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.41.jar:9.0.41]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.41.jar:9.0.41]
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93) ~[spring-web-5.3.3.jar:5.3.3]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) ~[spring-web-5.3.3.jar:5.3.3]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.41.jar:9.0.41]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.41.jar:9.0.41]
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201) ~[spring-web-5.3.3.jar:5.3.3]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) ~[spring-web-5.3.3.jar:5.3.3]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.41.jar:9.0.41]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.41.jar:9.0.41]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202) [tomcat-embed-core-9.0.41.jar:9.0.41]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97) [tomcat-embed-core-9.0.41.jar:9.0.41]
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542) [tomcat-embed-core-9.0.41.jar:9.0.41]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143) [tomcat-embed-core-9.0.41.jar:9.0.41]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92) [tomcat-embed-core-9.0.41.jar:9.0.41]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78) [tomcat-embed-core-9.0.41.jar:9.0.41]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343) [tomcat-embed-core-9.0.41.jar:9.0.41]
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374) [tomcat-embed-core-9.0.41.jar:9.0.41]
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65) [tomcat-embed-core-9.0.41.jar:9.0.41]
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:888) [tomcat-embed-core-9.0.41.jar:9.0.41]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1597) [tomcat-embed-core-9.0.41.jar:9.0.41]
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49) [tomcat-embed-core-9.0.41.jar:9.0.41]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128) [?:?]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628) [?:?]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61) [tomcat-embed-core-9.0.41.jar:9.0.41]
	at java.lang.Thread.run(Thread.java:835) [?:?]
[ERROR] 2021-04-25 17:18:49.605 [http-nio-8085-exec-5] JwtAuthEntryPoint - Unauthorized error. Message - Full authentication is required to access this resource
[ERROR] 2021-04-25 17:40:53.167 [http-nio-8085-exec-3] JwtAuthEntryPoint - Unauthorized error. Message - Full authentication is required to access this resource
[ERROR] 2021-04-25 17:47:03.901 [http-nio-8085-exec-9] [dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception
com.auth0.jwt.exceptions.JWTDecodeException: The token was expected to have 3 parts, but got 1.
	at com.auth0.jwt.TokenUtils.splitToken(TokenUtils.java:21) ~[java-jwt-3.7.0.jar:?]
	at com.auth0.jwt.JWTDecoder.<init>(JWTDecoder.java:31) ~[java-jwt-3.7.0.jar:?]
	at com.auth0.jwt.JWTDecoder.<init>(JWTDecoder.java:27) ~[java-jwt-3.7.0.jar:?]
	at com.auth0.jwt.JWT.decode(JWT.java:45) ~[java-jwt-3.7.0.jar:?]
	at com.camp.campApi.security.JwtAuthorization.doFilterInternal(JwtAuthorization.java:60) ~[classes/:?]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) ~[spring-web-5.3.3.jar:5.3.3]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336) ~[spring-security-web-5.4.2.jar:5.4.2]
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103) ~[spring-security-web-5.4.2.jar:5.4.2]
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89) ~[spring-security-web-5.4.2.jar:5.4.2]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336) ~[spring-security-web-5.4.2.jar:5.4.2]
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90) ~[spring-security-web-5.4.2.jar:5.4.2]
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75) ~[spring-security-web-5.4.2.jar:5.4.2]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) ~[spring-web-5.3.3.jar:5.3.3]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336) ~[spring-security-web-5.4.2.jar:5.4.2]
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:110) ~[spring-security-web-5.4.2.jar:5.4.2]
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:80) ~[spring-security-web-5.4.2.jar:5.4.2]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336) ~[spring-security-web-5.4.2.jar:5.4.2]
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55) ~[spring-security-web-5.4.2.jar:5.4.2]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) ~[spring-web-5.3.3.jar:5.3.3]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336) ~[spring-security-web-5.4.2.jar:5.4.2]
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:211) ~[spring-security-web-5.4.2.jar:5.4.2]
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:183) ~[spring-security-web-5.4.2.jar:5.4.2]
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358) ~[spring-web-5.3.3.jar:5.3.3]
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271) ~[spring-web-5.3.3.jar:5.3.3]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.41.jar:9.0.41]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.41.jar:9.0.41]
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100) ~[spring-web-5.3.3.jar:5.3.3]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) ~[spring-web-5.3.3.jar:5.3.3]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.41.jar:9.0.41]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.41.jar:9.0.41]
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93) ~[spring-web-5.3.3.jar:5.3.3]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) ~[spring-web-5.3.3.jar:5.3.3]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.41.jar:9.0.41]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.41.jar:9.0.41]
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201) ~[spring-web-5.3.3.jar:5.3.3]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) ~[spring-web-5.3.3.jar:5.3.3]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.41.jar:9.0.41]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.41.jar:9.0.41]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202) [tomcat-embed-core-9.0.41.jar:9.0.41]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97) [tomcat-embed-core-9.0.41.jar:9.0.41]
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542) [tomcat-embed-core-9.0.41.jar:9.0.41]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143) [tomcat-embed-core-9.0.41.jar:9.0.41]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92) [tomcat-embed-core-9.0.41.jar:9.0.41]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78) [tomcat-embed-core-9.0.41.jar:9.0.41]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343) [tomcat-embed-core-9.0.41.jar:9.0.41]
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374) [tomcat-embed-core-9.0.41.jar:9.0.41]
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65) [tomcat-embed-core-9.0.41.jar:9.0.41]
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:888) [tomcat-embed-core-9.0.41.jar:9.0.41]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1597) [tomcat-embed-core-9.0.41.jar:9.0.41]
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49) [tomcat-embed-core-9.0.41.jar:9.0.41]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128) [?:?]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628) [?:?]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61) [tomcat-embed-core-9.0.41.jar:9.0.41]
	at java.lang.Thread.run(Thread.java:835) [?:?]
[ERROR] 2021-04-25 17:47:04.031 [http-nio-8085-exec-9] JwtAuthEntryPoint - Unauthorized error. Message - Full authentication is required to access this resource
[INFO ] 2021-04-25 17:54:48.998 [main] CampApiApplication - Hello this is an info message
[ERROR] 2021-04-25 17:54:49.003 [main] CampApiApplication - Error Message Logged !!!
java.lang.NullPointerException: NullError
	at com.camp.campApi.CampApiApplication.main(CampApiApplication.java:21) [classes/:?]
[INFO ] 2021-04-25 17:54:49.907 [restartedMain] CampApiApplication - Hello this is an info message
[ERROR] 2021-04-25 17:54:49.908 [restartedMain] CampApiApplication - Error Message Logged !!!
java.lang.NullPointerException: NullError
	at com.camp.campApi.CampApiApplication.main(CampApiApplication.java:21) [classes/:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:567) ~[?:?]
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49) [spring-boot-devtools-2.4.2.jar:2.4.2]
[INFO ] 2021-04-25 17:54:50.420 [restartedMain] CampApiApplication - Starting CampApiApplication using Java 12.0.1 on network4 with PID 4040 (J:\jav\campApi\target\classes started by m.bandpey in J:\jav\campApi)
[INFO ] 2021-04-25 17:54:50.424 [restartedMain] CampApiApplication - No active profile set, falling back to default profiles: default
[INFO ] 2021-04-25 17:54:50.474 [restartedMain] DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
[INFO ] 2021-04-25 17:54:50.474 [restartedMain] DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
[INFO ] 2021-04-25 17:54:51.271 [restartedMain] RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
[INFO ] 2021-04-25 17:54:51.271 [restartedMain] RepositoryConfigurationDelegate - Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
[INFO ] 2021-04-25 17:54:51.315 [restartedMain] RepositoryConfigurationExtensionSupport - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.camp.campApi.repository.ChildPlaceRepo. If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
[INFO ] 2021-04-25 17:54:51.318 [restartedMain] RepositoryConfigurationExtensionSupport - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.camp.campApi.repository.PlaceRepo. If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
[INFO ] 2021-04-25 17:54:51.321 [restartedMain] RepositoryConfigurationExtensionSupport - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.camp.campApi.repository.ResponseRepo. If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
[INFO ] 2021-04-25 17:54:51.322 [restartedMain] RepositoryConfigurationExtensionSupport - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.camp.campApi.repository.RoleRepo. If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
[INFO ] 2021-04-25 17:54:51.324 [restartedMain] RepositoryConfigurationExtensionSupport - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.camp.campApi.repository.UserRepo. If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
[INFO ] 2021-04-25 17:54:51.325 [restartedMain] RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 47 ms. Found 0 JDBC repository interfaces.
[INFO ] 2021-04-25 17:54:51.335 [restartedMain] RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
[INFO ] 2021-04-25 17:54:51.335 [restartedMain] RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
[INFO ] 2021-04-25 17:54:51.396 [restartedMain] RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 60 ms. Found 5 JPA repository interfaces.
[INFO ] 2021-04-25 17:54:51.704 [restartedMain] PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@641cc1a4' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[INFO ] 2021-04-25 17:54:51.714 [restartedMain] PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[INFO ] 2021-04-25 17:54:51.993 [restartedMain] TomcatWebServer - Tomcat initialized with port(s): 8085 (http)
[INFO ] 2021-04-25 17:54:52.001 [restartedMain] Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8085"]
[INFO ] 2021-04-25 17:54:52.002 [restartedMain] StandardService - Starting service [Tomcat]
[INFO ] 2021-04-25 17:54:52.003 [restartedMain] StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.41]
[INFO ] 2021-04-25 17:54:52.209 [restartedMain] [/] - Initializing Spring embedded WebApplicationContext
[INFO ] 2021-04-25 17:54:52.209 [restartedMain] ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1725 ms
[INFO ] 2021-04-25 17:54:52.395 [restartedMain] LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
[INFO ] 2021-04-25 17:54:52.443 [restartedMain] Version - HHH000412: Hibernate ORM core version 5.4.27.Final
[INFO ] 2021-04-25 17:54:52.552 [restartedMain] Version - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
[INFO ] 2021-04-25 17:54:52.655 [restartedMain] HikariDataSource - HikariPool-1 - Starting...
[INFO ] 2021-04-25 17:54:52.728 [restartedMain] HikariDataSource - HikariPool-1 - Start completed.
[INFO ] 2021-04-25 17:54:52.739 [restartedMain] Dialect - HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
[INFO ] 2021-04-25 17:54:53.637 [restartedMain] JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[INFO ] 2021-04-25 17:54:53.637 [restartedMain] LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
[INFO ] 2021-04-25 17:54:53.685 [restartedMain] OptionalLiveReloadServer - LiveReload server is running on port 35729
[WARN ] 2021-04-25 17:54:54.382 [restartedMain] JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
[INFO ] 2021-04-25 17:54:54.652 [restartedMain] DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@250adf11, org.springframework.security.web.context.SecurityContextPersistenceFilter@34b2eca5, org.springframework.security.web.header.HeaderWriterFilter@5e890388, org.springframework.security.web.authentication.logout.LogoutFilter@2e6c72da, com.camp.campApi.security.JwtAuthorization@638cfc56, com.camp.campApi.security.JwtAuthentication@3b14a600, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@7a835faf, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@16461ab2, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@207ee494, org.springframework.security.web.session.SessionManagementFilter@3aa2f015, org.springframework.security.web.access.ExceptionTranslationFilter@5aac2523, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@3c57e138]
[INFO ] 2021-04-25 17:54:54.728 [restartedMain] ThreadPoolTaskExecutor - Initializing ExecutorService 'applicationTaskExecutor'
[INFO ] 2021-04-25 17:54:55.137 [restartedMain] Http11NioProtocol - Starting ProtocolHandler ["http-nio-8085"]
[INFO ] 2021-04-25 17:54:55.297 [restartedMain] TomcatWebServer - Tomcat started on port(s): 8085 (http) with context path ''
[INFO ] 2021-04-25 17:54:55.312 [restartedMain] CampApiApplication - Started CampApiApplication in 5.299 seconds (JVM running for 9.617)
[INFO ] 2021-04-25 17:55:06.454 [http-nio-8085-exec-2] [/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
[INFO ] 2021-04-25 17:55:06.454 [http-nio-8085-exec-2] DispatcherServlet - Initializing Servlet 'dispatcherServlet'
[INFO ] 2021-04-25 17:55:06.455 [http-nio-8085-exec-2] DispatcherServlet - Completed initialization in 1 ms
[WARN ] 2021-04-25 17:55:06.680 [http-nio-8085-exec-2] ExceptionHandlerExceptionResolver - Resolved [org.springframework.web.bind.MissingServletRequestParameterException: Required String parameter 'placeName' is not present]
[WARN ] 2021-04-25 17:55:36.274 [http-nio-8085-exec-4] ExceptionHandlerExceptionResolver - Resolved [org.springframework.web.bind.MissingServletRequestParameterException: Required String parameter 'placeName' is not present]
[INFO ] 2021-04-25 17:56:37.002 [main] CampApiApplication - Hello this is an info message
[ERROR] 2021-04-25 17:56:37.002 [main] CampApiApplication - Error Message Logged !!!
java.lang.NullPointerException: NullError
	at com.camp.campApi.CampApiApplication.main(CampApiApplication.java:21) [classes/:?]
[INFO ] 2021-04-25 17:56:37.867 [restartedMain] CampApiApplication - Hello this is an info message
[ERROR] 2021-04-25 17:56:37.867 [restartedMain] CampApiApplication - Error Message Logged !!!
java.lang.NullPointerException: NullError
	at com.camp.campApi.CampApiApplication.main(CampApiApplication.java:21) [classes/:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:567) ~[?:?]
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49) [spring-boot-devtools-2.4.2.jar:2.4.2]
[INFO ] 2021-04-25 17:56:38.331 [restartedMain] CampApiApplication - Starting CampApiApplication using Java 12.0.1 on network4 with PID 23076 (J:\jav\campApi\target\classes started by m.bandpey in J:\jav\campApi)
[INFO ] 2021-04-25 17:56:38.331 [restartedMain] CampApiApplication - No active profile set, falling back to default profiles: default
[INFO ] 2021-04-25 17:56:38.391 [restartedMain] DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
[INFO ] 2021-04-25 17:56:38.391 [restartedMain] DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
[INFO ] 2021-04-25 17:56:39.131 [restartedMain] RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
[INFO ] 2021-04-25 17:56:39.131 [restartedMain] RepositoryConfigurationDelegate - Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
[INFO ] 2021-04-25 17:56:39.191 [restartedMain] RepositoryConfigurationExtensionSupport - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.camp.campApi.repository.ChildPlaceRepo. If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
[INFO ] 2021-04-25 17:56:39.191 [restartedMain] RepositoryConfigurationExtensionSupport - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.camp.campApi.repository.PlaceRepo. If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
[INFO ] 2021-04-25 17:56:39.191 [restartedMain] RepositoryConfigurationExtensionSupport - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.camp.campApi.repository.ResponseRepo. If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
[INFO ] 2021-04-25 17:56:39.201 [restartedMain] RepositoryConfigurationExtensionSupport - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.camp.campApi.repository.RoleRepo. If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
[INFO ] 2021-04-25 17:56:39.201 [restartedMain] RepositoryConfigurationExtensionSupport - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.camp.campApi.repository.UserRepo. If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
[INFO ] 2021-04-25 17:56:39.201 [restartedMain] RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 63 ms. Found 0 JDBC repository interfaces.
[INFO ] 2021-04-25 17:56:39.211 [restartedMain] RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
[INFO ] 2021-04-25 17:56:39.211 [restartedMain] RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
[INFO ] 2021-04-25 17:56:39.311 [restartedMain] RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 92 ms. Found 5 JPA repository interfaces.
[INFO ] 2021-04-25 17:56:39.601 [restartedMain] PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@68a75a18' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[INFO ] 2021-04-25 17:56:39.611 [restartedMain] PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[INFO ] 2021-04-25 17:56:39.901 [restartedMain] TomcatWebServer - Tomcat initialized with port(s): 8085 (http)
[INFO ] 2021-04-25 17:56:39.911 [restartedMain] Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8085"]
[INFO ] 2021-04-25 17:56:39.911 [restartedMain] StandardService - Starting service [Tomcat]
[INFO ] 2021-04-25 17:56:39.911 [restartedMain] StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.41]
[INFO ] 2021-04-25 17:56:40.081 [restartedMain] [/] - Initializing Spring embedded WebApplicationContext
[INFO ] 2021-04-25 17:56:40.081 [restartedMain] ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1690 ms
[INFO ] 2021-04-25 17:56:40.257 [restartedMain] LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
[INFO ] 2021-04-25 17:56:40.288 [restartedMain] Version - HHH000412: Hibernate ORM core version 5.4.27.Final
[INFO ] 2021-04-25 17:56:40.373 [restartedMain] Version - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
[INFO ] 2021-04-25 17:56:40.473 [restartedMain] HikariDataSource - HikariPool-1 - Starting...
[INFO ] 2021-04-25 17:56:40.542 [restartedMain] HikariDataSource - HikariPool-1 - Start completed.
[INFO ] 2021-04-25 17:56:40.558 [restartedMain] Dialect - HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
[INFO ] 2021-04-25 17:56:41.463 [restartedMain] JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[INFO ] 2021-04-25 17:56:41.473 [restartedMain] LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
[INFO ] 2021-04-25 17:56:41.573 [restartedMain] OptionalLiveReloadServer - LiveReload server is running on port 35729
[WARN ] 2021-04-25 17:56:42.267 [restartedMain] JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
[INFO ] 2021-04-25 17:56:42.472 [restartedMain] DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@ec91276, org.springframework.security.web.context.SecurityContextPersistenceFilter@6f500936, org.springframework.security.web.header.HeaderWriterFilter@1273da70, org.springframework.security.web.authentication.logout.LogoutFilter@445eba82, com.camp.campApi.security.JwtAuthorization@12b16334, com.camp.campApi.security.JwtAuthentication@7939bfb8, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@728a05ea, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@646fde79, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@648bc14, org.springframework.security.web.session.SessionManagementFilter@7ff5e19f, org.springframework.security.web.access.ExceptionTranslationFilter@7351995, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@621ca18d]
[INFO ] 2021-04-25 17:56:42.542 [restartedMain] ThreadPoolTaskExecutor - Initializing ExecutorService 'applicationTaskExecutor'
[INFO ] 2021-04-25 17:56:42.968 [restartedMain] Http11NioProtocol - Starting ProtocolHandler ["http-nio-8085"]
[INFO ] 2021-04-25 17:56:43.156 [restartedMain] TomcatWebServer - Tomcat started on port(s): 8085 (http) with context path ''
[INFO ] 2021-04-25 17:56:43.166 [restartedMain] CampApiApplication - Started CampApiApplication in 5.213 seconds (JVM running for 8.971)
[INFO ] 2021-04-25 17:56:53.112 [http-nio-8085-exec-1] [/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
[INFO ] 2021-04-25 17:56:53.112 [http-nio-8085-exec-1] DispatcherServlet - Initializing Servlet 'dispatcherServlet'
[INFO ] 2021-04-25 17:56:53.114 [http-nio-8085-exec-1] DispatcherServlet - Completed initialization in 2 ms
[WARN ] 2021-04-25 17:56:53.480 [http-nio-8085-exec-1] SqlExceptionHelper - SQL Error: 1062, SQLState: 23000
[ERROR] 2021-04-25 17:56:53.648 [http-nio-8085-exec-1] SqlExceptionHelper - Duplicate entry 'Kamarpesht' for key 'child_place.UK_4tyjoe87fa27ybgul30gk0xuy'
[WARN ] 2021-04-25 17:56:54.073 [http-nio-8085-exec-1] ExceptionHandlerExceptionResolver - Resolved [org.springframework.dao.DataIntegrityViolationException: could not execute statement; SQL [n/a]; constraint [child_place.UK_4tyjoe87fa27ybgul30gk0xuy]; nested exception is org.hibernate.exception.ConstraintViolationException: could not execute statement]
[ERROR] 2021-04-25 18:56:52.527 [http-nio-8085-exec-1] [dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception
com.auth0.jwt.exceptions.JWTDecodeException: The token was expected to have 3 parts, but got 1.
	at com.auth0.jwt.TokenUtils.splitToken(TokenUtils.java:21) ~[java-jwt-3.7.0.jar:?]
	at com.auth0.jwt.JWTDecoder.<init>(JWTDecoder.java:31) ~[java-jwt-3.7.0.jar:?]
	at com.auth0.jwt.JWTDecoder.<init>(JWTDecoder.java:27) ~[java-jwt-3.7.0.jar:?]
	at com.auth0.jwt.JWT.decode(JWT.java:45) ~[java-jwt-3.7.0.jar:?]
	at com.camp.campApi.security.JwtAuthorization.doFilterInternal(JwtAuthorization.java:60) ~[classes/:?]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) ~[spring-web-5.3.3.jar:5.3.3]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336) ~[spring-security-web-5.4.2.jar:5.4.2]
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103) ~[spring-security-web-5.4.2.jar:5.4.2]
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89) ~[spring-security-web-5.4.2.jar:5.4.2]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336) ~[spring-security-web-5.4.2.jar:5.4.2]
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90) ~[spring-security-web-5.4.2.jar:5.4.2]
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75) ~[spring-security-web-5.4.2.jar:5.4.2]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) ~[spring-web-5.3.3.jar:5.3.3]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336) ~[spring-security-web-5.4.2.jar:5.4.2]
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:110) ~[spring-security-web-5.4.2.jar:5.4.2]
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:80) ~[spring-security-web-5.4.2.jar:5.4.2]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336) ~[spring-security-web-5.4.2.jar:5.4.2]
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55) ~[spring-security-web-5.4.2.jar:5.4.2]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) ~[spring-web-5.3.3.jar:5.3.3]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336) ~[spring-security-web-5.4.2.jar:5.4.2]
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:211) ~[spring-security-web-5.4.2.jar:5.4.2]
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:183) ~[spring-security-web-5.4.2.jar:5.4.2]
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358) ~[spring-web-5.3.3.jar:5.3.3]
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271) ~[spring-web-5.3.3.jar:5.3.3]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.41.jar:9.0.41]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.41.jar:9.0.41]
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100) ~[spring-web-5.3.3.jar:5.3.3]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) ~[spring-web-5.3.3.jar:5.3.3]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.41.jar:9.0.41]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.41.jar:9.0.41]
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93) ~[spring-web-5.3.3.jar:5.3.3]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) ~[spring-web-5.3.3.jar:5.3.3]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.41.jar:9.0.41]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.41.jar:9.0.41]
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201) ~[spring-web-5.3.3.jar:5.3.3]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) ~[spring-web-5.3.3.jar:5.3.3]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.41.jar:9.0.41]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.41.jar:9.0.41]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202) [tomcat-embed-core-9.0.41.jar:9.0.41]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97) [tomcat-embed-core-9.0.41.jar:9.0.41]
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542) [tomcat-embed-core-9.0.41.jar:9.0.41]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143) [tomcat-embed-core-9.0.41.jar:9.0.41]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92) [tomcat-embed-core-9.0.41.jar:9.0.41]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78) [tomcat-embed-core-9.0.41.jar:9.0.41]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343) [tomcat-embed-core-9.0.41.jar:9.0.41]
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374) [tomcat-embed-core-9.0.41.jar:9.0.41]
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65) [tomcat-embed-core-9.0.41.jar:9.0.41]
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:888) [tomcat-embed-core-9.0.41.jar:9.0.41]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1597) [tomcat-embed-core-9.0.41.jar:9.0.41]
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49) [tomcat-embed-core-9.0.41.jar:9.0.41]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128) [?:?]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628) [?:?]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61) [tomcat-embed-core-9.0.41.jar:9.0.41]
	at java.lang.Thread.run(Thread.java:835) [?:?]
[ERROR] 2021-04-25 18:56:52.727 [http-nio-8085-exec-1] JwtAuthEntryPoint - Unauthorized error. Message - Full authentication is required to access this resource
[ERROR] 2021-04-25 19:06:43.000 [http-nio-8085-exec-9] JwtAuthEntryPoint - Unauthorized error. Message - Full authentication is required to access this resource
[INFO ] 2021-04-25 19:08:24.039 [main] CampApiApplication - Hello this is an info message
[ERROR] 2021-04-25 19:08:24.041 [main] CampApiApplication - Error Message Logged !!!
java.lang.NullPointerException: NullError
	at com.camp.campApi.CampApiApplication.main(CampApiApplication.java:21) [classes/:?]
[INFO ] 2021-04-25 19:08:24.936 [restartedMain] CampApiApplication - Hello this is an info message
[ERROR] 2021-04-25 19:08:24.936 [restartedMain] CampApiApplication - Error Message Logged !!!
java.lang.NullPointerException: NullError
	at com.camp.campApi.CampApiApplication.main(CampApiApplication.java:21) [classes/:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:567) ~[?:?]
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49) [spring-boot-devtools-2.4.2.jar:2.4.2]
[INFO ] 2021-04-25 19:08:25.542 [restartedMain] CampApiApplication - Starting CampApiApplication using Java 12.0.1 on network4 with PID 19084 (J:\jav\campApi\target\classes started by m.bandpey in J:\jav\campApi)
[INFO ] 2021-04-25 19:08:25.542 [restartedMain] CampApiApplication - No active profile set, falling back to default profiles: default
[INFO ] 2021-04-25 19:08:25.645 [restartedMain] DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
[INFO ] 2021-04-25 19:08:25.645 [restartedMain] DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
[INFO ] 2021-04-25 19:08:26.518 [restartedMain] RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
[INFO ] 2021-04-25 19:08:26.518 [restartedMain] RepositoryConfigurationDelegate - Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
[INFO ] 2021-04-25 19:08:26.548 [restartedMain] RepositoryConfigurationExtensionSupport - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.camp.campApi.repository.ChildPlaceRepo. If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
[INFO ] 2021-04-25 19:08:26.548 [restartedMain] RepositoryConfigurationExtensionSupport - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.camp.campApi.repository.PlaceRepo. If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
[INFO ] 2021-04-25 19:08:26.548 [restartedMain] RepositoryConfigurationExtensionSupport - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.camp.campApi.repository.ResponseRepo. If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
[INFO ] 2021-04-25 19:08:26.558 [restartedMain] RepositoryConfigurationExtensionSupport - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.camp.campApi.repository.RoleRepo. If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
[INFO ] 2021-04-25 19:08:26.558 [restartedMain] RepositoryConfigurationExtensionSupport - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.camp.campApi.repository.UserRepo. If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
[INFO ] 2021-04-25 19:08:26.558 [restartedMain] RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 40 ms. Found 0 JDBC repository interfaces.
[INFO ] 2021-04-25 19:08:26.568 [restartedMain] RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
[INFO ] 2021-04-25 19:08:26.568 [restartedMain] RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
[INFO ] 2021-04-25 19:08:26.628 [restartedMain] RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 56 ms. Found 5 JPA repository interfaces.
[INFO ] 2021-04-25 19:08:26.978 [restartedMain] PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@427ecdcf' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[INFO ] 2021-04-25 19:08:26.978 [restartedMain] PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[INFO ] 2021-04-25 19:08:27.258 [restartedMain] TomcatWebServer - Tomcat initialized with port(s): 8085 (http)
[INFO ] 2021-04-25 19:08:27.258 [restartedMain] Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8085"]
[INFO ] 2021-04-25 19:08:27.258 [restartedMain] StandardService - Starting service [Tomcat]
[INFO ] 2021-04-25 19:08:27.258 [restartedMain] StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.41]
[INFO ] 2021-04-25 19:08:27.438 [restartedMain] [/] - Initializing Spring embedded WebApplicationContext
[INFO ] 2021-04-25 19:08:27.438 [restartedMain] ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1791 ms
[INFO ] 2021-04-25 19:08:27.609 [restartedMain] LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
[INFO ] 2021-04-25 19:08:27.656 [restartedMain] Version - HHH000412: Hibernate ORM core version 5.4.27.Final
[INFO ] 2021-04-25 19:08:27.769 [restartedMain] Version - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
[INFO ] 2021-04-25 19:08:27.853 [restartedMain] HikariDataSource - HikariPool-1 - Starting...
[INFO ] 2021-04-25 19:08:27.923 [restartedMain] HikariDataSource - HikariPool-1 - Start completed.
[INFO ] 2021-04-25 19:08:27.938 [restartedMain] Dialect - HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
[INFO ] 2021-04-25 19:08:28.863 [restartedMain] JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[INFO ] 2021-04-25 19:08:28.873 [restartedMain] LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
[INFO ] 2021-04-25 19:08:28.913 [restartedMain] OptionalLiveReloadServer - LiveReload server is running on port 35729
[WARN ] 2021-04-25 19:08:29.616 [restartedMain] JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
[INFO ] 2021-04-25 19:08:29.995 [restartedMain] DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@1f9e21d1, org.springframework.security.web.context.SecurityContextPersistenceFilter@3be1a098, org.springframework.security.web.header.HeaderWriterFilter@7d0f87b4, org.springframework.security.web.authentication.logout.LogoutFilter@6856e389, com.camp.campApi.security.JwtAuthorization@1714a698, com.camp.campApi.security.JwtAuthentication@7befb54a, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@2df722a9, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@6dcab12d, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@4cdc9633, org.springframework.security.web.session.SessionManagementFilter@530e736c, org.springframework.security.web.access.ExceptionTranslationFilter@4d18fe32, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@1ac797c2]
[INFO ] 2021-04-25 19:08:30.076 [restartedMain] ThreadPoolTaskExecutor - Initializing ExecutorService 'applicationTaskExecutor'
[INFO ] 2021-04-25 19:08:30.452 [restartedMain] Http11NioProtocol - Starting ProtocolHandler ["http-nio-8085"]
[INFO ] 2021-04-25 19:08:30.622 [restartedMain] TomcatWebServer - Tomcat started on port(s): 8085 (http) with context path ''
[INFO ] 2021-04-25 19:08:30.642 [restartedMain] CampApiApplication - Started CampApiApplication in 5.607 seconds (JVM running for 9.509)
[INFO ] 2021-04-25 19:09:34.452 [http-nio-8085-exec-1] [/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
[INFO ] 2021-04-25 19:09:34.452 [http-nio-8085-exec-1] DispatcherServlet - Initializing Servlet 'dispatcherServlet'
[INFO ] 2021-04-25 19:09:34.462 [http-nio-8085-exec-1] DispatcherServlet - Completed initialization in 10 ms
[ERROR] 2021-04-25 19:10:37.181 [http-nio-8085-exec-3] JwtAuthEntryPoint - Unauthorized error. Message - Full authentication is required to access this resource
[INFO ] 2021-04-25 19:15:00.295 [main] CampApiApplication - Hello this is an info message
[ERROR] 2021-04-25 19:15:00.295 [main] CampApiApplication - Error Message Logged !!!
java.lang.NullPointerException: NullError
	at com.camp.campApi.CampApiApplication.main(CampApiApplication.java:21) [classes/:?]
[INFO ] 2021-04-25 19:15:01.295 [restartedMain] CampApiApplication - Hello this is an info message
[ERROR] 2021-04-25 19:15:01.295 [restartedMain] CampApiApplication - Error Message Logged !!!
java.lang.NullPointerException: NullError
	at com.camp.campApi.CampApiApplication.main(CampApiApplication.java:21) [classes/:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:567) ~[?:?]
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49) [spring-boot-devtools-2.4.2.jar:2.4.2]
[INFO ] 2021-04-25 19:15:01.823 [restartedMain] CampApiApplication - Starting CampApiApplication using Java 12.0.1 on network4 with PID 17064 (J:\jav\campApi\target\classes started by m.bandpey in J:\jav\campApi)
[INFO ] 2021-04-25 19:15:01.823 [restartedMain] CampApiApplication - No active profile set, falling back to default profiles: default
[INFO ] 2021-04-25 19:15:01.883 [restartedMain] DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
[INFO ] 2021-04-25 19:15:01.883 [restartedMain] DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
[INFO ] 2021-04-25 19:15:02.663 [restartedMain] RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
[INFO ] 2021-04-25 19:15:02.663 [restartedMain] RepositoryConfigurationDelegate - Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
[INFO ] 2021-04-25 19:15:02.703 [restartedMain] RepositoryConfigurationExtensionSupport - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.camp.campApi.repository.ChildPlaceRepo. If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
[INFO ] 2021-04-25 19:15:02.703 [restartedMain] RepositoryConfigurationExtensionSupport - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.camp.campApi.repository.PlaceRepo. If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
[INFO ] 2021-04-25 19:15:02.713 [restartedMain] RepositoryConfigurationExtensionSupport - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.camp.campApi.repository.ResponseRepo. If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
[INFO ] 2021-04-25 19:15:02.713 [restartedMain] RepositoryConfigurationExtensionSupport - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.camp.campApi.repository.RoleRepo. If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
[INFO ] 2021-04-25 19:15:02.713 [restartedMain] RepositoryConfigurationExtensionSupport - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.camp.campApi.repository.UserRepo. If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
[INFO ] 2021-04-25 19:15:02.713 [restartedMain] RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 44 ms. Found 0 JDBC repository interfaces.
[INFO ] 2021-04-25 19:15:02.723 [restartedMain] RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
[INFO ] 2021-04-25 19:15:02.723 [restartedMain] RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
[INFO ] 2021-04-25 19:15:02.763 [restartedMain] RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 41 ms. Found 5 JPA repository interfaces.
[INFO ] 2021-04-25 19:15:03.083 [restartedMain] PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@43242f03' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[INFO ] 2021-04-25 19:15:03.093 [restartedMain] PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[INFO ] 2021-04-25 19:15:03.363 [restartedMain] TomcatWebServer - Tomcat initialized with port(s): 8085 (http)
[INFO ] 2021-04-25 19:15:03.373 [restartedMain] Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8085"]
[INFO ] 2021-04-25 19:15:03.373 [restartedMain] StandardService - Starting service [Tomcat]
[INFO ] 2021-04-25 19:15:03.383 [restartedMain] StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.41]
[INFO ] 2021-04-25 19:15:03.543 [restartedMain] [/] - Initializing Spring embedded WebApplicationContext
[INFO ] 2021-04-25 19:15:03.543 [restartedMain] ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1660 ms
[INFO ] 2021-04-25 19:15:03.733 [restartedMain] LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
[INFO ] 2021-04-25 19:15:03.773 [restartedMain] Version - HHH000412: Hibernate ORM core version 5.4.27.Final
[INFO ] 2021-04-25 19:15:03.863 [restartedMain] Version - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
[INFO ] 2021-04-25 19:15:03.953 [restartedMain] HikariDataSource - HikariPool-1 - Starting...
[INFO ] 2021-04-25 19:15:04.023 [restartedMain] HikariDataSource - HikariPool-1 - Start completed.
[INFO ] 2021-04-25 19:15:04.033 [restartedMain] Dialect - HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
[INFO ] 2021-04-25 19:15:05.044 [restartedMain] JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[INFO ] 2021-04-25 19:15:05.054 [restartedMain] LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
[INFO ] 2021-04-25 19:15:05.125 [restartedMain] OptionalLiveReloadServer - LiveReload server is running on port 35729
[WARN ] 2021-04-25 19:15:05.868 [restartedMain] JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
[INFO ] 2021-04-25 19:15:06.103 [restartedMain] DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@7a9a7c57, org.springframework.security.web.context.SecurityContextPersistenceFilter@341c789b, org.springframework.security.web.header.HeaderWriterFilter@44552dd4, org.springframework.security.web.authentication.logout.LogoutFilter@77f3b591, com.camp.campApi.security.JwtAuthorization@4857b910, com.camp.campApi.security.JwtAuthentication@1f2e1929, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@2bb9b3cc, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@7ceb7b28, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@47b7aa53, org.springframework.security.web.session.SessionManagementFilter@1c64f214, org.springframework.security.web.access.ExceptionTranslationFilter@21c4d213, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@5fd5aeee]
[INFO ] 2021-04-25 19:15:06.168 [restartedMain] ThreadPoolTaskExecutor - Initializing ExecutorService 'applicationTaskExecutor'
[INFO ] 2021-04-25 19:15:06.661 [restartedMain] Http11NioProtocol - Starting ProtocolHandler ["http-nio-8085"]
[INFO ] 2021-04-25 19:15:06.874 [restartedMain] TomcatWebServer - Tomcat started on port(s): 8085 (http) with context path ''
[INFO ] 2021-04-25 19:15:06.884 [restartedMain] CampApiApplication - Started CampApiApplication in 5.476 seconds (JVM running for 9.453)
[INFO ] 2021-04-25 19:15:16.534 [http-nio-8085-exec-10] [/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
[INFO ] 2021-04-25 19:15:16.534 [http-nio-8085-exec-10] DispatcherServlet - Initializing Servlet 'dispatcherServlet'
[INFO ] 2021-04-25 19:15:16.534 [http-nio-8085-exec-10] DispatcherServlet - Completed initialization in 0 ms
[ERROR] 2021-04-25 19:15:38.740 [http-nio-8085-exec-7] JwtAuthEntryPoint - Unauthorized error. Message - Full authentication is required to access this resource
[INFO ] 2021-04-25 19:23:01.950 [main] CampApiApplication - Hello this is an info message
[ERROR] 2021-04-25 19:23:01.950 [main] CampApiApplication - Error Message Logged !!!
java.lang.NullPointerException: NullError
	at com.camp.campApi.CampApiApplication.main(CampApiApplication.java:21) [classes/:?]
[INFO ] 2021-04-25 19:23:02.993 [restartedMain] CampApiApplication - Hello this is an info message
[ERROR] 2021-04-25 19:23:02.993 [restartedMain] CampApiApplication - Error Message Logged !!!
java.lang.NullPointerException: NullError
	at com.camp.campApi.CampApiApplication.main(CampApiApplication.java:21) [classes/:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:567) ~[?:?]
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49) [spring-boot-devtools-2.4.2.jar:2.4.2]
[INFO ] 2021-04-25 19:23:03.514 [restartedMain] CampApiApplication - Starting CampApiApplication using Java 12.0.1 on network4 with PID 12400 (J:\jav\campApi\target\classes started by m.bandpey in J:\jav\campApi)
[INFO ] 2021-04-25 19:23:03.514 [restartedMain] CampApiApplication - No active profile set, falling back to default profiles: default
[INFO ] 2021-04-25 19:23:03.567 [restartedMain] DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
[INFO ] 2021-04-25 19:23:03.567 [restartedMain] DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
[INFO ] 2021-04-25 19:23:04.406 [restartedMain] RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
[INFO ] 2021-04-25 19:23:04.406 [restartedMain] RepositoryConfigurationDelegate - Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
[INFO ] 2021-04-25 19:23:04.436 [restartedMain] RepositoryConfigurationExtensionSupport - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.camp.campApi.repository.ChildPlaceRepo. If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
[INFO ] 2021-04-25 19:23:04.436 [restartedMain] RepositoryConfigurationExtensionSupport - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.camp.campApi.repository.PlaceRepo. If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
[INFO ] 2021-04-25 19:23:04.446 [restartedMain] RepositoryConfigurationExtensionSupport - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.camp.campApi.repository.ResponseRepo. If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
[INFO ] 2021-04-25 19:23:04.446 [restartedMain] RepositoryConfigurationExtensionSupport - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.camp.campApi.repository.RoleRepo. If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
[INFO ] 2021-04-25 19:23:04.446 [restartedMain] RepositoryConfigurationExtensionSupport - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.camp.campApi.repository.UserRepo. If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
[INFO ] 2021-04-25 19:23:04.446 [restartedMain] RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 43 ms. Found 0 JDBC repository interfaces.
[INFO ] 2021-04-25 19:23:04.456 [restartedMain] RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
[INFO ] 2021-04-25 19:23:04.456 [restartedMain] RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
[INFO ] 2021-04-25 19:23:04.506 [restartedMain] RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 46 ms. Found 5 JPA repository interfaces.
[INFO ] 2021-04-25 19:23:04.846 [restartedMain] PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@70497476' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[INFO ] 2021-04-25 19:23:04.846 [restartedMain] PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[INFO ] 2021-04-25 19:23:05.106 [restartedMain] TomcatWebServer - Tomcat initialized with port(s): 8085 (http)
[INFO ] 2021-04-25 19:23:05.116 [restartedMain] Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8085"]
[INFO ] 2021-04-25 19:23:05.116 [restartedMain] StandardService - Starting service [Tomcat]
[INFO ] 2021-04-25 19:23:05.116 [restartedMain] StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.41]
[INFO ] 2021-04-25 19:23:05.296 [restartedMain] [/] - Initializing Spring embedded WebApplicationContext
[INFO ] 2021-04-25 19:23:05.296 [restartedMain] ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1729 ms
[INFO ] 2021-04-25 19:23:05.456 [restartedMain] LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
[INFO ] 2021-04-25 19:23:05.506 [restartedMain] Version - HHH000412: Hibernate ORM core version 5.4.27.Final
[INFO ] 2021-04-25 19:23:05.606 [restartedMain] Version - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
[INFO ] 2021-04-25 19:23:05.708 [restartedMain] HikariDataSource - HikariPool-1 - Starting...
[INFO ] 2021-04-25 19:23:05.778 [restartedMain] HikariDataSource - HikariPool-1 - Start completed.
[INFO ] 2021-04-25 19:23:05.793 [restartedMain] Dialect - HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
[INFO ] 2021-04-25 19:23:06.661 [restartedMain] JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[INFO ] 2021-04-25 19:23:06.672 [restartedMain] LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
[INFO ] 2021-04-25 19:23:06.716 [restartedMain] OptionalLiveReloadServer - LiveReload server is running on port 35729
[WARN ] 2021-04-25 19:23:07.421 [restartedMain] JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
[INFO ] 2021-04-25 19:23:07.685 [restartedMain] DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@5c778701, org.springframework.security.web.context.SecurityContextPersistenceFilter@36afe15b, org.springframework.security.web.header.HeaderWriterFilter@672ebe41, org.springframework.security.web.authentication.logout.LogoutFilter@4df7f256, com.camp.campApi.security.JwtAuthorization@5a3a40a9, com.camp.campApi.security.JwtAuthentication@5339ea85, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@667c8eaa, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@172976b6, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@5721f6f9, org.springframework.security.web.session.SessionManagementFilter@535c70b2, org.springframework.security.web.access.ExceptionTranslationFilter@2f5cb2a7, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@1850966f]
[INFO ] 2021-04-25 19:23:07.751 [restartedMain] ThreadPoolTaskExecutor - Initializing ExecutorService 'applicationTaskExecutor'
[INFO ] 2021-04-25 19:23:08.136 [restartedMain] Http11NioProtocol - Starting ProtocolHandler ["http-nio-8085"]
[INFO ] 2021-04-25 19:23:08.279 [restartedMain] TomcatWebServer - Tomcat started on port(s): 8085 (http) with context path ''
[INFO ] 2021-04-25 19:23:08.290 [restartedMain] CampApiApplication - Started CampApiApplication in 5.157 seconds (JVM running for 9.228)
[INFO ] 2021-04-25 19:24:03.914 [http-nio-8085-exec-1] [/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
[INFO ] 2021-04-25 19:24:03.914 [http-nio-8085-exec-1] DispatcherServlet - Initializing Servlet 'dispatcherServlet'
[INFO ] 2021-04-25 19:24:03.914 [http-nio-8085-exec-1] DispatcherServlet - Completed initialization in 0 ms
[INFO ] 2021-04-25 19:29:51.564 [main] CampApiApplication - Hello this is an info message
[ERROR] 2021-04-25 19:29:51.564 [main] CampApiApplication - Error Message Logged !!!
java.lang.NullPointerException: NullError
	at com.camp.campApi.CampApiApplication.main(CampApiApplication.java:21) [classes/:?]
[INFO ] 2021-04-25 19:29:52.484 [restartedMain] CampApiApplication - Hello this is an info message
[ERROR] 2021-04-25 19:29:52.484 [restartedMain] CampApiApplication - Error Message Logged !!!
java.lang.NullPointerException: NullError
	at com.camp.campApi.CampApiApplication.main(CampApiApplication.java:21) [classes/:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:567) ~[?:?]
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49) [spring-boot-devtools-2.4.2.jar:2.4.2]
[INFO ] 2021-04-25 19:29:53.036 [restartedMain] CampApiApplication - Starting CampApiApplication using Java 12.0.1 on network4 with PID 7760 (J:\jav\campApi\target\classes started by m.bandpey in J:\jav\campApi)
[INFO ] 2021-04-25 19:29:53.036 [restartedMain] CampApiApplication - No active profile set, falling back to default profiles: default
[INFO ] 2021-04-25 19:29:53.083 [restartedMain] DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
[INFO ] 2021-04-25 19:29:53.083 [restartedMain] DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
[INFO ] 2021-04-25 19:29:53.835 [restartedMain] RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
[INFO ] 2021-04-25 19:29:53.835 [restartedMain] RepositoryConfigurationDelegate - Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
[INFO ] 2021-04-25 19:29:53.868 [restartedMain] RepositoryConfigurationExtensionSupport - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.camp.campApi.repository.ChildPlaceRepo. If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
[INFO ] 2021-04-25 19:29:53.879 [restartedMain] RepositoryConfigurationExtensionSupport - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.camp.campApi.repository.PlaceRepo. If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
[INFO ] 2021-04-25 19:29:53.879 [restartedMain] RepositoryConfigurationExtensionSupport - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.camp.campApi.repository.ResponseRepo. If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
[INFO ] 2021-04-25 19:29:53.879 [restartedMain] RepositoryConfigurationExtensionSupport - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.camp.campApi.repository.RoleRepo. If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
[INFO ] 2021-04-25 19:29:53.879 [restartedMain] RepositoryConfigurationExtensionSupport - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.camp.campApi.repository.UserRepo. If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
[INFO ] 2021-04-25 19:29:53.879 [restartedMain] RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 42 ms. Found 0 JDBC repository interfaces.
[INFO ] 2021-04-25 19:29:53.890 [restartedMain] RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
[INFO ] 2021-04-25 19:29:53.890 [restartedMain] RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
[INFO ] 2021-04-25 19:29:53.945 [restartedMain] RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 46 ms. Found 5 JPA repository interfaces.
[INFO ] 2021-04-25 19:29:54.273 [restartedMain] PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@16d77eb6' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[INFO ] 2021-04-25 19:29:54.283 [restartedMain] PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[INFO ] 2021-04-25 19:29:54.573 [restartedMain] TomcatWebServer - Tomcat initialized with port(s): 8085 (http)
[INFO ] 2021-04-25 19:29:54.583 [restartedMain] Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8085"]
[INFO ] 2021-04-25 19:29:54.583 [restartedMain] StandardService - Starting service [Tomcat]
[INFO ] 2021-04-25 19:29:54.583 [restartedMain] StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.41]
[INFO ] 2021-04-25 19:29:54.763 [restartedMain] [/] - Initializing Spring embedded WebApplicationContext
[INFO ] 2021-04-25 19:29:54.763 [restartedMain] ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1680 ms
[INFO ] 2021-04-25 19:29:54.933 [restartedMain] LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
[INFO ] 2021-04-25 19:29:54.973 [restartedMain] Version - HHH000412: Hibernate ORM core version 5.4.27.Final
[INFO ] 2021-04-25 19:29:55.083 [restartedMain] Version - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
[INFO ] 2021-04-25 19:29:55.163 [restartedMain] HikariDataSource - HikariPool-1 - Starting...
[INFO ] 2021-04-25 19:29:55.253 [restartedMain] HikariDataSource - HikariPool-1 - Start completed.
[INFO ] 2021-04-25 19:29:55.263 [restartedMain] Dialect - HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
[INFO ] 2021-04-25 19:29:56.169 [restartedMain] JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[INFO ] 2021-04-25 19:29:56.169 [restartedMain] LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
[INFO ] 2021-04-25 19:29:56.219 [restartedMain] OptionalLiveReloadServer - LiveReload server is running on port 35729
[WARN ] 2021-04-25 19:29:56.942 [restartedMain] JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
[INFO ] 2021-04-25 19:29:57.212 [restartedMain] DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@59300d87, org.springframework.security.web.context.SecurityContextPersistenceFilter@24990142, org.springframework.security.web.header.HeaderWriterFilter@4863958a, org.springframework.security.web.authentication.logout.LogoutFilter@390c68a3, com.camp.campApi.security.JwtAuthorization@34d413fe, com.camp.campApi.security.JwtAuthentication@726fe02d, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@9606317, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@7f3b92b8, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@321c5b77, org.springframework.security.web.session.SessionManagementFilter@708bce0a, org.springframework.security.web.access.ExceptionTranslationFilter@582e3cef, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@3a4ced0]
[INFO ] 2021-04-25 19:29:57.322 [restartedMain] ThreadPoolTaskExecutor - Initializing ExecutorService 'applicationTaskExecutor'
[INFO ] 2021-04-25 19:29:57.672 [restartedMain] Http11NioProtocol - Starting ProtocolHandler ["http-nio-8085"]
[INFO ] 2021-04-25 19:29:57.832 [restartedMain] TomcatWebServer - Tomcat started on port(s): 8085 (http) with context path ''
[INFO ] 2021-04-25 19:29:57.842 [restartedMain] CampApiApplication - Started CampApiApplication in 5.177 seconds (JVM running for 9.029)
[INFO ] 2021-04-25 19:30:25.475 [http-nio-8085-exec-1] [/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
[INFO ] 2021-04-25 19:30:25.475 [http-nio-8085-exec-1] DispatcherServlet - Initializing Servlet 'dispatcherServlet'
[INFO ] 2021-04-25 19:30:25.475 [http-nio-8085-exec-1] DispatcherServlet - Completed initialization in 0 ms
